{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/2.png","path":"images/2.png","modified":1,"renderable":0},{"_id":"source/upload_pictures/Figure_1.png","path":"upload_pictures/Figure_1.png","modified":1,"renderable":0},{"_id":"source/upload_pictures/indexCK1-2.png","path":"upload_pictures/indexCK1-2.png","modified":1,"renderable":0},{"_id":"source/images/R/R-1.png","path":"images/R/R-1.png","modified":1,"renderable":0},{"_id":"source/images/R/R-2.png","path":"images/R/R-2.png","modified":1,"renderable":0},{"_id":"source/images/R/R-3.png","path":"images/R/R-3.png","modified":1,"renderable":0},{"_id":"source/images/R/R-4.png","path":"images/R/R-4.png","modified":1,"renderable":0},{"_id":"source/images/common/jugelizi.jpg","path":"images/common/jugelizi.jpg","modified":1,"renderable":0},{"_id":"source/images/data_analyze/2.png","path":"images/data_analyze/2.png","modified":1,"renderable":0},{"_id":"source/images/data_analyze/1.png","path":"images/data_analyze/1.png","modified":1,"renderable":0},{"_id":"source/images/data_analyze/3.png","path":"images/data_analyze/3.png","modified":1,"renderable":0},{"_id":"source/images/data_analyze/4.png","path":"images/data_analyze/4.png","modified":1,"renderable":0},{"_id":"source/images/hexo/1.png","path":"images/hexo/1.png","modified":1,"renderable":0},{"_id":"source/images/hexo/2.png","path":"images/hexo/2.png","modified":1,"renderable":0},{"_id":"source/images/python/1.png","path":"images/python/1.png","modified":1,"renderable":0},{"_id":"source/images/python/2.png","path":"images/python/2.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/1.png","path":"images/shouhuo/1.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/11.png","path":"images/shouhuo/11.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/12.png","path":"images/shouhuo/12.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/10.png","path":"images/shouhuo/10.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/13.png","path":"images/shouhuo/13.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/14.png","path":"images/shouhuo/14.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/2.png","path":"images/shouhuo/2.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/4.png","path":"images/shouhuo/4.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/5.png","path":"images/shouhuo/5.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/7.png","path":"images/shouhuo/7.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/8.png","path":"images/shouhuo/8.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/9.png","path":"images/shouhuo/9.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/TIM截图20180314192717.png","path":"images/shouhuo/TIM截图20180314192717.png","modified":1,"renderable":0},{"_id":"source/upload_pictures/shouhuo/2.png","path":"upload_pictures/shouhuo/2.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"source/images/shouhuo/3.png","path":"images/shouhuo/3.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/6.png","path":"images/shouhuo/6.png","modified":1,"renderable":0},{"_id":"source/images/shouhuo/TIM截图20180315112242.png","path":"images/shouhuo/TIM截图20180315112242.png","modified":1,"renderable":0},{"_id":"source/upload_pictures/shouhuo/1.png","path":"upload_pictures/shouhuo/1.png","modified":1,"renderable":0},{"_id":"themes/next/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/love.js","path":"js/src/love.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/love.txt","path":"js/src/love.txt","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/qingyin.gif","path":"images/qingyin.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"source/blog-logo.jpg","path":"blog-logo.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"6f8998379f4c773f0937efc9c7a6cf44dfa0c9c0","modified":1522283933151},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1522283933393},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1522283933395},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1522283933396},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1522283933398},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1522283933400},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1522283933399},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1522283933402},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1522283933404},{"_id":"themes/next/README.cn.md","hash":"87950c415dd162ff78e98b41f1148b85462103e2","modified":1522283933405},{"_id":"themes/next/README.md","hash":"859b0d6bce260588cee246674dc837b7280dfc8b","modified":1522283933407},{"_id":"themes/next/_config.yml","hash":"434e4bcccf897364c08bda2cd08dfe22cc12fb16","modified":1522283933416},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1522283933418},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1522283933419},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1522283933628},{"_id":"source/_posts/R语言入门.md","hash":"def20445c6bc3969a0c2d73e85e6d179331f334a","modified":1522283933153},{"_id":"source/_posts/Sublime Text3插件整理(待续).md","hash":"d766720bc0d3c28ad078745294d7316c0070dc93","modified":1522283933154},{"_id":"source/_posts/Sublime-Text3-常用快捷键.md","hash":"a5fdd8b41ca6728baa9f99e5bcf3e7ab75980c19","modified":1522283933156},{"_id":"source/_posts/django-安装和运行.md","hash":"78c6f38a0cd37d7bfccc0d9bcde197e0ad218cc2","modified":1522283933157},{"_id":"source/_posts/hexo和github-page博客next主题提交远程问题（多端同步编写博客）.md","hash":"ea64a0ad2c35a23b8a3affc441c4f22f2ec2a8a2","modified":1522283933158},{"_id":"source/_posts/hexo添加字数统计、阅读时长.md","hash":"7a96b1ec1c1ea259cf60e155773dfa6dcec16b92","modified":1522283933159},{"_id":"source/_posts/select-into-from-和-insert-into-select的区别.md","hash":"ccf74b6fe38a6caf96de3c70e289f658329a2a61","modified":1522283933161},{"_id":"source/_posts/sublime-text3-便携版制作.md","hash":"b608a59bfa1d367c722477d2b89866fb31d679b5","modified":1522283933162},{"_id":"source/_posts/windows-下安装-mysql5-7-zip版.md","hash":"7eb8afcd42b430d76698c0540ade9b827740e04d","modified":1522283933163},{"_id":"source/_posts/使用Github-Page和Hexo搭建博客（下）.md","hash":"11de45f2764528f57a4467b6963e167823512149","modified":1522283933165},{"_id":"source/_posts/利用Python、R、Excel做频数统计并绘制条形图和饼图.md","hash":"c904c914c79701388d8b18e19401f085f35d8fb4","modified":1522283933166},{"_id":"source/_posts/利用Python、R、Excel计算加权平均数.md","hash":"7d5363e561f7f011bbf656223e85814dd5f67bd8","modified":1523198674229},{"_id":"source/_posts/利用hexo和github-page搭建博客（上）.md","hash":"9c42c7d3ff7ca1769a97805178bb5c94c2a482d2","modified":1522283933167},{"_id":"source/_posts/商务与经济统计-（一）数据与统计资料.md","hash":"3c987bbfcf3aa56d96ef9692d1614911867cba6a","modified":1522283933168},{"_id":"source/_posts/商务与经济统计-（二）描述统计学一：表格法和图形法.md","hash":"d43247e1d20bbfd9a2c49cf022497e27466485cc","modified":1522283933170},{"_id":"source/_posts/收获不止Oracle-体系结构.md","hash":"6366722b8680efa1b3ca8d73d856bb66b3ac0555","modified":1522283933171},{"_id":"source/_posts/收获不止Oracle-内存参数的调整.md","hash":"865f599a2c922a3c58f33014c218afc44f668f29","modified":1522283933172},{"_id":"source/_posts/收获不止Oracle-各种文件的位置.md","hash":"44bd5b97b486a4db17cf159acde042484ad418b6","modified":1522283933174},{"_id":"source/_posts/收获不止Oracle-提交和回滚.md","hash":"896bbabe086758662ba8fd27df083a36e2727ee8","modified":1522283933175},{"_id":"source/_posts/收获不止Oracle-数据一致读.md","hash":"2c4c4bca2b9a8d80e1002ec6fc63bf770fe0ed5a","modified":1522283933176},{"_id":"source/_posts/收获不止Oracle-进程查看及数据库启停.md","hash":"7661305eab0c44358182554e07498d1423081d72","modified":1522283933178},{"_id":"source/about/index.md","hash":"3e009b2466a547dff5d8145ed578c9060377ae23","modified":1522283933179},{"_id":"source/categories/index.md","hash":"b6e0ebad9d0ec312f51824d7b44c616f0508963b","modified":1522283933196},{"_id":"source/images/2.png","hash":"7ef304bdad76d9d986315d09cf9850413ba8ff51","modified":1522283933199},{"_id":"source/tags/index.md","hash":"fd8094100c8bc222b3d9f0b24982c716bfdaf545","modified":1522283933241},{"_id":"source/upload_pictures/Figure_1.png","hash":"267ff0106c1675b275bf82b2fca4114ceffbea2a","modified":1522283933244},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1522283933422},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1522283933423},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1522283933425},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1522283933427},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1522283933434},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1522283933437},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1522283933439},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1522283933440},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1522283933443},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1522283933444},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1522283933446},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1522283933447},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1522283933448},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1522283933449},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1522283933451},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1522283933452},{"_id":"themes/next/layout/_layout.swig","hash":"5003c58fbb373a0849a5be05150b86d5141f7f58","modified":1522283933467},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1522283933619},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1522283933620},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1522283933621},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1522283933622},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1522283933623},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1522283933625},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1522283933626},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1522283933635},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1522283933637},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1522283934115},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1522283934117},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1522283934118},{"_id":"source/upload_pictures/indexCK1-2.png","hash":"db7d83fa1979cde99e6d8a68c81bee0a1d4d3205","modified":1522283933246},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522283933874},{"_id":"source/images/R/R-1.png","hash":"792290e39a0e2f11bb744b69dad04cfe88b2aa91","modified":1522283933201},{"_id":"source/images/R/R-2.png","hash":"9e35a502038b8038a3a652b1addb2d37f15b2399","modified":1522283933202},{"_id":"source/images/R/R-3.png","hash":"01b1b86d702bca3682e37653a64560bd10c9cd04","modified":1522283933204},{"_id":"source/images/R/R-4.png","hash":"e82e426c155610c2d8dc872f901731c68be1b9e4","modified":1522283933205},{"_id":"source/images/common/jugelizi.jpg","hash":"3a1b6a33688c5be5b2814e58df06bc6026568f66","modified":1522283933206},{"_id":"source/images/data_analyze/2.png","hash":"6c7f6a381000564ae49c35ba1565faac17fa7688","modified":1523198020100},{"_id":"source/images/data_analyze/1.png","hash":"ed7218ca61874a842794eb13c43f684861314fd1","modified":1523198209517},{"_id":"source/images/data_analyze/3.png","hash":"fd09f801c46ef76b9988a1130e9d5d644e76a448","modified":1523198561532},{"_id":"source/images/data_analyze/4.png","hash":"641dc0f8a95412bc3e7557e912caaf06c0375e56","modified":1523197211031},{"_id":"source/images/hexo/1.png","hash":"f8908baabfd1befa36e639f30d0835bba294e3f0","modified":1522283933208},{"_id":"source/images/hexo/2.png","hash":"9af013456f7bd6fce8ad18aaf56873a25130b0d5","modified":1522283933211},{"_id":"source/images/python/1.png","hash":"69cdd65246cef43c09d20ec346e958162e7f05f5","modified":1522283933213},{"_id":"source/images/python/2.png","hash":"472bee2bb8bcaf8ca9db0d63e548f4e84f602a4e","modified":1522283933214},{"_id":"source/images/shouhuo/1.png","hash":"6f7efc01899a5ea8e8b794d0b6876f83120027c0","modified":1522283933216},{"_id":"source/images/shouhuo/11.png","hash":"a1bda8426732c899ac46bee23a2f82f5f0dfe677","modified":1522283933219},{"_id":"source/images/shouhuo/12.png","hash":"03a67ef7fdcb7fab82b79b957b95621d289ccd7c","modified":1522283933221},{"_id":"source/images/shouhuo/10.png","hash":"ce40e592d934e89bc99aeb257eca98c2332df164","modified":1522283933218},{"_id":"source/images/shouhuo/13.png","hash":"5e5a14c90a9acfcd34e1639fe0b33481e2d1e20b","modified":1522283933224},{"_id":"source/images/shouhuo/14.png","hash":"6c253347d5c7d3dc6de72a84206c8d07da5cbcd3","modified":1522283933226},{"_id":"source/images/shouhuo/2.png","hash":"f7d94ab88d93e6e7980ee8c089a773bfbbbd88df","modified":1522283933227},{"_id":"source/images/shouhuo/4.png","hash":"3ab09cbb84cde15160e96f88be66a6a1bdfeba88","modified":1522283933230},{"_id":"source/images/shouhuo/5.png","hash":"4ff12d99d989d0c3120a01c1796cc755dbb22ba4","modified":1522283933232},{"_id":"source/images/shouhuo/7.png","hash":"70ba2a24f93cc3f76e24c3e81acd8cb8078ba90f","modified":1522283933235},{"_id":"source/images/shouhuo/8.png","hash":"9785c8381f5b1ea7dcbac9fc510969de6a9180a4","modified":1522283933236},{"_id":"source/images/shouhuo/9.png","hash":"cee8da83f9bba0e902a0f40306918bcec9c873d4","modified":1522283933237},{"_id":"source/images/shouhuo/TIM截图20180314192717.png","hash":"2098dbd15a8995f617026a3bfddc8c9b2c116257","modified":1522283933238},{"_id":"source/upload_pictures/shouhuo/2.png","hash":"7ef304bdad76d9d986315d09cf9850413ba8ff51","modified":1522283933251},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1522283933464},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1522283933465},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"396feef13c2f0a2241d70b28a304e6583d3d32f8","modified":1522283933468},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1522283933469},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1522283933471},{"_id":"themes/next/layout/_macro/post.swig","hash":"5c55eaa4e48bcf28505ba3c454abd1a4ca4ed660","modified":1522283933472},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1522283933473},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1522283933474},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1522283933477},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1522283933479},{"_id":"themes/next/layout/_partials/footer.swig","hash":"1801f43a4872daaa33e9b2884ee28cf7f6c6c513","modified":1522283933480},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1522283933491},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1522283933496},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1522283933497},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1522283933498},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1522283933499},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1522283933523},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1522283933525},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1522283933535},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1522283933580},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1522283933581},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1522283933582},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1522283933584},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1522283933585},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1522283933596},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1522283933598},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1522283933639},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1522283933642},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1522283933643},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1522283933645},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1522283933647},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1522283933648},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1522283933650},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1522283933651},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1522283933652},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1522283933872},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1522283933878},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1522283933876},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1522283933880},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1522283933881},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1522283933883},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1522283933884},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1522283933885},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1522283933886},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1522283933888},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1522283933889},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1522283933891},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1522283933892},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1522283933895},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1522283933897},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1522283933898},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1522283933902},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1522283933903},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1522283933905},{"_id":"source/images/shouhuo/3.png","hash":"4a271bb2d7f1679592cbf8835dd567257dc02b90","modified":1522283933229},{"_id":"source/images/shouhuo/6.png","hash":"d4a3ae628ec77976aac0bcfd6903487c0a0c1c72","modified":1522283933233},{"_id":"source/images/shouhuo/TIM截图20180315112242.png","hash":"8fcd8e5998a2ec1efa9b40a59eb184c236fdd7b7","modified":1522283933240},{"_id":"source/upload_pictures/shouhuo/1.png","hash":"4a271bb2d7f1679592cbf8835dd567257dc02b90","modified":1522283933249},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522283933532},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522283933531},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522283933822},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522283933821},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522283933826},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522283933867},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522283933871},{"_id":"themes/next/source/images/favicon.ico","hash":"a9b1dce8f1719285a831f44720afc3f4ee8f3fc9","modified":1522283933894},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1522283933493},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1522283933495},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1522283933502},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1522283933501},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1522283933504},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1522283933507},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1522283933508},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1522283933509},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1522283933521},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1522283933527},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1522283933530},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1522283933533},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1522283933538},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1522283933539},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1522283933541},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1522283933542},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1522283933544},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1522283933546},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1522283933551},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1522283933552},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1522283933555},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1522283933556},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1522283933560},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1522283933561},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1522283933563},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1522283933565},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1522283933567},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1522283933569},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1522283933570},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1522283933572},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1522283933573},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1522283933574},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1522283933575},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1522283933577},{"_id":"themes/next/layout/_third-party/daovoice/daovoice.swig","hash":"ba759e90f7ef1214e15509f702dc7931af5e4d08","modified":1522283933578},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1522283933603},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1522283933605},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1522283933617},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1522283933618},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"bc124047ab25eee935ed9da15f4fd86298f8ffae","modified":1522283933818},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1522283933820},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1522283933824},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1522283933825},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1522283933865},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1522283933867},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1522283933869},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1522283933870},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1522283933975},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1522283933982},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1522283933987},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1522283933988},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1522283933985},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1522283934014},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1522283934015},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1522283934017},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1522283934018},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1522283934024},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1522283934025},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1522283934027},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1522283934028},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1522283934029},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1522283934052},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1522283934056},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1522283934059},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1522283934058},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1522283934061},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1522283934062},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1522283934064},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1522283934066},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1522283934068},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1522283934069},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1522283934071},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1522283934072},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1522283934074},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1522283934075},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1522283934078},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1522283934076},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1522283934079},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1522283934080},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1522283934081},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1522283934082},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1522283934083},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1522283934085},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1522283934086},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1522283934087},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1522283934089},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1522283934091},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1522283934092},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1522283934104},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1522283934106},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1522283934110},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1522283934112},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1522283934113},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1522283933908},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1522283933910},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1522283933907},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1522283933912},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1522283933940},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1522283933939},{"_id":"themes/next/source/js/src/love.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1522283933941},{"_id":"themes/next/source/js/src/love.txt","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1522283933943},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1522283933945},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1522283933946},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1522283933952},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1522283933954},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1522283933953},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1522283934054},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1522283933601},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1522283933602},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1522283933665},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1522283933667},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1522283933669},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1522283933670},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1522283933671},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1522283933706},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1522283933777},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1522283933808},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1522283933810},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1522283933811},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1522283933813},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1522283933815},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1522283933814},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1522283933806},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1522283933830},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1522283933832},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1522283933834},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1522283933835},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1522283933836},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1522283933837},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1522283933839},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1522283933840},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1522283933854},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1522283933856},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1522283933857},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1522283933860},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1522283933858},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1522283933862},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1522283933845},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1522283933847},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1522283933848},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1522283933849},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1522283933851},{"_id":"themes/next/source/images/qingyin.gif","hash":"73e1551a6bf18e4d15ed6bbd46498d589e670b62","modified":1522283933901},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1522283933969},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1522283933972},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1522283933974},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1522283933991},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1522283933992},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1522283933994},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1522283933996},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1522283933997},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1522283933998},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1522283934009},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1522283934011},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1522283934012},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1522283934020},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1522283934022},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1522283934031},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1522283934034},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1522283934033},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1522283934100},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1522283934102},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1522283933949},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1522283933970},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1522283934048},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1522283934050},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1522283934108},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1522283933673},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1522283933676},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1522283933678},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1522283933679},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1522283933682},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1522283933690},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1522283933692},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1522283933695},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1522283933697},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1522283933699},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1522283933702},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1522283933700},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1522283933704},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1522283933705},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1522283933717},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1522283933719},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1522283933721},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1522283933722},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1522283933724},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1522283933727},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1522283933725},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1522283933729},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1522283933732},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1522283933731},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1522283933733},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1522283933754},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1522283933759},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1522283933758},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1522283933756},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1522283933762},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1522283933764},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1522283933766},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1522283933767},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1522283933769},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1522283933770},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1522283933772},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1522283933773},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1522283933775},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1522283933776},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1522283933779},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1522283933781},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1522283933782},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1522283933784},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1522283933785},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1522283933787},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1522283933788},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1522283933789},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1522283933791},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1522283933792},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1522283933794},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1522283933796},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1522283933797},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1522283933798},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1522283933800},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1522283933801},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1522283933802},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1522283933803},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1522283933805},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1522283933844},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1522283933841},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1522283933853},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1522283933960},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1522283933962},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1522283933964},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1522283933966},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1522283933967},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1522283934000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1522283934002},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1522283934003},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1522283934005},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1522283934006},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1522283934007},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1522283934037},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1522283934040},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1522283934046},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1522283933980},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1522283934097},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1522283934043},{"_id":"source/blog-logo.jpg","hash":"fb36b2279172173e92bf1eee6f77eef466a933b3","modified":1522283933194}],"Category":[{"name":"软件","_id":"cjfqx7wxh0004b46w7sto1on0"},{"name":"R语言","_id":"cjfqx7wxx000eb46w6t460kav"},{"name":"收获不止Oracle","_id":"cjfqx7wy3000lb46w6bnw78dr"},{"name":"hexo","_id":"cjfqx7wy9000sb46wuqtl14r6"},{"name":"python","_id":"cjfqx7wyd000yb46w1ik1wk1x"},{"name":"MySQL","_id":"cjfqx7wyi0016b46wn8mtvzsr"},{"name":"商务与经济统计","_id":"cjfqx7wyr001kb46w2q8nqaap"}],"Data":[],"Page":[{"title":"categories","date":"2018-02-06T03:48:47.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-02-06 11:48:47\ntype: categories\n---\n","updated":"2018-03-29T00:38:53.196Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjfqx7wxb0001b46wb55enrvc","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2018-01-29T16:31:55.000Z","_content":"## 关于我\nAboout Me\n\nEmail: 17600232953@163.com\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-01-30 00:31:55\n---\n## 关于我\nAboout Me\n\nEmail: 17600232953@163.com\n","updated":"2018-03-29T00:38:53.179Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjfqx7wxf0003b46wlsgt63uj","content":"<h2 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h2><p>Aboout Me</p>\n<p>Email: 17600232953@163.com</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h2><p>Aboout Me</p>\n<p>Email: 17600232953@163.com</p>\n"},{"title":"tags","date":"2018-01-29T16:06:04.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-01-30 00:06:04\ntype: \"tags\"\n---\n","updated":"2018-03-29T00:38:53.241Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjfqx7x4s002ob46w6fi67rxm","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Sublime Text3插件整理(待续)","date":"2018-02-02T16:25:08.000Z","description":"Sublime Text 3插件","_content":"# Sublime Text 3插件整理\n\n## MarkDown Editing\n    markdown编辑查看，适当的颜色高亮和其他功能。 \n<!--more-->\n## ColorPicker\n    使用ctrl+shift+c快捷键调用颜色选择器。\n\n## SublimeREPL\n    这可能是对程序员很有用的插件。SublimeREPL 允许你在 Sublime Text 中运行各种语言（NodeJS ， Python，Ruby， Scala 和 Haskell 等等）。\n\n## Ctags\n    函数跳转，类似ide点击进入函数定义，alt+<-返回原处等。由于是正则匹配实现，要求代码很规范。插件相对来说有些麻烦。\n\n## SublimeLinter\n    前端编辑利器，高亮提示用户编写代码中存在的不规范和错误的写法。\n\n## SideBarEnhancements\n    右键增强插件。该插件还能让我们自定义快捷键呼出某个浏览器以预览页面。\n    安装插件后，点击点击菜单栏的preferences->package setting->side bar->Key Building-User，键入以下代码：\n```\n    [   \n    { \"keys\": [\"ctrl+shift+c\"], \"command\": \"copy_path\" },\n    //chrome\n    { \"keys\": [\"f2\"], \"command\": \"side_bar_files_open_with\",\n            \"args\": {\n                \"paths\": [],\n                \"application\": \"浏览器程序路径\",\n                \"extensions\":\".*\"\n            }\n     }\n]\n```\n## SublimeTmpl\n    快速生成文件模板。默认快捷键：\n    '''\n        ctrl+alt+h html\n        ctrl+alt+j javascript\n        ctrl+alt+c css\n        ctrl+alt+p php\n        ctrl+alt+r ruby\n        ctrl+alt+shift+p python\n    '''\n    新建其他类型文件模板TODO\n\n## advancedNewFile\n    快速创建文件 ctrl+alt+n  \n\n    若保存.md文件时无法保存到当前文件夹，可安装AdvancedNewFile插件，方法与前面两款插件相同，并且进行设置，同样将default的设置代码复制到User，找到\"default_root\": \"project_folder\",，把project_folder改为current，保存。\n\n## ConvertToUTF8\n打开文件自动转换为utf8显示\n\n## Bracket Highlighter\n    用于匹配括号，引号和html标签。\n\n## ChineseLocalizations\n    让sublime汉化的插件\n\n## Emmet\n    快速编写html/css。\n\n## Sublime CodeIntel \n    代码自动提示","source":"_posts/Sublime Text3插件整理(待续).md","raw":"---\ntitle: Sublime Text3插件整理(待续)\ndate: 2018-02-03 00:25:08\ntags: sublime\ncategories: 软件\ndescription: Sublime Text 3插件\n---\n# Sublime Text 3插件整理\n\n## MarkDown Editing\n    markdown编辑查看，适当的颜色高亮和其他功能。 \n<!--more-->\n## ColorPicker\n    使用ctrl+shift+c快捷键调用颜色选择器。\n\n## SublimeREPL\n    这可能是对程序员很有用的插件。SublimeREPL 允许你在 Sublime Text 中运行各种语言（NodeJS ， Python，Ruby， Scala 和 Haskell 等等）。\n\n## Ctags\n    函数跳转，类似ide点击进入函数定义，alt+<-返回原处等。由于是正则匹配实现，要求代码很规范。插件相对来说有些麻烦。\n\n## SublimeLinter\n    前端编辑利器，高亮提示用户编写代码中存在的不规范和错误的写法。\n\n## SideBarEnhancements\n    右键增强插件。该插件还能让我们自定义快捷键呼出某个浏览器以预览页面。\n    安装插件后，点击点击菜单栏的preferences->package setting->side bar->Key Building-User，键入以下代码：\n```\n    [   \n    { \"keys\": [\"ctrl+shift+c\"], \"command\": \"copy_path\" },\n    //chrome\n    { \"keys\": [\"f2\"], \"command\": \"side_bar_files_open_with\",\n            \"args\": {\n                \"paths\": [],\n                \"application\": \"浏览器程序路径\",\n                \"extensions\":\".*\"\n            }\n     }\n]\n```\n## SublimeTmpl\n    快速生成文件模板。默认快捷键：\n    '''\n        ctrl+alt+h html\n        ctrl+alt+j javascript\n        ctrl+alt+c css\n        ctrl+alt+p php\n        ctrl+alt+r ruby\n        ctrl+alt+shift+p python\n    '''\n    新建其他类型文件模板TODO\n\n## advancedNewFile\n    快速创建文件 ctrl+alt+n  \n\n    若保存.md文件时无法保存到当前文件夹，可安装AdvancedNewFile插件，方法与前面两款插件相同，并且进行设置，同样将default的设置代码复制到User，找到\"default_root\": \"project_folder\",，把project_folder改为current，保存。\n\n## ConvertToUTF8\n打开文件自动转换为utf8显示\n\n## Bracket Highlighter\n    用于匹配括号，引号和html标签。\n\n## ChineseLocalizations\n    让sublime汉化的插件\n\n## Emmet\n    快速编写html/css。\n\n## Sublime CodeIntel \n    代码自动提示","slug":"Sublime Text3插件整理(待续)","published":1,"updated":"2018-03-29T00:38:53.154Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wx70000b46wso2j43rt","content":"<h1 id=\"Sublime-Text-3插件整理\"><a href=\"#Sublime-Text-3插件整理\" class=\"headerlink\" title=\"Sublime Text 3插件整理\"></a>Sublime Text 3插件整理</h1><h2 id=\"MarkDown-Editing\"><a href=\"#MarkDown-Editing\" class=\"headerlink\" title=\"MarkDown Editing\"></a>MarkDown Editing</h2><pre><code>markdown编辑查看，适当的颜色高亮和其他功能。 \n</code></pre><a id=\"more\"></a>\n<h2 id=\"ColorPicker\"><a href=\"#ColorPicker\" class=\"headerlink\" title=\"ColorPicker\"></a>ColorPicker</h2><pre><code>使用ctrl+shift+c快捷键调用颜色选择器。\n</code></pre><h2 id=\"SublimeREPL\"><a href=\"#SublimeREPL\" class=\"headerlink\" title=\"SublimeREPL\"></a>SublimeREPL</h2><pre><code>这可能是对程序员很有用的插件。SublimeREPL 允许你在 Sublime Text 中运行各种语言（NodeJS ， Python，Ruby， Scala 和 Haskell 等等）。\n</code></pre><h2 id=\"Ctags\"><a href=\"#Ctags\" class=\"headerlink\" title=\"Ctags\"></a>Ctags</h2><pre><code>函数跳转，类似ide点击进入函数定义，alt+&lt;-返回原处等。由于是正则匹配实现，要求代码很规范。插件相对来说有些麻烦。\n</code></pre><h2 id=\"SublimeLinter\"><a href=\"#SublimeLinter\" class=\"headerlink\" title=\"SublimeLinter\"></a>SublimeLinter</h2><pre><code>前端编辑利器，高亮提示用户编写代码中存在的不规范和错误的写法。\n</code></pre><h2 id=\"SideBarEnhancements\"><a href=\"#SideBarEnhancements\" class=\"headerlink\" title=\"SideBarEnhancements\"></a>SideBarEnhancements</h2><pre><code>右键增强插件。该插件还能让我们自定义快捷键呼出某个浏览器以预览页面。\n安装插件后，点击点击菜单栏的preferences-&gt;package setting-&gt;side bar-&gt;Key Building-User，键入以下代码：\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    [   </span><br><span class=\"line\">    &#123; &quot;keys&quot;: [&quot;ctrl+shift+c&quot;], &quot;command&quot;: &quot;copy_path&quot; &#125;,</span><br><span class=\"line\">    //chrome</span><br><span class=\"line\">    &#123; &quot;keys&quot;: [&quot;f2&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;,</span><br><span class=\"line\">            &quot;args&quot;: &#123;</span><br><span class=\"line\">                &quot;paths&quot;: [],</span><br><span class=\"line\">                &quot;application&quot;: &quot;浏览器程序路径&quot;,</span><br><span class=\"line\">                &quot;extensions&quot;:&quot;.*&quot;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h2 id=\"SublimeTmpl\"><a href=\"#SublimeTmpl\" class=\"headerlink\" title=\"SublimeTmpl\"></a>SublimeTmpl</h2><pre><code>快速生成文件模板。默认快捷键：\n&apos;&apos;&apos;\n    ctrl+alt+h html\n    ctrl+alt+j javascript\n    ctrl+alt+c css\n    ctrl+alt+p php\n    ctrl+alt+r ruby\n    ctrl+alt+shift+p python\n&apos;&apos;&apos;\n新建其他类型文件模板TODO\n</code></pre><h2 id=\"advancedNewFile\"><a href=\"#advancedNewFile\" class=\"headerlink\" title=\"advancedNewFile\"></a>advancedNewFile</h2><pre><code>快速创建文件 ctrl+alt+n  \n\n若保存.md文件时无法保存到当前文件夹，可安装AdvancedNewFile插件，方法与前面两款插件相同，并且进行设置，同样将default的设置代码复制到User，找到&quot;default_root&quot;: &quot;project_folder&quot;,，把project_folder改为current，保存。\n</code></pre><h2 id=\"ConvertToUTF8\"><a href=\"#ConvertToUTF8\" class=\"headerlink\" title=\"ConvertToUTF8\"></a>ConvertToUTF8</h2><p>打开文件自动转换为utf8显示</p>\n<h2 id=\"Bracket-Highlighter\"><a href=\"#Bracket-Highlighter\" class=\"headerlink\" title=\"Bracket Highlighter\"></a>Bracket Highlighter</h2><pre><code>用于匹配括号，引号和html标签。\n</code></pre><h2 id=\"ChineseLocalizations\"><a href=\"#ChineseLocalizations\" class=\"headerlink\" title=\"ChineseLocalizations\"></a>ChineseLocalizations</h2><pre><code>让sublime汉化的插件\n</code></pre><h2 id=\"Emmet\"><a href=\"#Emmet\" class=\"headerlink\" title=\"Emmet\"></a>Emmet</h2><pre><code>快速编写html/css。\n</code></pre><h2 id=\"Sublime-CodeIntel\"><a href=\"#Sublime-CodeIntel\" class=\"headerlink\" title=\"Sublime CodeIntel\"></a>Sublime CodeIntel</h2><pre><code>代码自动提示\n</code></pre>","site":{"data":{}},"excerpt":"<h1 id=\"Sublime-Text-3插件整理\"><a href=\"#Sublime-Text-3插件整理\" class=\"headerlink\" title=\"Sublime Text 3插件整理\"></a>Sublime Text 3插件整理</h1><h2 id=\"MarkDown-Editing\"><a href=\"#MarkDown-Editing\" class=\"headerlink\" title=\"MarkDown Editing\"></a>MarkDown Editing</h2><pre><code>markdown编辑查看，适当的颜色高亮和其他功能。 \n</code></pre>","more":"<h2 id=\"ColorPicker\"><a href=\"#ColorPicker\" class=\"headerlink\" title=\"ColorPicker\"></a>ColorPicker</h2><pre><code>使用ctrl+shift+c快捷键调用颜色选择器。\n</code></pre><h2 id=\"SublimeREPL\"><a href=\"#SublimeREPL\" class=\"headerlink\" title=\"SublimeREPL\"></a>SublimeREPL</h2><pre><code>这可能是对程序员很有用的插件。SublimeREPL 允许你在 Sublime Text 中运行各种语言（NodeJS ， Python，Ruby， Scala 和 Haskell 等等）。\n</code></pre><h2 id=\"Ctags\"><a href=\"#Ctags\" class=\"headerlink\" title=\"Ctags\"></a>Ctags</h2><pre><code>函数跳转，类似ide点击进入函数定义，alt+&lt;-返回原处等。由于是正则匹配实现，要求代码很规范。插件相对来说有些麻烦。\n</code></pre><h2 id=\"SublimeLinter\"><a href=\"#SublimeLinter\" class=\"headerlink\" title=\"SublimeLinter\"></a>SublimeLinter</h2><pre><code>前端编辑利器，高亮提示用户编写代码中存在的不规范和错误的写法。\n</code></pre><h2 id=\"SideBarEnhancements\"><a href=\"#SideBarEnhancements\" class=\"headerlink\" title=\"SideBarEnhancements\"></a>SideBarEnhancements</h2><pre><code>右键增强插件。该插件还能让我们自定义快捷键呼出某个浏览器以预览页面。\n安装插件后，点击点击菜单栏的preferences-&gt;package setting-&gt;side bar-&gt;Key Building-User，键入以下代码：\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    [   </span><br><span class=\"line\">    &#123; &quot;keys&quot;: [&quot;ctrl+shift+c&quot;], &quot;command&quot;: &quot;copy_path&quot; &#125;,</span><br><span class=\"line\">    //chrome</span><br><span class=\"line\">    &#123; &quot;keys&quot;: [&quot;f2&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;,</span><br><span class=\"line\">            &quot;args&quot;: &#123;</span><br><span class=\"line\">                &quot;paths&quot;: [],</span><br><span class=\"line\">                &quot;application&quot;: &quot;浏览器程序路径&quot;,</span><br><span class=\"line\">                &quot;extensions&quot;:&quot;.*&quot;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h2 id=\"SublimeTmpl\"><a href=\"#SublimeTmpl\" class=\"headerlink\" title=\"SublimeTmpl\"></a>SublimeTmpl</h2><pre><code>快速生成文件模板。默认快捷键：\n&apos;&apos;&apos;\n    ctrl+alt+h html\n    ctrl+alt+j javascript\n    ctrl+alt+c css\n    ctrl+alt+p php\n    ctrl+alt+r ruby\n    ctrl+alt+shift+p python\n&apos;&apos;&apos;\n新建其他类型文件模板TODO\n</code></pre><h2 id=\"advancedNewFile\"><a href=\"#advancedNewFile\" class=\"headerlink\" title=\"advancedNewFile\"></a>advancedNewFile</h2><pre><code>快速创建文件 ctrl+alt+n  \n\n若保存.md文件时无法保存到当前文件夹，可安装AdvancedNewFile插件，方法与前面两款插件相同，并且进行设置，同样将default的设置代码复制到User，找到&quot;default_root&quot;: &quot;project_folder&quot;,，把project_folder改为current，保存。\n</code></pre><h2 id=\"ConvertToUTF8\"><a href=\"#ConvertToUTF8\" class=\"headerlink\" title=\"ConvertToUTF8\"></a>ConvertToUTF8</h2><p>打开文件自动转换为utf8显示</p>\n<h2 id=\"Bracket-Highlighter\"><a href=\"#Bracket-Highlighter\" class=\"headerlink\" title=\"Bracket Highlighter\"></a>Bracket Highlighter</h2><pre><code>用于匹配括号，引号和html标签。\n</code></pre><h2 id=\"ChineseLocalizations\"><a href=\"#ChineseLocalizations\" class=\"headerlink\" title=\"ChineseLocalizations\"></a>ChineseLocalizations</h2><pre><code>让sublime汉化的插件\n</code></pre><h2 id=\"Emmet\"><a href=\"#Emmet\" class=\"headerlink\" title=\"Emmet\"></a>Emmet</h2><pre><code>快速编写html/css。\n</code></pre><h2 id=\"Sublime-CodeIntel\"><a href=\"#Sublime-CodeIntel\" class=\"headerlink\" title=\"Sublime CodeIntel\"></a>Sublime CodeIntel</h2><pre><code>代码自动提示\n</code></pre>"},{"title":"Sublime Text3 常用快捷键","date":"2018-02-06T08:54:03.000Z","_content":"### 选择类\n- `shift`+右键或者鼠标中键选择矩形区域，然后编辑会批量替换\n![](http://ww1.sinaimg.cn/large/006S91wdgy1fo2avfe18wj30kr0783zl.jpg)\n\n<!--more-->\n- `ctrl` 添加到选区（连续选，类似windows文件crtl+左键选择文件）\n- `alt` 从选区删除\n![](http://ww1.sinaimg.cn/large/006S91wdgy1fo2bherv9oj30qh0gy42a.jpg)\n类似这样，切掉一部分。\n\n- `ctrl` + `d`选中光标所选文本，继续操作则会选中下一个相同的文本，方便批量查找替换。\n\n选中文本按`alt` + `F3`，即可一次性选择全部的相同文本进行同时编辑。\n\n- `Ctrl` + `L`选中整行，继续操作则选择下一行，效果和`Shift` + `↓`效果一样。\n\n- `Ctrl` + `Shift` + `L`先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。\n\n- `Ctrl` + `Shift` + `M`选择括号内的内容（继续选择福括号）。可用来快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。\n\n- `Ctrl` + `M` 光标移动至括号内结束或开始的位置。\n\n- `Ctrl` + `Enter` 在下一行插入新行。举个栗子：即使光标不在行尾，也能快速向下插入一行。\n\n- `Ctrl` + `Shift` + `Enter` 在上一行插入新行。举个栗子：即使光标不在行首，也能快速向上插入一行。\n\n- `Ctrl` + `Shift` + `[` 选中代码，按下快捷键，折叠代码。\n\n- `Ctrl` + `Shift` + `]` 选中代码，按下快捷键，展开代码。\n\n- `Ctrl` + `K` + `0` 展开所有折叠代码。\n\n- `Ctrl` + `←` 向左单位性地移动光标，快速移动光标。\n\n- `Ctrl` + `→` 向右单位性地移动光标，快速移动光标。\n\n- `shift` + `↑` 向上选中多行。\n\n- `shift` + `↓` 向下选中多行。\n\n- `Shift` + `←` 向左选中文本。\n\n- `Shift` + `→` 向右选中文本。\n\n- `Ctrl` + `Shift` + `←` 向左单位性地选中文本。\n\n- `Ctrl` + `Shift` + `→` 向右单位性地选中文本。\n\n- `Ctrl` + `Shift` + `↑` 将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）。\n\n- `Ctrl` + `Shift` + `↓` 将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）。\n\n- `Ctrl` + `Alt` + `↑` 向上添加多行光标，可同时编辑多行。[^1]\n\n- `Ctrl` + `Alt` + `↓` 向下添加多行光标，可同时编辑多行。\n\n---\n### 编辑类\n\n- `Ctrl` + `J` 合并选中的多行代码为一行。举个栗子：将多行格式的CSS属性合并为一行。\n\n\n- `Ctrl` + `Shift` + `D`复制光标所在整行，插入到下一行。\n- `Tab` 向右缩进。\n- `Shift` + `Tab` 向左缩进。\n- `Ctrl` + `K` + `K` 从光标处开始删除代码至行尾。\n- `Ctrl` + `Shift` + `K` 删除整行。\n- `Ctrl` + `/` 注释单行。\n- `Ctrl` + `Shift` + `/` 注释多行。\n- `Ctrl` + `K` + `U` 转换大写。\n- `Ctrl` + `K` + `L` 转换小写。\n- `Ctrl` + `Z` 撤销。\n- `Ctrl` + `Y` 恢复撤销。\n- `Ctrl` + `U` 软撤销，感觉和 Gtrl + Z 一样。\n- `Ctrl` + `F2` 设置书签\n- `Ctrl` + `T` 左右字母互换。\n- `F6` 单词检测拼写\n\n\n---\n### 搜索类\n\n- `Ctrl` + `F` 打开底部搜索框，查找关键字。\n- `Ctrl` + `shift` + `F` 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找，略高端，未研究。\n- `Ctrl` + `P` 打开搜索框。举个栗子：\n\t- 1、输入当前项目中的文件名，快速搜索文件，\n\t- 2、输入@和关键字，查找文件中函数名，\n\t- 3、输入：和数字，跳转到文件中该行代码，\n\t- 4、输入#和关键字，查找变量名。\n\n- `Ctrl` + `G` 打开搜索框，自动带：，输入数字跳转到该行代码。举个栗子：在页面代码比较长的文件中快速定位。\n- `Ctrl` + `R` 打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。\n- `Ctrl` + `：` 打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。\n- `Ctrl` + `Shift`+`P` 打开命令框。场景栗子：打开命名框，输入关键字，调用sublime text或插件的功能，例如使用package安装插件。\n- `Esc` 退出光标多行选择，退出搜索框，命令框等。\n\n\n---\n### 显示类\n\n- `Ctrl` + `Tab` 按文件浏览过的顺序，切换当前窗口的标签页。\n- `Ctrl` + `PageDown` 向左切换当前窗口的标签页。\n- `Ctrl` + `PageUp` 向右切换当前窗口的标签页。\n- `Alt` + `Shift` + `1` 窗口分屏，恢复默认1屏（非小键盘的数字）\n- `Alt` + `Shift` + `2` 左右分屏-2列\n- `Alt` + `Shift` + `3` 左右分屏-3列\n- `Alt` + `Shift` + `4` 左右分屏-4列\n- `Alt` + `Shift` + `5` 等分4屏\n- `Alt` + `Shift` + `8` 垂直分屏-2屏\n- `Alt` + `Shift` + `9` 垂直分屏-3屏\n- `Ctrl` + `K`, `Ctrl` + `B` 开启/关闭侧边栏。\n- `F11` 全屏模式\n- `Shift` + `F11` 免打扰模式\n","source":"_posts/Sublime-Text3-常用快捷键.md","raw":"---\ntitle: Sublime Text3 常用快捷键\ndate: 2018-02-06 16:54:03\ntags: 软件 sublime\ncategories: 软件\n---\n### 选择类\n- `shift`+右键或者鼠标中键选择矩形区域，然后编辑会批量替换\n![](http://ww1.sinaimg.cn/large/006S91wdgy1fo2avfe18wj30kr0783zl.jpg)\n\n<!--more-->\n- `ctrl` 添加到选区（连续选，类似windows文件crtl+左键选择文件）\n- `alt` 从选区删除\n![](http://ww1.sinaimg.cn/large/006S91wdgy1fo2bherv9oj30qh0gy42a.jpg)\n类似这样，切掉一部分。\n\n- `ctrl` + `d`选中光标所选文本，继续操作则会选中下一个相同的文本，方便批量查找替换。\n\n选中文本按`alt` + `F3`，即可一次性选择全部的相同文本进行同时编辑。\n\n- `Ctrl` + `L`选中整行，继续操作则选择下一行，效果和`Shift` + `↓`效果一样。\n\n- `Ctrl` + `Shift` + `L`先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。\n\n- `Ctrl` + `Shift` + `M`选择括号内的内容（继续选择福括号）。可用来快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。\n\n- `Ctrl` + `M` 光标移动至括号内结束或开始的位置。\n\n- `Ctrl` + `Enter` 在下一行插入新行。举个栗子：即使光标不在行尾，也能快速向下插入一行。\n\n- `Ctrl` + `Shift` + `Enter` 在上一行插入新行。举个栗子：即使光标不在行首，也能快速向上插入一行。\n\n- `Ctrl` + `Shift` + `[` 选中代码，按下快捷键，折叠代码。\n\n- `Ctrl` + `Shift` + `]` 选中代码，按下快捷键，展开代码。\n\n- `Ctrl` + `K` + `0` 展开所有折叠代码。\n\n- `Ctrl` + `←` 向左单位性地移动光标，快速移动光标。\n\n- `Ctrl` + `→` 向右单位性地移动光标，快速移动光标。\n\n- `shift` + `↑` 向上选中多行。\n\n- `shift` + `↓` 向下选中多行。\n\n- `Shift` + `←` 向左选中文本。\n\n- `Shift` + `→` 向右选中文本。\n\n- `Ctrl` + `Shift` + `←` 向左单位性地选中文本。\n\n- `Ctrl` + `Shift` + `→` 向右单位性地选中文本。\n\n- `Ctrl` + `Shift` + `↑` 将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）。\n\n- `Ctrl` + `Shift` + `↓` 将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）。\n\n- `Ctrl` + `Alt` + `↑` 向上添加多行光标，可同时编辑多行。[^1]\n\n- `Ctrl` + `Alt` + `↓` 向下添加多行光标，可同时编辑多行。\n\n---\n### 编辑类\n\n- `Ctrl` + `J` 合并选中的多行代码为一行。举个栗子：将多行格式的CSS属性合并为一行。\n\n\n- `Ctrl` + `Shift` + `D`复制光标所在整行，插入到下一行。\n- `Tab` 向右缩进。\n- `Shift` + `Tab` 向左缩进。\n- `Ctrl` + `K` + `K` 从光标处开始删除代码至行尾。\n- `Ctrl` + `Shift` + `K` 删除整行。\n- `Ctrl` + `/` 注释单行。\n- `Ctrl` + `Shift` + `/` 注释多行。\n- `Ctrl` + `K` + `U` 转换大写。\n- `Ctrl` + `K` + `L` 转换小写。\n- `Ctrl` + `Z` 撤销。\n- `Ctrl` + `Y` 恢复撤销。\n- `Ctrl` + `U` 软撤销，感觉和 Gtrl + Z 一样。\n- `Ctrl` + `F2` 设置书签\n- `Ctrl` + `T` 左右字母互换。\n- `F6` 单词检测拼写\n\n\n---\n### 搜索类\n\n- `Ctrl` + `F` 打开底部搜索框，查找关键字。\n- `Ctrl` + `shift` + `F` 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找，略高端，未研究。\n- `Ctrl` + `P` 打开搜索框。举个栗子：\n\t- 1、输入当前项目中的文件名，快速搜索文件，\n\t- 2、输入@和关键字，查找文件中函数名，\n\t- 3、输入：和数字，跳转到文件中该行代码，\n\t- 4、输入#和关键字，查找变量名。\n\n- `Ctrl` + `G` 打开搜索框，自动带：，输入数字跳转到该行代码。举个栗子：在页面代码比较长的文件中快速定位。\n- `Ctrl` + `R` 打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。\n- `Ctrl` + `：` 打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。\n- `Ctrl` + `Shift`+`P` 打开命令框。场景栗子：打开命名框，输入关键字，调用sublime text或插件的功能，例如使用package安装插件。\n- `Esc` 退出光标多行选择，退出搜索框，命令框等。\n\n\n---\n### 显示类\n\n- `Ctrl` + `Tab` 按文件浏览过的顺序，切换当前窗口的标签页。\n- `Ctrl` + `PageDown` 向左切换当前窗口的标签页。\n- `Ctrl` + `PageUp` 向右切换当前窗口的标签页。\n- `Alt` + `Shift` + `1` 窗口分屏，恢复默认1屏（非小键盘的数字）\n- `Alt` + `Shift` + `2` 左右分屏-2列\n- `Alt` + `Shift` + `3` 左右分屏-3列\n- `Alt` + `Shift` + `4` 左右分屏-4列\n- `Alt` + `Shift` + `5` 等分4屏\n- `Alt` + `Shift` + `8` 垂直分屏-2屏\n- `Alt` + `Shift` + `9` 垂直分屏-3屏\n- `Ctrl` + `K`, `Ctrl` + `B` 开启/关闭侧边栏。\n- `F11` 全屏模式\n- `Shift` + `F11` 免打扰模式\n","slug":"Sublime-Text3-常用快捷键","published":1,"updated":"2018-03-29T00:38:53.156Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wxc0002b46wbudz6sow","content":"<h3 id=\"选择类\"><a href=\"#选择类\" class=\"headerlink\" title=\"选择类\"></a>选择类</h3><ul>\n<li><code>shift</code>+右键或者鼠标中键选择矩形区域，然后编辑会批量替换<br><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fo2avfe18wj30kr0783zl.jpg\" alt=\"\"></li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li><code>ctrl</code> 添加到选区（连续选，类似windows文件crtl+左键选择文件）</li>\n<li><p><code>alt</code> 从选区删除<br><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fo2bherv9oj30qh0gy42a.jpg\" alt=\"\"><br>类似这样，切掉一部分。</p>\n</li>\n<li><p><code>ctrl</code> + <code>d</code>选中光标所选文本，继续操作则会选中下一个相同的文本，方便批量查找替换。</p>\n</li>\n</ul>\n<p>选中文本按<code>alt</code> + <code>F3</code>，即可一次性选择全部的相同文本进行同时编辑。</p>\n<ul>\n<li><p><code>Ctrl</code> + <code>L</code>选中整行，继续操作则选择下一行，效果和<code>Shift</code> + <code>↓</code>效果一样。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>L</code>先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>M</code>选择括号内的内容（继续选择福括号）。可用来快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>M</code> 光标移动至括号内结束或开始的位置。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Enter</code> 在下一行插入新行。举个栗子：即使光标不在行尾，也能快速向下插入一行。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>Enter</code> 在上一行插入新行。举个栗子：即使光标不在行首，也能快速向上插入一行。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>[</code> 选中代码，按下快捷键，折叠代码。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>]</code> 选中代码，按下快捷键，展开代码。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>K</code> + <code>0</code> 展开所有折叠代码。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>←</code> 向左单位性地移动光标，快速移动光标。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>→</code> 向右单位性地移动光标，快速移动光标。</p>\n</li>\n<li><p><code>shift</code> + <code>↑</code> 向上选中多行。</p>\n</li>\n<li><p><code>shift</code> + <code>↓</code> 向下选中多行。</p>\n</li>\n<li><p><code>Shift</code> + <code>←</code> 向左选中文本。</p>\n</li>\n<li><p><code>Shift</code> + <code>→</code> 向右选中文本。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>←</code> 向左单位性地选中文本。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>→</code> 向右单位性地选中文本。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>↑</code> 将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>↓</code> 将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Alt</code> + <code>↑</code> 向上添加多行光标，可同时编辑多行。[^1]</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Alt</code> + <code>↓</code> 向下添加多行光标，可同时编辑多行。</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"编辑类\"><a href=\"#编辑类\" class=\"headerlink\" title=\"编辑类\"></a>编辑类</h3><ul>\n<li><code>Ctrl</code> + <code>J</code> 合并选中的多行代码为一行。举个栗子：将多行格式的CSS属性合并为一行。</li>\n</ul>\n<ul>\n<li><code>Ctrl</code> + <code>Shift</code> + <code>D</code>复制光标所在整行，插入到下一行。</li>\n<li><code>Tab</code> 向右缩进。</li>\n<li><code>Shift</code> + <code>Tab</code> 向左缩进。</li>\n<li><code>Ctrl</code> + <code>K</code> + <code>K</code> 从光标处开始删除代码至行尾。</li>\n<li><code>Ctrl</code> + <code>Shift</code> + <code>K</code> 删除整行。</li>\n<li><code>Ctrl</code> + <code>/</code> 注释单行。</li>\n<li><code>Ctrl</code> + <code>Shift</code> + <code>/</code> 注释多行。</li>\n<li><code>Ctrl</code> + <code>K</code> + <code>U</code> 转换大写。</li>\n<li><code>Ctrl</code> + <code>K</code> + <code>L</code> 转换小写。</li>\n<li><code>Ctrl</code> + <code>Z</code> 撤销。</li>\n<li><code>Ctrl</code> + <code>Y</code> 恢复撤销。</li>\n<li><code>Ctrl</code> + <code>U</code> 软撤销，感觉和 Gtrl + Z 一样。</li>\n<li><code>Ctrl</code> + <code>F2</code> 设置书签</li>\n<li><code>Ctrl</code> + <code>T</code> 左右字母互换。</li>\n<li><code>F6</code> 单词检测拼写</li>\n</ul>\n<hr>\n<h3 id=\"搜索类\"><a href=\"#搜索类\" class=\"headerlink\" title=\"搜索类\"></a>搜索类</h3><ul>\n<li><code>Ctrl</code> + <code>F</code> 打开底部搜索框，查找关键字。</li>\n<li><code>Ctrl</code> + <code>shift</code> + <code>F</code> 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找，略高端，未研究。</li>\n<li><p><code>Ctrl</code> + <code>P</code> 打开搜索框。举个栗子：</p>\n<ul>\n<li>1、输入当前项目中的文件名，快速搜索文件，</li>\n<li>2、输入@和关键字，查找文件中函数名，</li>\n<li>3、输入：和数字，跳转到文件中该行代码，</li>\n<li>4、输入#和关键字，查找变量名。</li>\n</ul>\n</li>\n<li><p><code>Ctrl</code> + <code>G</code> 打开搜索框，自动带：，输入数字跳转到该行代码。举个栗子：在页面代码比较长的文件中快速定位。</p>\n</li>\n<li><code>Ctrl</code> + <code>R</code> 打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。</li>\n<li><code>Ctrl</code> + <code>：</code> 打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。</li>\n<li><code>Ctrl</code> + <code>Shift</code>+<code>P</code> 打开命令框。场景栗子：打开命名框，输入关键字，调用sublime text或插件的功能，例如使用package安装插件。</li>\n<li><code>Esc</code> 退出光标多行选择，退出搜索框，命令框等。</li>\n</ul>\n<hr>\n<h3 id=\"显示类\"><a href=\"#显示类\" class=\"headerlink\" title=\"显示类\"></a>显示类</h3><ul>\n<li><code>Ctrl</code> + <code>Tab</code> 按文件浏览过的顺序，切换当前窗口的标签页。</li>\n<li><code>Ctrl</code> + <code>PageDown</code> 向左切换当前窗口的标签页。</li>\n<li><code>Ctrl</code> + <code>PageUp</code> 向右切换当前窗口的标签页。</li>\n<li><code>Alt</code> + <code>Shift</code> + <code>1</code> 窗口分屏，恢复默认1屏（非小键盘的数字）</li>\n<li><code>Alt</code> + <code>Shift</code> + <code>2</code> 左右分屏-2列</li>\n<li><code>Alt</code> + <code>Shift</code> + <code>3</code> 左右分屏-3列</li>\n<li><code>Alt</code> + <code>Shift</code> + <code>4</code> 左右分屏-4列</li>\n<li><code>Alt</code> + <code>Shift</code> + <code>5</code> 等分4屏</li>\n<li><code>Alt</code> + <code>Shift</code> + <code>8</code> 垂直分屏-2屏</li>\n<li><code>Alt</code> + <code>Shift</code> + <code>9</code> 垂直分屏-3屏</li>\n<li><code>Ctrl</code> + <code>K</code>, <code>Ctrl</code> + <code>B</code> 开启/关闭侧边栏。</li>\n<li><code>F11</code> 全屏模式</li>\n<li><code>Shift</code> + <code>F11</code> 免打扰模式</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"选择类\"><a href=\"#选择类\" class=\"headerlink\" title=\"选择类\"></a>选择类</h3><ul>\n<li><code>shift</code>+右键或者鼠标中键选择矩形区域，然后编辑会批量替换<br><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fo2avfe18wj30kr0783zl.jpg\" alt=\"\"></li>\n</ul>","more":"<ul>\n<li><code>ctrl</code> 添加到选区（连续选，类似windows文件crtl+左键选择文件）</li>\n<li><p><code>alt</code> 从选区删除<br><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fo2bherv9oj30qh0gy42a.jpg\" alt=\"\"><br>类似这样，切掉一部分。</p>\n</li>\n<li><p><code>ctrl</code> + <code>d</code>选中光标所选文本，继续操作则会选中下一个相同的文本，方便批量查找替换。</p>\n</li>\n</ul>\n<p>选中文本按<code>alt</code> + <code>F3</code>，即可一次性选择全部的相同文本进行同时编辑。</p>\n<ul>\n<li><p><code>Ctrl</code> + <code>L</code>选中整行，继续操作则选择下一行，效果和<code>Shift</code> + <code>↓</code>效果一样。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>L</code>先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>M</code>选择括号内的内容（继续选择福括号）。可用来快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>M</code> 光标移动至括号内结束或开始的位置。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Enter</code> 在下一行插入新行。举个栗子：即使光标不在行尾，也能快速向下插入一行。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>Enter</code> 在上一行插入新行。举个栗子：即使光标不在行首，也能快速向上插入一行。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>[</code> 选中代码，按下快捷键，折叠代码。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>]</code> 选中代码，按下快捷键，展开代码。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>K</code> + <code>0</code> 展开所有折叠代码。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>←</code> 向左单位性地移动光标，快速移动光标。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>→</code> 向右单位性地移动光标，快速移动光标。</p>\n</li>\n<li><p><code>shift</code> + <code>↑</code> 向上选中多行。</p>\n</li>\n<li><p><code>shift</code> + <code>↓</code> 向下选中多行。</p>\n</li>\n<li><p><code>Shift</code> + <code>←</code> 向左选中文本。</p>\n</li>\n<li><p><code>Shift</code> + <code>→</code> 向右选中文本。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>←</code> 向左单位性地选中文本。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>→</code> 向右单位性地选中文本。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>↑</code> 将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Shift</code> + <code>↓</code> 将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）。</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Alt</code> + <code>↑</code> 向上添加多行光标，可同时编辑多行。[^1]</p>\n</li>\n<li><p><code>Ctrl</code> + <code>Alt</code> + <code>↓</code> 向下添加多行光标，可同时编辑多行。</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"编辑类\"><a href=\"#编辑类\" class=\"headerlink\" title=\"编辑类\"></a>编辑类</h3><ul>\n<li><code>Ctrl</code> + <code>J</code> 合并选中的多行代码为一行。举个栗子：将多行格式的CSS属性合并为一行。</li>\n</ul>\n<ul>\n<li><code>Ctrl</code> + <code>Shift</code> + <code>D</code>复制光标所在整行，插入到下一行。</li>\n<li><code>Tab</code> 向右缩进。</li>\n<li><code>Shift</code> + <code>Tab</code> 向左缩进。</li>\n<li><code>Ctrl</code> + <code>K</code> + <code>K</code> 从光标处开始删除代码至行尾。</li>\n<li><code>Ctrl</code> + <code>Shift</code> + <code>K</code> 删除整行。</li>\n<li><code>Ctrl</code> + <code>/</code> 注释单行。</li>\n<li><code>Ctrl</code> + <code>Shift</code> + <code>/</code> 注释多行。</li>\n<li><code>Ctrl</code> + <code>K</code> + <code>U</code> 转换大写。</li>\n<li><code>Ctrl</code> + <code>K</code> + <code>L</code> 转换小写。</li>\n<li><code>Ctrl</code> + <code>Z</code> 撤销。</li>\n<li><code>Ctrl</code> + <code>Y</code> 恢复撤销。</li>\n<li><code>Ctrl</code> + <code>U</code> 软撤销，感觉和 Gtrl + Z 一样。</li>\n<li><code>Ctrl</code> + <code>F2</code> 设置书签</li>\n<li><code>Ctrl</code> + <code>T</code> 左右字母互换。</li>\n<li><code>F6</code> 单词检测拼写</li>\n</ul>\n<hr>\n<h3 id=\"搜索类\"><a href=\"#搜索类\" class=\"headerlink\" title=\"搜索类\"></a>搜索类</h3><ul>\n<li><code>Ctrl</code> + <code>F</code> 打开底部搜索框，查找关键字。</li>\n<li><code>Ctrl</code> + <code>shift</code> + <code>F</code> 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找，略高端，未研究。</li>\n<li><p><code>Ctrl</code> + <code>P</code> 打开搜索框。举个栗子：</p>\n<ul>\n<li>1、输入当前项目中的文件名，快速搜索文件，</li>\n<li>2、输入@和关键字，查找文件中函数名，</li>\n<li>3、输入：和数字，跳转到文件中该行代码，</li>\n<li>4、输入#和关键字，查找变量名。</li>\n</ul>\n</li>\n<li><p><code>Ctrl</code> + <code>G</code> 打开搜索框，自动带：，输入数字跳转到该行代码。举个栗子：在页面代码比较长的文件中快速定位。</p>\n</li>\n<li><code>Ctrl</code> + <code>R</code> 打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。</li>\n<li><code>Ctrl</code> + <code>：</code> 打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。</li>\n<li><code>Ctrl</code> + <code>Shift</code>+<code>P</code> 打开命令框。场景栗子：打开命名框，输入关键字，调用sublime text或插件的功能，例如使用package安装插件。</li>\n<li><code>Esc</code> 退出光标多行选择，退出搜索框，命令框等。</li>\n</ul>\n<hr>\n<h3 id=\"显示类\"><a href=\"#显示类\" class=\"headerlink\" title=\"显示类\"></a>显示类</h3><ul>\n<li><code>Ctrl</code> + <code>Tab</code> 按文件浏览过的顺序，切换当前窗口的标签页。</li>\n<li><code>Ctrl</code> + <code>PageDown</code> 向左切换当前窗口的标签页。</li>\n<li><code>Ctrl</code> + <code>PageUp</code> 向右切换当前窗口的标签页。</li>\n<li><code>Alt</code> + <code>Shift</code> + <code>1</code> 窗口分屏，恢复默认1屏（非小键盘的数字）</li>\n<li><code>Alt</code> + <code>Shift</code> + <code>2</code> 左右分屏-2列</li>\n<li><code>Alt</code> + <code>Shift</code> + <code>3</code> 左右分屏-3列</li>\n<li><code>Alt</code> + <code>Shift</code> + <code>4</code> 左右分屏-4列</li>\n<li><code>Alt</code> + <code>Shift</code> + <code>5</code> 等分4屏</li>\n<li><code>Alt</code> + <code>Shift</code> + <code>8</code> 垂直分屏-2屏</li>\n<li><code>Alt</code> + <code>Shift</code> + <code>9</code> 垂直分屏-3屏</li>\n<li><code>Ctrl</code> + <code>K</code>, <code>Ctrl</code> + <code>B</code> 开启/关闭侧边栏。</li>\n<li><code>F11</code> 全屏模式</li>\n<li><code>Shift</code> + <code>F11</code> 免打扰模式</li>\n</ul>"},{"title":"R语言入门","date":"2018-03-23T06:21:20.000Z","_content":"\n##### 运行R\n运行R有两种方式：一为命令行模式，即直接打开R.exe文件，进入带有版本信息等的控制台页面。如图\n\n![R控制台](/images/R/R-1.png)\n<!--more-->\n\n通常，R代码文件都会有后缀.R，如果创建了一个z.R文件，可以用在控制台source(\"z.R\")执行文件中的代码。\n\n![R控制台](/images/R/R-2.png)\n\n二为批处理模式，R CMD BATCH z.R\n\n![R CMD BATCH](/images/R/R-3.png)\n![R 运行结果](/images/R/R-4.png)\n\n##### 一些简单的操作\n\n    >x <- c(1,2,4)\n\nR语言的标准赋值运算符是 <-。\n\n    > x[3]\n    [1] 4\n\nR向量的元素索引是从1开始的，而非0。\n\n    > mean(x)\n    [1] 2.333333\n    > sd(x)\n    [1] 1.527525\n\nmean()平均数，sd()标准差\n\n    > mean(Nile)\n    [1] 919.35\n    > sd(Nile)\n    [1] 169.2275\n    hist(Nile)\n\n图4，直方图\n\n##### 函数\n\n    # counts the number of odd integers in x\n    > oddcount <- function(x) {\n    +     k <- 0 # assign 0 to k\n    +     for (n in x) {\n    +         if(n %%2 ==1) k <- k+1 # %% is the module operator\n    +     }\n    +     return(k)\n    + }\n    > oddcount(c(1,3,5))\n    [1] 3\n    > oddcount(c(1,2,3,7,9))\n    [1] 4\n\n计算向量中奇数的数量。\n\n##### 变量作用域\n\n这个没啥可说的，函数内部的变量在外部调用自然会报错。\n\n    > x<-3\n    > f <- function(x) return(x+10)\n    > f(x)\n    [1] 13\n    > x\n    [1] 3\n\n即使函数改变了向量的值，原本向量也不会变化，因为执行函数时是copy了一份作为局部变量使用的，即 R函数中的形参是局部变量。\n\n##### 默认参数\n    > g <- function(x, y=2, z=T) {....}\n    > g(12, z=FALSE)\n\n##### R语言中部分数据结构\n\n###### 向量\n说到向量，不得不提标量。标量，或单个的数，其实在R中并不存在，R语言把单个的数当做只有一个元素的向量。\n\n###### 字符串\n字符串实际上是字符模式（而不是数字模式）的单元素向量。\n\n    > x <- c(5,12,13)\n    > x\n    [1] 5 12 13\n    > length(x)\n    [1] 3\n    > mode(x)\n    [1] \"numeric\"\n    > y <- \"abc\"\n    > y\n    [1] \"abc\"\n    > length(y)\n    [1] 1\n    > mode(y)\n    [1] \"character\"\n\nmode()分析数据类型。\n\n    > u <- paste(\"abc\", \"de\", \"f\")\n    > u\n    [1] \"abc de f\"\n    > v <- strsplit(u, \" \") # split the string according to blanks\n    > v\n    [[1]]\n    [1] \"abc\" \"de\" \"f\"\n\npaste()字符串合并, strsplit()分割字符串，第一个参数为待分割的字符串，第二个参数为分割依据。\n\n###### 矩阵\n矩阵其实也是向量。不过多了两个附加的属性：行数和列数。\n\n    > m <- rbind(c(1,4), c(2,2))\n    > m\n         [,1] [,2]\n    [1,]    1    4\n    [2,]    2    2\n    > m %*% c(1,1)\n         [,1]\n    [1,]    5\n    [2,]    4\n\nrbind() 按行绑定。%*%矩阵乘法。\n\n###### 列表\n列表中的数据可以是不同的数据类型。\n\n    > x <- list(u=2, v=\"abc\")\n    > x\n    $u\n    [1] 2\n\n    $v\n    [1] \"abc\"\n\n    > x$u\n    [1] 2\n    > x$v\n    [1] \"abc\"\n\nx$u指的是列表x中的组件u。\n\n    > hist(Nile)\n    > hn <- hist(Nile)\n    > print(hn)\n    $breaks\n     [1]  400  500  600  700  800  900 1000 1100 1200 1300 1400\n\n    $counts\n     [1]  1  0  5 20 25 19 12 11  6  1\n\n    $density\n     [1] 0.0001 0.0000 0.0005 0.0020 0.0025 0.0019 0.0012 0.0011 0.0006 0.0001\n\n    $mids\n     [1]  450  550  650  750  850  950 1050 1150 1250 1350\n\n    $xname\n    [1] \"Nile\"\n\n    $equidist\n    [1] TRUE\n\n    attr(,\"class\")\n    [1] \"histogram\"\n\nhist函数的返回值，很显然也是一个列表。\n\n    > str(hn)\n    List of 6\n     $ breaks  : int [1:11] 400 500 600 700 800 900 1000 1100 1200 1300 ...\n     $ counts  : int [1:10] 1 0 5 20 25 19 12 11 6 1\n     $ density : num [1:10] 0.0001 0 0.0005 0.002 0.0025 0.0019 0.0012 0.0011 0.0006 0.0001\n     $ mids    : num [1:10] 450 550 650 750 850 950 1050 1150 1250 1350\n     $ xname   : chr \"Nile\"\n     $ equidist: logi TRUE\n     - attr(*, \"class\")= chr \"histogram\"\n\nstr() 代表structure结构，显示任何R对象的内部结构。和字符串可没啥关系~~~\n\n###### 数据框\n\n    > d <- data.frame(list(kids=c(\"Jack\", \"Jill\"),ages=c(12,10)))\n    > d\n      kids ages\n    1 Jack   12\n    2 Jill   10\n\n###### 类\n\n    > hn <- hist(Nile)\n    > summary(hn)\n             Length Class  Mode\n    breaks   11     -none- numeric\n    counts   10     -none- numeric\n    density  10     -none- numeric\n    mids     10     -none- numeric\n    xname     1     -none- character\n    equidist  1     -none- logical\n\nstr()查看对象时，有属性“class”，表示是个类，如果函数输出结果是一个列表，同时是一个类，可以用summary()函数生成“摘要”。\n\n##### 获取帮助\n在线帮助help()。调用help()的快捷方式是用问号（？）。\n特殊字符及保留字必须用引号括起来。比如\n\n    > ?\"<\"\n\nexample()函数获取一些示例。","source":"_posts/R语言入门.md","raw":"---\ntitle: R语言入门\ndate: 2018-03-23 14:21:20\ntags: R语言\ncategories: R语言\n---\n\n##### 运行R\n运行R有两种方式：一为命令行模式，即直接打开R.exe文件，进入带有版本信息等的控制台页面。如图\n\n![R控制台](/images/R/R-1.png)\n<!--more-->\n\n通常，R代码文件都会有后缀.R，如果创建了一个z.R文件，可以用在控制台source(\"z.R\")执行文件中的代码。\n\n![R控制台](/images/R/R-2.png)\n\n二为批处理模式，R CMD BATCH z.R\n\n![R CMD BATCH](/images/R/R-3.png)\n![R 运行结果](/images/R/R-4.png)\n\n##### 一些简单的操作\n\n    >x <- c(1,2,4)\n\nR语言的标准赋值运算符是 <-。\n\n    > x[3]\n    [1] 4\n\nR向量的元素索引是从1开始的，而非0。\n\n    > mean(x)\n    [1] 2.333333\n    > sd(x)\n    [1] 1.527525\n\nmean()平均数，sd()标准差\n\n    > mean(Nile)\n    [1] 919.35\n    > sd(Nile)\n    [1] 169.2275\n    hist(Nile)\n\n图4，直方图\n\n##### 函数\n\n    # counts the number of odd integers in x\n    > oddcount <- function(x) {\n    +     k <- 0 # assign 0 to k\n    +     for (n in x) {\n    +         if(n %%2 ==1) k <- k+1 # %% is the module operator\n    +     }\n    +     return(k)\n    + }\n    > oddcount(c(1,3,5))\n    [1] 3\n    > oddcount(c(1,2,3,7,9))\n    [1] 4\n\n计算向量中奇数的数量。\n\n##### 变量作用域\n\n这个没啥可说的，函数内部的变量在外部调用自然会报错。\n\n    > x<-3\n    > f <- function(x) return(x+10)\n    > f(x)\n    [1] 13\n    > x\n    [1] 3\n\n即使函数改变了向量的值，原本向量也不会变化，因为执行函数时是copy了一份作为局部变量使用的，即 R函数中的形参是局部变量。\n\n##### 默认参数\n    > g <- function(x, y=2, z=T) {....}\n    > g(12, z=FALSE)\n\n##### R语言中部分数据结构\n\n###### 向量\n说到向量，不得不提标量。标量，或单个的数，其实在R中并不存在，R语言把单个的数当做只有一个元素的向量。\n\n###### 字符串\n字符串实际上是字符模式（而不是数字模式）的单元素向量。\n\n    > x <- c(5,12,13)\n    > x\n    [1] 5 12 13\n    > length(x)\n    [1] 3\n    > mode(x)\n    [1] \"numeric\"\n    > y <- \"abc\"\n    > y\n    [1] \"abc\"\n    > length(y)\n    [1] 1\n    > mode(y)\n    [1] \"character\"\n\nmode()分析数据类型。\n\n    > u <- paste(\"abc\", \"de\", \"f\")\n    > u\n    [1] \"abc de f\"\n    > v <- strsplit(u, \" \") # split the string according to blanks\n    > v\n    [[1]]\n    [1] \"abc\" \"de\" \"f\"\n\npaste()字符串合并, strsplit()分割字符串，第一个参数为待分割的字符串，第二个参数为分割依据。\n\n###### 矩阵\n矩阵其实也是向量。不过多了两个附加的属性：行数和列数。\n\n    > m <- rbind(c(1,4), c(2,2))\n    > m\n         [,1] [,2]\n    [1,]    1    4\n    [2,]    2    2\n    > m %*% c(1,1)\n         [,1]\n    [1,]    5\n    [2,]    4\n\nrbind() 按行绑定。%*%矩阵乘法。\n\n###### 列表\n列表中的数据可以是不同的数据类型。\n\n    > x <- list(u=2, v=\"abc\")\n    > x\n    $u\n    [1] 2\n\n    $v\n    [1] \"abc\"\n\n    > x$u\n    [1] 2\n    > x$v\n    [1] \"abc\"\n\nx$u指的是列表x中的组件u。\n\n    > hist(Nile)\n    > hn <- hist(Nile)\n    > print(hn)\n    $breaks\n     [1]  400  500  600  700  800  900 1000 1100 1200 1300 1400\n\n    $counts\n     [1]  1  0  5 20 25 19 12 11  6  1\n\n    $density\n     [1] 0.0001 0.0000 0.0005 0.0020 0.0025 0.0019 0.0012 0.0011 0.0006 0.0001\n\n    $mids\n     [1]  450  550  650  750  850  950 1050 1150 1250 1350\n\n    $xname\n    [1] \"Nile\"\n\n    $equidist\n    [1] TRUE\n\n    attr(,\"class\")\n    [1] \"histogram\"\n\nhist函数的返回值，很显然也是一个列表。\n\n    > str(hn)\n    List of 6\n     $ breaks  : int [1:11] 400 500 600 700 800 900 1000 1100 1200 1300 ...\n     $ counts  : int [1:10] 1 0 5 20 25 19 12 11 6 1\n     $ density : num [1:10] 0.0001 0 0.0005 0.002 0.0025 0.0019 0.0012 0.0011 0.0006 0.0001\n     $ mids    : num [1:10] 450 550 650 750 850 950 1050 1150 1250 1350\n     $ xname   : chr \"Nile\"\n     $ equidist: logi TRUE\n     - attr(*, \"class\")= chr \"histogram\"\n\nstr() 代表structure结构，显示任何R对象的内部结构。和字符串可没啥关系~~~\n\n###### 数据框\n\n    > d <- data.frame(list(kids=c(\"Jack\", \"Jill\"),ages=c(12,10)))\n    > d\n      kids ages\n    1 Jack   12\n    2 Jill   10\n\n###### 类\n\n    > hn <- hist(Nile)\n    > summary(hn)\n             Length Class  Mode\n    breaks   11     -none- numeric\n    counts   10     -none- numeric\n    density  10     -none- numeric\n    mids     10     -none- numeric\n    xname     1     -none- character\n    equidist  1     -none- logical\n\nstr()查看对象时，有属性“class”，表示是个类，如果函数输出结果是一个列表，同时是一个类，可以用summary()函数生成“摘要”。\n\n##### 获取帮助\n在线帮助help()。调用help()的快捷方式是用问号（？）。\n特殊字符及保留字必须用引号括起来。比如\n\n    > ?\"<\"\n\nexample()函数获取一些示例。","slug":"R语言入门","published":1,"updated":"2018-03-29T00:38:53.153Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wxk0006b46wxtqjxk6i","content":"<h5 id=\"运行R\"><a href=\"#运行R\" class=\"headerlink\" title=\"运行R\"></a>运行R</h5><p>运行R有两种方式：一为命令行模式，即直接打开R.exe文件，进入带有版本信息等的控制台页面。如图</p>\n<p><img src=\"/images/R/R-1.png\" alt=\"R控制台\"><br><a id=\"more\"></a></p>\n<p>通常，R代码文件都会有后缀.R，如果创建了一个z.R文件，可以用在控制台source(“z.R”)执行文件中的代码。</p>\n<p><img src=\"/images/R/R-2.png\" alt=\"R控制台\"></p>\n<p>二为批处理模式，R CMD BATCH z.R</p>\n<p><img src=\"/images/R/R-3.png\" alt=\"R CMD BATCH\"><br><img src=\"/images/R/R-4.png\" alt=\"R 运行结果\"></p>\n<h5 id=\"一些简单的操作\"><a href=\"#一些简单的操作\" class=\"headerlink\" title=\"一些简单的操作\"></a>一些简单的操作</h5><pre><code>&gt;x &lt;- c(1,2,4)\n</code></pre><p>R语言的标准赋值运算符是 &lt;-。</p>\n<pre><code>&gt; x[3]\n[1] 4\n</code></pre><p>R向量的元素索引是从1开始的，而非0。</p>\n<pre><code>&gt; mean(x)\n[1] 2.333333\n&gt; sd(x)\n[1] 1.527525\n</code></pre><p>mean()平均数，sd()标准差</p>\n<pre><code>&gt; mean(Nile)\n[1] 919.35\n&gt; sd(Nile)\n[1] 169.2275\nhist(Nile)\n</code></pre><p>图4，直方图</p>\n<h5 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h5><pre><code># counts the number of odd integers in x\n&gt; oddcount &lt;- function(x) {\n+     k &lt;- 0 # assign 0 to k\n+     for (n in x) {\n+         if(n %%2 ==1) k &lt;- k+1 # %% is the module operator\n+     }\n+     return(k)\n+ }\n&gt; oddcount(c(1,3,5))\n[1] 3\n&gt; oddcount(c(1,2,3,7,9))\n[1] 4\n</code></pre><p>计算向量中奇数的数量。</p>\n<h5 id=\"变量作用域\"><a href=\"#变量作用域\" class=\"headerlink\" title=\"变量作用域\"></a>变量作用域</h5><p>这个没啥可说的，函数内部的变量在外部调用自然会报错。</p>\n<pre><code>&gt; x&lt;-3\n&gt; f &lt;- function(x) return(x+10)\n&gt; f(x)\n[1] 13\n&gt; x\n[1] 3\n</code></pre><p>即使函数改变了向量的值，原本向量也不会变化，因为执行函数时是copy了一份作为局部变量使用的，即 R函数中的形参是局部变量。</p>\n<h5 id=\"默认参数\"><a href=\"#默认参数\" class=\"headerlink\" title=\"默认参数\"></a>默认参数</h5><pre><code>&gt; g &lt;- function(x, y=2, z=T) {....}\n&gt; g(12, z=FALSE)\n</code></pre><h5 id=\"R语言中部分数据结构\"><a href=\"#R语言中部分数据结构\" class=\"headerlink\" title=\"R语言中部分数据结构\"></a>R语言中部分数据结构</h5><h6 id=\"向量\"><a href=\"#向量\" class=\"headerlink\" title=\"向量\"></a>向量</h6><p>说到向量，不得不提标量。标量，或单个的数，其实在R中并不存在，R语言把单个的数当做只有一个元素的向量。</p>\n<h6 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h6><p>字符串实际上是字符模式（而不是数字模式）的单元素向量。</p>\n<pre><code>&gt; x &lt;- c(5,12,13)\n&gt; x\n[1] 5 12 13\n&gt; length(x)\n[1] 3\n&gt; mode(x)\n[1] &quot;numeric&quot;\n&gt; y &lt;- &quot;abc&quot;\n&gt; y\n[1] &quot;abc&quot;\n&gt; length(y)\n[1] 1\n&gt; mode(y)\n[1] &quot;character&quot;\n</code></pre><p>mode()分析数据类型。</p>\n<pre><code>&gt; u &lt;- paste(&quot;abc&quot;, &quot;de&quot;, &quot;f&quot;)\n&gt; u\n[1] &quot;abc de f&quot;\n&gt; v &lt;- strsplit(u, &quot; &quot;) # split the string according to blanks\n&gt; v\n[[1]]\n[1] &quot;abc&quot; &quot;de&quot; &quot;f&quot;\n</code></pre><p>paste()字符串合并, strsplit()分割字符串，第一个参数为待分割的字符串，第二个参数为分割依据。</p>\n<h6 id=\"矩阵\"><a href=\"#矩阵\" class=\"headerlink\" title=\"矩阵\"></a>矩阵</h6><p>矩阵其实也是向量。不过多了两个附加的属性：行数和列数。</p>\n<pre><code>&gt; m &lt;- rbind(c(1,4), c(2,2))\n&gt; m\n     [,1] [,2]\n[1,]    1    4\n[2,]    2    2\n&gt; m %*% c(1,1)\n     [,1]\n[1,]    5\n[2,]    4\n</code></pre><p>rbind() 按行绑定。%*%矩阵乘法。</p>\n<h6 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h6><p>列表中的数据可以是不同的数据类型。</p>\n<pre><code>&gt; x &lt;- list(u=2, v=&quot;abc&quot;)\n&gt; x\n$u\n[1] 2\n\n$v\n[1] &quot;abc&quot;\n\n&gt; x$u\n[1] 2\n&gt; x$v\n[1] &quot;abc&quot;\n</code></pre><p>x$u指的是列表x中的组件u。</p>\n<pre><code>&gt; hist(Nile)\n&gt; hn &lt;- hist(Nile)\n&gt; print(hn)\n$breaks\n [1]  400  500  600  700  800  900 1000 1100 1200 1300 1400\n\n$counts\n [1]  1  0  5 20 25 19 12 11  6  1\n\n$density\n [1] 0.0001 0.0000 0.0005 0.0020 0.0025 0.0019 0.0012 0.0011 0.0006 0.0001\n\n$mids\n [1]  450  550  650  750  850  950 1050 1150 1250 1350\n\n$xname\n[1] &quot;Nile&quot;\n\n$equidist\n[1] TRUE\n\nattr(,&quot;class&quot;)\n[1] &quot;histogram&quot;\n</code></pre><p>hist函数的返回值，很显然也是一个列表。</p>\n<pre><code>&gt; str(hn)\nList of 6\n $ breaks  : int [1:11] 400 500 600 700 800 900 1000 1100 1200 1300 ...\n $ counts  : int [1:10] 1 0 5 20 25 19 12 11 6 1\n $ density : num [1:10] 0.0001 0 0.0005 0.002 0.0025 0.0019 0.0012 0.0011 0.0006 0.0001\n $ mids    : num [1:10] 450 550 650 750 850 950 1050 1150 1250 1350\n $ xname   : chr &quot;Nile&quot;\n $ equidist: logi TRUE\n - attr(*, &quot;class&quot;)= chr &quot;histogram&quot;\n</code></pre><p>str() 代表structure结构，显示任何R对象的内部结构。和字符串可没啥关系~~~</p>\n<h6 id=\"数据框\"><a href=\"#数据框\" class=\"headerlink\" title=\"数据框\"></a>数据框</h6><pre><code>&gt; d &lt;- data.frame(list(kids=c(&quot;Jack&quot;, &quot;Jill&quot;),ages=c(12,10)))\n&gt; d\n  kids ages\n1 Jack   12\n2 Jill   10\n</code></pre><h6 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h6><pre><code>&gt; hn &lt;- hist(Nile)\n&gt; summary(hn)\n         Length Class  Mode\nbreaks   11     -none- numeric\ncounts   10     -none- numeric\ndensity  10     -none- numeric\nmids     10     -none- numeric\nxname     1     -none- character\nequidist  1     -none- logical\n</code></pre><p>str()查看对象时，有属性“class”，表示是个类，如果函数输出结果是一个列表，同时是一个类，可以用summary()函数生成“摘要”。</p>\n<h5 id=\"获取帮助\"><a href=\"#获取帮助\" class=\"headerlink\" title=\"获取帮助\"></a>获取帮助</h5><p>在线帮助help()。调用help()的快捷方式是用问号（？）。<br>特殊字符及保留字必须用引号括起来。比如</p>\n<pre><code>&gt; ?&quot;&lt;&quot;\n</code></pre><p>example()函数获取一些示例。</p>\n","site":{"data":{}},"excerpt":"<h5 id=\"运行R\"><a href=\"#运行R\" class=\"headerlink\" title=\"运行R\"></a>运行R</h5><p>运行R有两种方式：一为命令行模式，即直接打开R.exe文件，进入带有版本信息等的控制台页面。如图</p>\n<p><img src=\"/images/R/R-1.png\" alt=\"R控制台\"><br>","more":"</p>\n<p>通常，R代码文件都会有后缀.R，如果创建了一个z.R文件，可以用在控制台source(“z.R”)执行文件中的代码。</p>\n<p><img src=\"/images/R/R-2.png\" alt=\"R控制台\"></p>\n<p>二为批处理模式，R CMD BATCH z.R</p>\n<p><img src=\"/images/R/R-3.png\" alt=\"R CMD BATCH\"><br><img src=\"/images/R/R-4.png\" alt=\"R 运行结果\"></p>\n<h5 id=\"一些简单的操作\"><a href=\"#一些简单的操作\" class=\"headerlink\" title=\"一些简单的操作\"></a>一些简单的操作</h5><pre><code>&gt;x &lt;- c(1,2,4)\n</code></pre><p>R语言的标准赋值运算符是 &lt;-。</p>\n<pre><code>&gt; x[3]\n[1] 4\n</code></pre><p>R向量的元素索引是从1开始的，而非0。</p>\n<pre><code>&gt; mean(x)\n[1] 2.333333\n&gt; sd(x)\n[1] 1.527525\n</code></pre><p>mean()平均数，sd()标准差</p>\n<pre><code>&gt; mean(Nile)\n[1] 919.35\n&gt; sd(Nile)\n[1] 169.2275\nhist(Nile)\n</code></pre><p>图4，直方图</p>\n<h5 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h5><pre><code># counts the number of odd integers in x\n&gt; oddcount &lt;- function(x) {\n+     k &lt;- 0 # assign 0 to k\n+     for (n in x) {\n+         if(n %%2 ==1) k &lt;- k+1 # %% is the module operator\n+     }\n+     return(k)\n+ }\n&gt; oddcount(c(1,3,5))\n[1] 3\n&gt; oddcount(c(1,2,3,7,9))\n[1] 4\n</code></pre><p>计算向量中奇数的数量。</p>\n<h5 id=\"变量作用域\"><a href=\"#变量作用域\" class=\"headerlink\" title=\"变量作用域\"></a>变量作用域</h5><p>这个没啥可说的，函数内部的变量在外部调用自然会报错。</p>\n<pre><code>&gt; x&lt;-3\n&gt; f &lt;- function(x) return(x+10)\n&gt; f(x)\n[1] 13\n&gt; x\n[1] 3\n</code></pre><p>即使函数改变了向量的值，原本向量也不会变化，因为执行函数时是copy了一份作为局部变量使用的，即 R函数中的形参是局部变量。</p>\n<h5 id=\"默认参数\"><a href=\"#默认参数\" class=\"headerlink\" title=\"默认参数\"></a>默认参数</h5><pre><code>&gt; g &lt;- function(x, y=2, z=T) {....}\n&gt; g(12, z=FALSE)\n</code></pre><h5 id=\"R语言中部分数据结构\"><a href=\"#R语言中部分数据结构\" class=\"headerlink\" title=\"R语言中部分数据结构\"></a>R语言中部分数据结构</h5><h6 id=\"向量\"><a href=\"#向量\" class=\"headerlink\" title=\"向量\"></a>向量</h6><p>说到向量，不得不提标量。标量，或单个的数，其实在R中并不存在，R语言把单个的数当做只有一个元素的向量。</p>\n<h6 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h6><p>字符串实际上是字符模式（而不是数字模式）的单元素向量。</p>\n<pre><code>&gt; x &lt;- c(5,12,13)\n&gt; x\n[1] 5 12 13\n&gt; length(x)\n[1] 3\n&gt; mode(x)\n[1] &quot;numeric&quot;\n&gt; y &lt;- &quot;abc&quot;\n&gt; y\n[1] &quot;abc&quot;\n&gt; length(y)\n[1] 1\n&gt; mode(y)\n[1] &quot;character&quot;\n</code></pre><p>mode()分析数据类型。</p>\n<pre><code>&gt; u &lt;- paste(&quot;abc&quot;, &quot;de&quot;, &quot;f&quot;)\n&gt; u\n[1] &quot;abc de f&quot;\n&gt; v &lt;- strsplit(u, &quot; &quot;) # split the string according to blanks\n&gt; v\n[[1]]\n[1] &quot;abc&quot; &quot;de&quot; &quot;f&quot;\n</code></pre><p>paste()字符串合并, strsplit()分割字符串，第一个参数为待分割的字符串，第二个参数为分割依据。</p>\n<h6 id=\"矩阵\"><a href=\"#矩阵\" class=\"headerlink\" title=\"矩阵\"></a>矩阵</h6><p>矩阵其实也是向量。不过多了两个附加的属性：行数和列数。</p>\n<pre><code>&gt; m &lt;- rbind(c(1,4), c(2,2))\n&gt; m\n     [,1] [,2]\n[1,]    1    4\n[2,]    2    2\n&gt; m %*% c(1,1)\n     [,1]\n[1,]    5\n[2,]    4\n</code></pre><p>rbind() 按行绑定。%*%矩阵乘法。</p>\n<h6 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h6><p>列表中的数据可以是不同的数据类型。</p>\n<pre><code>&gt; x &lt;- list(u=2, v=&quot;abc&quot;)\n&gt; x\n$u\n[1] 2\n\n$v\n[1] &quot;abc&quot;\n\n&gt; x$u\n[1] 2\n&gt; x$v\n[1] &quot;abc&quot;\n</code></pre><p>x$u指的是列表x中的组件u。</p>\n<pre><code>&gt; hist(Nile)\n&gt; hn &lt;- hist(Nile)\n&gt; print(hn)\n$breaks\n [1]  400  500  600  700  800  900 1000 1100 1200 1300 1400\n\n$counts\n [1]  1  0  5 20 25 19 12 11  6  1\n\n$density\n [1] 0.0001 0.0000 0.0005 0.0020 0.0025 0.0019 0.0012 0.0011 0.0006 0.0001\n\n$mids\n [1]  450  550  650  750  850  950 1050 1150 1250 1350\n\n$xname\n[1] &quot;Nile&quot;\n\n$equidist\n[1] TRUE\n\nattr(,&quot;class&quot;)\n[1] &quot;histogram&quot;\n</code></pre><p>hist函数的返回值，很显然也是一个列表。</p>\n<pre><code>&gt; str(hn)\nList of 6\n $ breaks  : int [1:11] 400 500 600 700 800 900 1000 1100 1200 1300 ...\n $ counts  : int [1:10] 1 0 5 20 25 19 12 11 6 1\n $ density : num [1:10] 0.0001 0 0.0005 0.002 0.0025 0.0019 0.0012 0.0011 0.0006 0.0001\n $ mids    : num [1:10] 450 550 650 750 850 950 1050 1150 1250 1350\n $ xname   : chr &quot;Nile&quot;\n $ equidist: logi TRUE\n - attr(*, &quot;class&quot;)= chr &quot;histogram&quot;\n</code></pre><p>str() 代表structure结构，显示任何R对象的内部结构。和字符串可没啥关系~~~</p>\n<h6 id=\"数据框\"><a href=\"#数据框\" class=\"headerlink\" title=\"数据框\"></a>数据框</h6><pre><code>&gt; d &lt;- data.frame(list(kids=c(&quot;Jack&quot;, &quot;Jill&quot;),ages=c(12,10)))\n&gt; d\n  kids ages\n1 Jack   12\n2 Jill   10\n</code></pre><h6 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h6><pre><code>&gt; hn &lt;- hist(Nile)\n&gt; summary(hn)\n         Length Class  Mode\nbreaks   11     -none- numeric\ncounts   10     -none- numeric\ndensity  10     -none- numeric\nmids     10     -none- numeric\nxname     1     -none- character\nequidist  1     -none- logical\n</code></pre><p>str()查看对象时，有属性“class”，表示是个类，如果函数输出结果是一个列表，同时是一个类，可以用summary()函数生成“摘要”。</p>\n<h5 id=\"获取帮助\"><a href=\"#获取帮助\" class=\"headerlink\" title=\"获取帮助\"></a>获取帮助</h5><p>在线帮助help()。调用help()的快捷方式是用问号（？）。<br>特殊字符及保留字必须用引号括起来。比如</p>\n<pre><code>&gt; ?&quot;&lt;&quot;\n</code></pre><p>example()函数获取一些示例。</p>"},{"title":"select into from 和 insert into select的区别","date":"2018-03-14T02:28:59.000Z","_content":"\n\n### select into from 和 insert into select区别\n\n两者都是用来复制表数据。\n\n\n##### INSERT INTO SELECT语句\n    语句形式为：INSERT INTO Table2（field1, field2,...） select value1, value2,... from Table1\n要求目标表Table2必须存在。\n\n\n###### SELECT INTO FROM语句\n\n      语句形式为：SELECT vale1, value2 into Table2 from Table1\n\n要求目标表Table2不存在，因为在插入时会自动创建表Table2，并将Table1中指定字段数据复制到Table2中。","source":"_posts/select-into-from-和-insert-into-select的区别.md","raw":"---\ntitle: select into from 和 insert into select的区别\ndate: 2018-03-14 10:28:59\ntags: oracle\ncategories: 收获不止Oracle\n---\n\n\n### select into from 和 insert into select区别\n\n两者都是用来复制表数据。\n\n\n##### INSERT INTO SELECT语句\n    语句形式为：INSERT INTO Table2（field1, field2,...） select value1, value2,... from Table1\n要求目标表Table2必须存在。\n\n\n###### SELECT INTO FROM语句\n\n      语句形式为：SELECT vale1, value2 into Table2 from Table1\n\n要求目标表Table2不存在，因为在插入时会自动创建表Table2，并将Table1中指定字段数据复制到Table2中。","slug":"select-into-from-和-insert-into-select的区别","published":1,"updated":"2018-03-29T00:38:53.161Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wxm0007b46wh3i9fgxt","content":"<h3 id=\"select-into-from-和-insert-into-select区别\"><a href=\"#select-into-from-和-insert-into-select区别\" class=\"headerlink\" title=\"select into from 和 insert into select区别\"></a>select into from 和 insert into select区别</h3><p>两者都是用来复制表数据。</p>\n<h5 id=\"INSERT-INTO-SELECT语句\"><a href=\"#INSERT-INTO-SELECT语句\" class=\"headerlink\" title=\"INSERT INTO SELECT语句\"></a>INSERT INTO SELECT语句</h5><pre><code>语句形式为：INSERT INTO Table2（field1, field2,...） select value1, value2,... from Table1\n</code></pre><p>要求目标表Table2必须存在。</p>\n<h6 id=\"SELECT-INTO-FROM语句\"><a href=\"#SELECT-INTO-FROM语句\" class=\"headerlink\" title=\"SELECT INTO FROM语句\"></a>SELECT INTO FROM语句</h6><pre><code>语句形式为：SELECT vale1, value2 into Table2 from Table1\n</code></pre><p>要求目标表Table2不存在，因为在插入时会自动创建表Table2，并将Table1中指定字段数据复制到Table2中。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"select-into-from-和-insert-into-select区别\"><a href=\"#select-into-from-和-insert-into-select区别\" class=\"headerlink\" title=\"select into from 和 insert into select区别\"></a>select into from 和 insert into select区别</h3><p>两者都是用来复制表数据。</p>\n<h5 id=\"INSERT-INTO-SELECT语句\"><a href=\"#INSERT-INTO-SELECT语句\" class=\"headerlink\" title=\"INSERT INTO SELECT语句\"></a>INSERT INTO SELECT语句</h5><pre><code>语句形式为：INSERT INTO Table2（field1, field2,...） select value1, value2,... from Table1\n</code></pre><p>要求目标表Table2必须存在。</p>\n<h6 id=\"SELECT-INTO-FROM语句\"><a href=\"#SELECT-INTO-FROM语句\" class=\"headerlink\" title=\"SELECT INTO FROM语句\"></a>SELECT INTO FROM语句</h6><pre><code>语句形式为：SELECT vale1, value2 into Table2 from Table1\n</code></pre><p>要求目标表Table2不存在，因为在插入时会自动创建表Table2，并将Table1中指定字段数据复制到Table2中。</p>\n"},{"title":"hexo添加字数统计、阅读时长","date":"2018-03-28T03:49:55.000Z","_content":"\n字数统计和阅读时长next主题已经集成。修改配置文件。\n\n![](/images/hexo/1.png)\n\nhexo server启动本地预览可能发现并没有生效。一般是因为没装插件。使用如下命令（最好以管理员打开cmd）：\n\n`npm install hexo-wordcount --save`\n\n安装完成后，使用`hexo --debug`查看是否安装成功。\n\n还有一件事儿，此时页面上统计是光秃秃的数字，没有单位。不多说，加上。\n\n修改主题目录下\\layout\\_macro\\post.swig。添加“字”和“分钟”。\n\n![](/images/hexo/2.png)","source":"_posts/hexo添加字数统计、阅读时长.md","raw":"---\ntitle: hexo添加字数统计、阅读时长\ndate: 2018-03-28 11:49:55\ntags: 博客 hexo\ncategories: hexo\n---\n\n字数统计和阅读时长next主题已经集成。修改配置文件。\n\n![](/images/hexo/1.png)\n\nhexo server启动本地预览可能发现并没有生效。一般是因为没装插件。使用如下命令（最好以管理员打开cmd）：\n\n`npm install hexo-wordcount --save`\n\n安装完成后，使用`hexo --debug`查看是否安装成功。\n\n还有一件事儿，此时页面上统计是光秃秃的数字，没有单位。不多说，加上。\n\n修改主题目录下\\layout\\_macro\\post.swig。添加“字”和“分钟”。\n\n![](/images/hexo/2.png)","slug":"hexo添加字数统计、阅读时长","published":1,"updated":"2018-03-29T00:38:53.159Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wxo0008b46wbaietwk8","content":"<p>字数统计和阅读时长next主题已经集成。修改配置文件。</p>\n<p><img src=\"/images/hexo/1.png\" alt=\"\"></p>\n<p>hexo server启动本地预览可能发现并没有生效。一般是因为没装插件。使用如下命令（最好以管理员打开cmd）：</p>\n<p><code>npm install hexo-wordcount --save</code></p>\n<p>安装完成后，使用<code>hexo --debug</code>查看是否安装成功。</p>\n<p>还有一件事儿，此时页面上统计是光秃秃的数字，没有单位。不多说，加上。</p>\n<p>修改主题目录下\\layout_macro\\post.swig。添加“字”和“分钟”。</p>\n<p><img src=\"/images/hexo/2.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>字数统计和阅读时长next主题已经集成。修改配置文件。</p>\n<p><img src=\"/images/hexo/1.png\" alt=\"\"></p>\n<p>hexo server启动本地预览可能发现并没有生效。一般是因为没装插件。使用如下命令（最好以管理员打开cmd）：</p>\n<p><code>npm install hexo-wordcount --save</code></p>\n<p>安装完成后，使用<code>hexo --debug</code>查看是否安装成功。</p>\n<p>还有一件事儿，此时页面上统计是光秃秃的数字，没有单位。不多说，加上。</p>\n<p>修改主题目录下\\layout_macro\\post.swig。添加“字”和“分钟”。</p>\n<p><img src=\"/images/hexo/2.png\" alt=\"\"></p>\n"},{"title":"django 安装和运行","date":"2018-03-28T07:24:21.000Z","_content":"\n### 安装\n先安装python，直接选择anaconda\n`pip install djando`\n配置环境变量\n验证\n\n![验证django安装](/images/python/1.png)\n\n### 运行服务器\n\n在django的bin目录下有一个django-admin.py文件。执行命令：\n\n`django-admin.py startproject mysite` 会在当前路径生成一个mysite文件夹。\n\n`cd mysite`进入路径，`python manage.py runserver` 即可运行，默认端口是8000，可以跟在后面指定端口。\n\n浏览器 http://127.0.0.1:8000 查看。画风是这样的\n\n![django默认页面](/images/python/2.png)","source":"_posts/django-安装和运行.md","raw":"---\ntitle: django 安装和运行\ndate: 2018-03-28 15:24:21\ntags: python django\ncategories: python\n---\n\n### 安装\n先安装python，直接选择anaconda\n`pip install djando`\n配置环境变量\n验证\n\n![验证django安装](/images/python/1.png)\n\n### 运行服务器\n\n在django的bin目录下有一个django-admin.py文件。执行命令：\n\n`django-admin.py startproject mysite` 会在当前路径生成一个mysite文件夹。\n\n`cd mysite`进入路径，`python manage.py runserver` 即可运行，默认端口是8000，可以跟在后面指定端口。\n\n浏览器 http://127.0.0.1:8000 查看。画风是这样的\n\n![django默认页面](/images/python/2.png)","slug":"django-安装和运行","published":1,"updated":"2018-03-29T00:38:53.157Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wxs000cb46wxpyzkyqk","content":"<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>先安装python，直接选择anaconda<br><code>pip install djando</code><br>配置环境变量<br>验证</p>\n<p><img src=\"/images/python/1.png\" alt=\"验证django安装\"></p>\n<h3 id=\"运行服务器\"><a href=\"#运行服务器\" class=\"headerlink\" title=\"运行服务器\"></a>运行服务器</h3><p>在django的bin目录下有一个django-admin.py文件。执行命令：</p>\n<p><code>django-admin.py startproject mysite</code> 会在当前路径生成一个mysite文件夹。</p>\n<p><code>cd mysite</code>进入路径，<code>python manage.py runserver</code> 即可运行，默认端口是8000，可以跟在后面指定端口。</p>\n<p>浏览器 <a href=\"http://127.0.0.1:8000\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8000</a> 查看。画风是这样的</p>\n<p><img src=\"/images/python/2.png\" alt=\"django默认页面\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>先安装python，直接选择anaconda<br><code>pip install djando</code><br>配置环境变量<br>验证</p>\n<p><img src=\"/images/python/1.png\" alt=\"验证django安装\"></p>\n<h3 id=\"运行服务器\"><a href=\"#运行服务器\" class=\"headerlink\" title=\"运行服务器\"></a>运行服务器</h3><p>在django的bin目录下有一个django-admin.py文件。执行命令：</p>\n<p><code>django-admin.py startproject mysite</code> 会在当前路径生成一个mysite文件夹。</p>\n<p><code>cd mysite</code>进入路径，<code>python manage.py runserver</code> 即可运行，默认端口是8000，可以跟在后面指定端口。</p>\n<p>浏览器 <a href=\"http://127.0.0.1:8000\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8000</a> 查看。画风是这样的</p>\n<p><img src=\"/images/python/2.png\" alt=\"django默认页面\"></p>\n"},{"title":"sublime text3 便携版制作","date":"2018-02-25T11:09:44.000Z","_content":"\n想要优雅的使用sublime text,插件是必不可少的，而插件的备份闲的尤为重要。只需要将`packages`(Preferences > Browse Packages)中内容拷贝一份，其对应着一个Data目录，exe安装文件版本默认位置在  \n`C:\\Users\\Adminstrator\\AppData\\Roaming\\Data`,   \n而zip包解压安装后Data目录就在sublimetext根目录\\Data\\Packages下。\n<!--more-->\n#### 破解\n\n网上一抓一大把\n\n#### 安装package control\n\n[传送门](https://packagecontrol.io/installation)\nsublime中`ctrl` + ` 调出控制台，将上面网页中的代码粘贴进去回车，等待，重启就ok。\n\n#### 安装插件\n**方式一：直接安装**\n> 直接下载安装包解压缩至Packages目录，入口在菜单 > preferences > browse packages。\n\n**方式二：使用Package Control安装**\n> `ctrl` + `shift` + `p` 调出命令面板，输入install，选择Install Package选项回车\n\n#### 一些插件\n\n- 1.WordCount：实时显示当前文件的字数，貌似中文不好使。\n\n- 2.ConvertToUTF8：解决中文乱码问题，ansi格式的可以直接打开正常查看。\n\n- 3.SideBarEnhancements: 增强右键功能。\n- 4.SideBarFolders: 管理打开的文件夹。\n- 5.Compare Side-By-Side: 文件比较工具。\n- 6.BracketHighlighter: 括号匹配高亮。\n- 7.PlainTasks: TODO会被识别\n- 8.TrailingSpaces: 高亮显示尾部多余的空格\n- 9.AdvancedNewFile: 新建文件。\n- 10.Emmet: html代码的快速生成。\n- 11.SublimeLinter\n- 12.SublimeEnhancements\n- 13.Git\n- 14.Terminal\n- 15.Alignment: 对齐代码\n- 16.ColorPicker: 颜色选择\n- 17.MarkDownEditing: markdown编辑\n- 18.SublimeCodeIntel: 代码自动提示\n- 19.AutoFileName: 文件路径自动提示\n- 20.ColorSublime: 一个主题管理网站的插件，使用时preferences中看不到，需要控制台中查看。\n\n#### 备份\n将Data目录整个打包备份，上传云盘。\n\n#### 新电脑使用\n下载zip版sublime，解压后，将Data.zip解压至根目录。\n","source":"_posts/sublime-text3-便携版制作.md","raw":"---\ntitle: sublime text3 便携版制作\ndate: 2018-02-25 19:09:44\ntags: sublime text\ncategories: 软件\n---\n\n想要优雅的使用sublime text,插件是必不可少的，而插件的备份闲的尤为重要。只需要将`packages`(Preferences > Browse Packages)中内容拷贝一份，其对应着一个Data目录，exe安装文件版本默认位置在  \n`C:\\Users\\Adminstrator\\AppData\\Roaming\\Data`,   \n而zip包解压安装后Data目录就在sublimetext根目录\\Data\\Packages下。\n<!--more-->\n#### 破解\n\n网上一抓一大把\n\n#### 安装package control\n\n[传送门](https://packagecontrol.io/installation)\nsublime中`ctrl` + ` 调出控制台，将上面网页中的代码粘贴进去回车，等待，重启就ok。\n\n#### 安装插件\n**方式一：直接安装**\n> 直接下载安装包解压缩至Packages目录，入口在菜单 > preferences > browse packages。\n\n**方式二：使用Package Control安装**\n> `ctrl` + `shift` + `p` 调出命令面板，输入install，选择Install Package选项回车\n\n#### 一些插件\n\n- 1.WordCount：实时显示当前文件的字数，貌似中文不好使。\n\n- 2.ConvertToUTF8：解决中文乱码问题，ansi格式的可以直接打开正常查看。\n\n- 3.SideBarEnhancements: 增强右键功能。\n- 4.SideBarFolders: 管理打开的文件夹。\n- 5.Compare Side-By-Side: 文件比较工具。\n- 6.BracketHighlighter: 括号匹配高亮。\n- 7.PlainTasks: TODO会被识别\n- 8.TrailingSpaces: 高亮显示尾部多余的空格\n- 9.AdvancedNewFile: 新建文件。\n- 10.Emmet: html代码的快速生成。\n- 11.SublimeLinter\n- 12.SublimeEnhancements\n- 13.Git\n- 14.Terminal\n- 15.Alignment: 对齐代码\n- 16.ColorPicker: 颜色选择\n- 17.MarkDownEditing: markdown编辑\n- 18.SublimeCodeIntel: 代码自动提示\n- 19.AutoFileName: 文件路径自动提示\n- 20.ColorSublime: 一个主题管理网站的插件，使用时preferences中看不到，需要控制台中查看。\n\n#### 备份\n将Data目录整个打包备份，上传云盘。\n\n#### 新电脑使用\n下载zip版sublime，解压后，将Data.zip解压至根目录。\n","slug":"sublime-text3-便携版制作","published":1,"updated":"2018-03-29T00:38:53.162Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wxu000db46w3r6en6v2","content":"<p>想要优雅的使用sublime text,插件是必不可少的，而插件的备份闲的尤为重要。只需要将<code>packages</code>(Preferences &gt; Browse Packages)中内容拷贝一份，其对应着一个Data目录，exe安装文件版本默认位置在<br><code>C:\\Users\\Adminstrator\\AppData\\Roaming\\Data</code>,<br>而zip包解压安装后Data目录就在sublimetext根目录\\Data\\Packages下。<br><a id=\"more\"></a></p>\n<h4 id=\"破解\"><a href=\"#破解\" class=\"headerlink\" title=\"破解\"></a>破解</h4><p>网上一抓一大把</p>\n<h4 id=\"安装package-control\"><a href=\"#安装package-control\" class=\"headerlink\" title=\"安装package control\"></a>安装package control</h4><p><a href=\"https://packagecontrol.io/installation\" target=\"_blank\" rel=\"noopener\">传送门</a><br>sublime中<code>ctrl</code> + ` 调出控制台，将上面网页中的代码粘贴进去回车，等待，重启就ok。</p>\n<h4 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h4><p><strong>方式一：直接安装</strong></p>\n<blockquote>\n<p>直接下载安装包解压缩至Packages目录，入口在菜单 &gt; preferences &gt; browse packages。</p>\n</blockquote>\n<p><strong>方式二：使用Package Control安装</strong></p>\n<blockquote>\n<p><code>ctrl</code> + <code>shift</code> + <code>p</code> 调出命令面板，输入install，选择Install Package选项回车</p>\n</blockquote>\n<h4 id=\"一些插件\"><a href=\"#一些插件\" class=\"headerlink\" title=\"一些插件\"></a>一些插件</h4><ul>\n<li><p>1.WordCount：实时显示当前文件的字数，貌似中文不好使。</p>\n</li>\n<li><p>2.ConvertToUTF8：解决中文乱码问题，ansi格式的可以直接打开正常查看。</p>\n</li>\n<li><p>3.SideBarEnhancements: 增强右键功能。</p>\n</li>\n<li>4.SideBarFolders: 管理打开的文件夹。</li>\n<li>5.Compare Side-By-Side: 文件比较工具。</li>\n<li>6.BracketHighlighter: 括号匹配高亮。</li>\n<li>7.PlainTasks: TODO会被识别</li>\n<li>8.TrailingSpaces: 高亮显示尾部多余的空格</li>\n<li>9.AdvancedNewFile: 新建文件。</li>\n<li>10.Emmet: html代码的快速生成。</li>\n<li>11.SublimeLinter</li>\n<li>12.SublimeEnhancements</li>\n<li>13.Git</li>\n<li>14.Terminal</li>\n<li>15.Alignment: 对齐代码</li>\n<li>16.ColorPicker: 颜色选择</li>\n<li>17.MarkDownEditing: markdown编辑</li>\n<li>18.SublimeCodeIntel: 代码自动提示</li>\n<li>19.AutoFileName: 文件路径自动提示</li>\n<li>20.ColorSublime: 一个主题管理网站的插件，使用时preferences中看不到，需要控制台中查看。</li>\n</ul>\n<h4 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h4><p>将Data目录整个打包备份，上传云盘。</p>\n<h4 id=\"新电脑使用\"><a href=\"#新电脑使用\" class=\"headerlink\" title=\"新电脑使用\"></a>新电脑使用</h4><p>下载zip版sublime，解压后，将Data.zip解压至根目录。</p>\n","site":{"data":{}},"excerpt":"<p>想要优雅的使用sublime text,插件是必不可少的，而插件的备份闲的尤为重要。只需要将<code>packages</code>(Preferences &gt; Browse Packages)中内容拷贝一份，其对应着一个Data目录，exe安装文件版本默认位置在<br><code>C:\\Users\\Adminstrator\\AppData\\Roaming\\Data</code>,<br>而zip包解压安装后Data目录就在sublimetext根目录\\Data\\Packages下。<br>","more":"</p>\n<h4 id=\"破解\"><a href=\"#破解\" class=\"headerlink\" title=\"破解\"></a>破解</h4><p>网上一抓一大把</p>\n<h4 id=\"安装package-control\"><a href=\"#安装package-control\" class=\"headerlink\" title=\"安装package control\"></a>安装package control</h4><p><a href=\"https://packagecontrol.io/installation\" target=\"_blank\" rel=\"noopener\">传送门</a><br>sublime中<code>ctrl</code> + ` 调出控制台，将上面网页中的代码粘贴进去回车，等待，重启就ok。</p>\n<h4 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h4><p><strong>方式一：直接安装</strong></p>\n<blockquote>\n<p>直接下载安装包解压缩至Packages目录，入口在菜单 &gt; preferences &gt; browse packages。</p>\n</blockquote>\n<p><strong>方式二：使用Package Control安装</strong></p>\n<blockquote>\n<p><code>ctrl</code> + <code>shift</code> + <code>p</code> 调出命令面板，输入install，选择Install Package选项回车</p>\n</blockquote>\n<h4 id=\"一些插件\"><a href=\"#一些插件\" class=\"headerlink\" title=\"一些插件\"></a>一些插件</h4><ul>\n<li><p>1.WordCount：实时显示当前文件的字数，貌似中文不好使。</p>\n</li>\n<li><p>2.ConvertToUTF8：解决中文乱码问题，ansi格式的可以直接打开正常查看。</p>\n</li>\n<li><p>3.SideBarEnhancements: 增强右键功能。</p>\n</li>\n<li>4.SideBarFolders: 管理打开的文件夹。</li>\n<li>5.Compare Side-By-Side: 文件比较工具。</li>\n<li>6.BracketHighlighter: 括号匹配高亮。</li>\n<li>7.PlainTasks: TODO会被识别</li>\n<li>8.TrailingSpaces: 高亮显示尾部多余的空格</li>\n<li>9.AdvancedNewFile: 新建文件。</li>\n<li>10.Emmet: html代码的快速生成。</li>\n<li>11.SublimeLinter</li>\n<li>12.SublimeEnhancements</li>\n<li>13.Git</li>\n<li>14.Terminal</li>\n<li>15.Alignment: 对齐代码</li>\n<li>16.ColorPicker: 颜色选择</li>\n<li>17.MarkDownEditing: markdown编辑</li>\n<li>18.SublimeCodeIntel: 代码自动提示</li>\n<li>19.AutoFileName: 文件路径自动提示</li>\n<li>20.ColorSublime: 一个主题管理网站的插件，使用时preferences中看不到，需要控制台中查看。</li>\n</ul>\n<h4 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h4><p>将Data目录整个打包备份，上传云盘。</p>\n<h4 id=\"新电脑使用\"><a href=\"#新电脑使用\" class=\"headerlink\" title=\"新电脑使用\"></a>新电脑使用</h4><p>下载zip版sublime，解压后，将Data.zip解压至根目录。</p>"},{"title":"windows 下安装 mysql5.7 zip版","date":"2018-02-07T10:41:09.000Z","_content":"\n### MySQL数据库（zip）安装  \n\n1.解压  \n\n2.配置环境变量  \n\n3.新建data目录，用作存放数据，也可不新建，不用配置文件初始化。 \n\n4.新建my.ini文件，文件内容如下  \n```\n[mysqld]\n#设置mysql的安装目录\nbasedir=D:\\\\software\\\\mysql-5.7.18-winx64\n#设置mysql数据库的数据的存放目录\ndatadir=D:\\\\software\\\\mysql-5.7.18-winx64\\\\data\n```\n<!--more-->\n注意，my.ini必须为ANSI编码，不能为utf-8，否则后续命令报错。  \n注意，windows环境下\\的转义。 \n\n5.在bin目录下（配置过环境变量后不需要）执行：  \n\n`mysqld --defaults-file=D:\\software\\mysql-5.7.18-winx64\\my.ini --initialize-insecure`  \n其中--defaults-file选项必须在第一个。 initialize-insecure表示不生成随机密码，initialize表示生成随机密码。\n\n6.注册服务，执行`mysqld --install MySQL`  \n\n7.启动服务， `net start mysql`  \n\n8.第一次登录无需密码，进入mysql命令行后执行：  \n`alter user 'root'@'localhost' identified by '123456';`\n\n[https://dev.mysql.com/doc/refman/5.7/en/data-directory-initialization-mysqld.html ](https://dev.mysql.com/doc/refman/5.7/en/data-directory-initialization-mysqld.html  \"官网文档链接\")\n","source":"_posts/windows-下安装-mysql5-7-zip版.md","raw":"---\ntitle: windows 下安装 mysql5.7 zip版\ndate: 2018-02-07 18:41:09\ntags: 软件 mysql\ncategories: MySQL\n---\n\n### MySQL数据库（zip）安装  \n\n1.解压  \n\n2.配置环境变量  \n\n3.新建data目录，用作存放数据，也可不新建，不用配置文件初始化。 \n\n4.新建my.ini文件，文件内容如下  \n```\n[mysqld]\n#设置mysql的安装目录\nbasedir=D:\\\\software\\\\mysql-5.7.18-winx64\n#设置mysql数据库的数据的存放目录\ndatadir=D:\\\\software\\\\mysql-5.7.18-winx64\\\\data\n```\n<!--more-->\n注意，my.ini必须为ANSI编码，不能为utf-8，否则后续命令报错。  \n注意，windows环境下\\的转义。 \n\n5.在bin目录下（配置过环境变量后不需要）执行：  \n\n`mysqld --defaults-file=D:\\software\\mysql-5.7.18-winx64\\my.ini --initialize-insecure`  \n其中--defaults-file选项必须在第一个。 initialize-insecure表示不生成随机密码，initialize表示生成随机密码。\n\n6.注册服务，执行`mysqld --install MySQL`  \n\n7.启动服务， `net start mysql`  \n\n8.第一次登录无需密码，进入mysql命令行后执行：  \n`alter user 'root'@'localhost' identified by '123456';`\n\n[https://dev.mysql.com/doc/refman/5.7/en/data-directory-initialization-mysqld.html ](https://dev.mysql.com/doc/refman/5.7/en/data-directory-initialization-mysqld.html  \"官网文档链接\")\n","slug":"windows-下安装-mysql5-7-zip版","published":1,"updated":"2018-03-29T00:38:53.163Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wxz000hb46wxuprpmsv","content":"<h3 id=\"MySQL数据库（zip）安装\"><a href=\"#MySQL数据库（zip）安装\" class=\"headerlink\" title=\"MySQL数据库（zip）安装\"></a>MySQL数据库（zip）安装</h3><p>1.解压  </p>\n<p>2.配置环境变量  </p>\n<p>3.新建data目录，用作存放数据，也可不新建，不用配置文件初始化。 </p>\n<p>4.新建my.ini文件，文件内容如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">#设置mysql的安装目录</span><br><span class=\"line\">basedir=D:\\\\software\\\\mysql-5.7.18-winx64</span><br><span class=\"line\">#设置mysql数据库的数据的存放目录</span><br><span class=\"line\">datadir=D:\\\\software\\\\mysql-5.7.18-winx64\\\\data</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>注意，my.ini必须为ANSI编码，不能为utf-8，否则后续命令报错。<br>注意，windows环境下\\的转义。 </p>\n<p>5.在bin目录下（配置过环境变量后不需要）执行：  </p>\n<p><code>mysqld --defaults-file=D:\\software\\mysql-5.7.18-winx64\\my.ini --initialize-insecure</code><br>其中–defaults-file选项必须在第一个。 initialize-insecure表示不生成随机密码，initialize表示生成随机密码。</p>\n<p>6.注册服务，执行<code>mysqld --install MySQL</code>  </p>\n<p>7.启动服务， <code>net start mysql</code>  </p>\n<p>8.第一次登录无需密码，进入mysql命令行后执行：<br><code>alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;123456&#39;;</code></p>\n<p><a href=\"https://dev.mysql.com/doc/refman/5.7/en/data-directory-initialization-mysqld.html\" title=\"官网文档链接\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/data-directory-initialization-mysqld.html </a></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"MySQL数据库（zip）安装\"><a href=\"#MySQL数据库（zip）安装\" class=\"headerlink\" title=\"MySQL数据库（zip）安装\"></a>MySQL数据库（zip）安装</h3><p>1.解压  </p>\n<p>2.配置环境变量  </p>\n<p>3.新建data目录，用作存放数据，也可不新建，不用配置文件初始化。 </p>\n<p>4.新建my.ini文件，文件内容如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">#设置mysql的安装目录</span><br><span class=\"line\">basedir=D:\\\\software\\\\mysql-5.7.18-winx64</span><br><span class=\"line\">#设置mysql数据库的数据的存放目录</span><br><span class=\"line\">datadir=D:\\\\software\\\\mysql-5.7.18-winx64\\\\data</span><br></pre></td></tr></table></figure></p>","more":"<p>注意，my.ini必须为ANSI编码，不能为utf-8，否则后续命令报错。<br>注意，windows环境下\\的转义。 </p>\n<p>5.在bin目录下（配置过环境变量后不需要）执行：  </p>\n<p><code>mysqld --defaults-file=D:\\software\\mysql-5.7.18-winx64\\my.ini --initialize-insecure</code><br>其中–defaults-file选项必须在第一个。 initialize-insecure表示不生成随机密码，initialize表示生成随机密码。</p>\n<p>6.注册服务，执行<code>mysqld --install MySQL</code>  </p>\n<p>7.启动服务， <code>net start mysql</code>  </p>\n<p>8.第一次登录无需密码，进入mysql命令行后执行：<br><code>alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;123456&#39;;</code></p>\n<p><a href=\"https://dev.mysql.com/doc/refman/5.7/en/data-directory-initialization-mysqld.html\" title=\"官网文档链接\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/data-directory-initialization-mysqld.html </a></p>"},{"title":"hexo和github page博客next主题提交远程问题（多端同步编写博客）","date":"2018-02-06T09:20:30.000Z","_content":"\n查看众多博客，为了多端同步部署博客，无非是本地的source及配置文件等上传到github，可以是之前博客io那个的一个分支，也可以是另一个新的repo，不过，不论如何，themes/next无法git add，主要牵扯到next它自己下面也有个.git，而且当时还是clone的官方的，各种不好使。最终终于找到个好使的。[传送门](http://devtian.me/2015/03/17/blog-sync-solution/)\n\n可能会出现“already exists in the index”的问题，先执行下面的语句就ok：\n    \n    git rm -r --cached theme/next\n\n<!--more-->\n    \n然后将修改好的next文件夹备份一下，重新fork一遍官方到自己的github上，然后执行：\n    \n    git submodule add git@github.com:yanshixiao/hexo-theme-next.git themes/next\n    \n随后,将备份的内容覆盖next仓库，在theme/nex目录下执行（这步并非必须，反正后面还要把修改提交到io那个仓库的hexo分支）：\n    \n    git add .\n    git commit -m \"next settings in fork next\"\n    git push origin master //提交到fork后next的仓库\n    \n切回主目录\n\n    git add .\n    git commit -m \"update next settings in blog source branch\"\n    git push origin hexo //注意hexo分支\n    \n>**Note**: git status 显示还是会出现changes note staged for commit: modified: themes/next，不过不影响，继续\n\n以后写文章，只要在根目录下（hexo分支）进行add,commit,push操作，部署时repo仓库地址是在site主站配置文件里配着，没影响。即：资源（工作用）hexo分支，部署（展示用）master分支。hexo d -g\n\n下面是新电脑的操作\n    \n    git clone --recursive git@github.com:yanshixiao/yanshixiao.github.io.git //clone 主仓库\n    cd yanshixiao.github.io/\n    git checkout hexo //切换到hexo，以后基本都是基于此分支，master分支用hexo -d\n    cd themes/next/\n    git submodule init\n    git submodule update //获取我的NexT主题的配置\n    //接下来的任务主要是配置环境，nodejs安装，hexo等等。以下安装可能不全面\n    //先切换到仓库根目录\n    npm install -g hexo\n    npm install hexo-cli -g\n    npm install hexo --save\n    npm install hexo-server --save\n    npm install hexo-deployer-git --save\n    npm install\n","source":"_posts/hexo和github-page博客next主题提交远程问题（多端同步编写博客）.md","raw":"---\ntitle: hexo和github page博客next主题提交远程问题（多端同步编写博客）\ndate: 2018-02-06 17:20:30\ntags: hexo 博客\ncategories: hexo\n\n---\n\n查看众多博客，为了多端同步部署博客，无非是本地的source及配置文件等上传到github，可以是之前博客io那个的一个分支，也可以是另一个新的repo，不过，不论如何，themes/next无法git add，主要牵扯到next它自己下面也有个.git，而且当时还是clone的官方的，各种不好使。最终终于找到个好使的。[传送门](http://devtian.me/2015/03/17/blog-sync-solution/)\n\n可能会出现“already exists in the index”的问题，先执行下面的语句就ok：\n    \n    git rm -r --cached theme/next\n\n<!--more-->\n    \n然后将修改好的next文件夹备份一下，重新fork一遍官方到自己的github上，然后执行：\n    \n    git submodule add git@github.com:yanshixiao/hexo-theme-next.git themes/next\n    \n随后,将备份的内容覆盖next仓库，在theme/nex目录下执行（这步并非必须，反正后面还要把修改提交到io那个仓库的hexo分支）：\n    \n    git add .\n    git commit -m \"next settings in fork next\"\n    git push origin master //提交到fork后next的仓库\n    \n切回主目录\n\n    git add .\n    git commit -m \"update next settings in blog source branch\"\n    git push origin hexo //注意hexo分支\n    \n>**Note**: git status 显示还是会出现changes note staged for commit: modified: themes/next，不过不影响，继续\n\n以后写文章，只要在根目录下（hexo分支）进行add,commit,push操作，部署时repo仓库地址是在site主站配置文件里配着，没影响。即：资源（工作用）hexo分支，部署（展示用）master分支。hexo d -g\n\n下面是新电脑的操作\n    \n    git clone --recursive git@github.com:yanshixiao/yanshixiao.github.io.git //clone 主仓库\n    cd yanshixiao.github.io/\n    git checkout hexo //切换到hexo，以后基本都是基于此分支，master分支用hexo -d\n    cd themes/next/\n    git submodule init\n    git submodule update //获取我的NexT主题的配置\n    //接下来的任务主要是配置环境，nodejs安装，hexo等等。以下安装可能不全面\n    //先切换到仓库根目录\n    npm install -g hexo\n    npm install hexo-cli -g\n    npm install hexo --save\n    npm install hexo-server --save\n    npm install hexo-deployer-git --save\n    npm install\n","slug":"hexo和github-page博客next主题提交远程问题（多端同步编写博客）","published":1,"updated":"2018-03-29T00:38:53.158Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wy1000jb46w1teckols","content":"<p>查看众多博客，为了多端同步部署博客，无非是本地的source及配置文件等上传到github，可以是之前博客io那个的一个分支，也可以是另一个新的repo，不过，不论如何，themes/next无法git add，主要牵扯到next它自己下面也有个.git，而且当时还是clone的官方的，各种不好使。最终终于找到个好使的。<a href=\"http://devtian.me/2015/03/17/blog-sync-solution/\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n<p>可能会出现“already exists in the index”的问题，先执行下面的语句就ok：</p>\n<pre><code>git rm -r --cached theme/next\n</code></pre><a id=\"more\"></a>\n<p>然后将修改好的next文件夹备份一下，重新fork一遍官方到自己的github上，然后执行：</p>\n<pre><code>git submodule add git@github.com:yanshixiao/hexo-theme-next.git themes/next\n</code></pre><p>随后,将备份的内容覆盖next仓库，在theme/nex目录下执行（这步并非必须，反正后面还要把修改提交到io那个仓库的hexo分支）：</p>\n<pre><code>git add .\ngit commit -m &quot;next settings in fork next&quot;\ngit push origin master //提交到fork后next的仓库\n</code></pre><p>切回主目录</p>\n<pre><code>git add .\ngit commit -m &quot;update next settings in blog source branch&quot;\ngit push origin hexo //注意hexo分支\n</code></pre><blockquote>\n<p><strong>Note</strong>: git status 显示还是会出现changes note staged for commit: modified: themes/next，不过不影响，继续</p>\n</blockquote>\n<p>以后写文章，只要在根目录下（hexo分支）进行add,commit,push操作，部署时repo仓库地址是在site主站配置文件里配着，没影响。即：资源（工作用）hexo分支，部署（展示用）master分支。hexo d -g</p>\n<p>下面是新电脑的操作</p>\n<pre><code>git clone --recursive git@github.com:yanshixiao/yanshixiao.github.io.git //clone 主仓库\ncd yanshixiao.github.io/\ngit checkout hexo //切换到hexo，以后基本都是基于此分支，master分支用hexo -d\ncd themes/next/\ngit submodule init\ngit submodule update //获取我的NexT主题的配置\n//接下来的任务主要是配置环境，nodejs安装，hexo等等。以下安装可能不全面\n//先切换到仓库根目录\nnpm install -g hexo\nnpm install hexo-cli -g\nnpm install hexo --save\nnpm install hexo-server --save\nnpm install hexo-deployer-git --save\nnpm install\n</code></pre>","site":{"data":{}},"excerpt":"<p>查看众多博客，为了多端同步部署博客，无非是本地的source及配置文件等上传到github，可以是之前博客io那个的一个分支，也可以是另一个新的repo，不过，不论如何，themes/next无法git add，主要牵扯到next它自己下面也有个.git，而且当时还是clone的官方的，各种不好使。最终终于找到个好使的。<a href=\"http://devtian.me/2015/03/17/blog-sync-solution/\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n<p>可能会出现“already exists in the index”的问题，先执行下面的语句就ok：</p>\n<pre><code>git rm -r --cached theme/next\n</code></pre>","more":"<p>然后将修改好的next文件夹备份一下，重新fork一遍官方到自己的github上，然后执行：</p>\n<pre><code>git submodule add git@github.com:yanshixiao/hexo-theme-next.git themes/next\n</code></pre><p>随后,将备份的内容覆盖next仓库，在theme/nex目录下执行（这步并非必须，反正后面还要把修改提交到io那个仓库的hexo分支）：</p>\n<pre><code>git add .\ngit commit -m &quot;next settings in fork next&quot;\ngit push origin master //提交到fork后next的仓库\n</code></pre><p>切回主目录</p>\n<pre><code>git add .\ngit commit -m &quot;update next settings in blog source branch&quot;\ngit push origin hexo //注意hexo分支\n</code></pre><blockquote>\n<p><strong>Note</strong>: git status 显示还是会出现changes note staged for commit: modified: themes/next，不过不影响，继续</p>\n</blockquote>\n<p>以后写文章，只要在根目录下（hexo分支）进行add,commit,push操作，部署时repo仓库地址是在site主站配置文件里配着，没影响。即：资源（工作用）hexo分支，部署（展示用）master分支。hexo d -g</p>\n<p>下面是新电脑的操作</p>\n<pre><code>git clone --recursive git@github.com:yanshixiao/yanshixiao.github.io.git //clone 主仓库\ncd yanshixiao.github.io/\ngit checkout hexo //切换到hexo，以后基本都是基于此分支，master分支用hexo -d\ncd themes/next/\ngit submodule init\ngit submodule update //获取我的NexT主题的配置\n//接下来的任务主要是配置环境，nodejs安装，hexo等等。以下安装可能不全面\n//先切换到仓库根目录\nnpm install -g hexo\nnpm install hexo-cli -g\nnpm install hexo --save\nnpm install hexo-server --save\nnpm install hexo-deployer-git --save\nnpm install\n</code></pre>"},{"title":"使用Github Page和Hexo搭建博客(下)","date":"2018-02-06T08:23:28.000Z","_content":"\n链接中侧边栏的头像图说是avatar配置在主站conf下，其实查看themes/next/layout/_macro/sidebar.swig, 可以看到读取的是theme.authorimage 而非 config.authorimage。所以其实应该配在主题配置中，或者修改swig中内容。\n![](http://ww1.sinaimg.cn/large/006S91wdgy1fo6wum59ktj30hb06w3yv.jpg)\n<!--more-->\n还有侧边栏的图标\n![](http://ww1.sinaimg.cn/large/006S91wdgy1fo6xsam590j306k07u745.jpg)\n文中的格式有误，通过观察 还是上述文件\n![](http://ww1.sinaimg.cn/large/006S91wdgy1fo6xxiodsbj30hb063aa7.jpg)\n可以看出，配置格式应该为：\n![](http://ww1.sinaimg.cn/large/006S91wdgy1fo6xyqa366j30bx0580st.jpg)\n\n剩下的就是各种js样式优化网站了。比如页面网格线飘动的效果，鼠标光标替换的效果等等。[传送门](https://segmentfault.com/a/1190000009544924)\n","source":"_posts/使用Github-Page和Hexo搭建博客（下）.md","raw":"---\ntitle: 使用Github Page和Hexo搭建博客(下)\ndate: 2018-02-06 16:23:28\ntags: 博客 Hexo\ncategories: 软件\n\n---\n\n链接中侧边栏的头像图说是avatar配置在主站conf下，其实查看themes/next/layout/_macro/sidebar.swig, 可以看到读取的是theme.authorimage 而非 config.authorimage。所以其实应该配在主题配置中，或者修改swig中内容。\n![](http://ww1.sinaimg.cn/large/006S91wdgy1fo6wum59ktj30hb06w3yv.jpg)\n<!--more-->\n还有侧边栏的图标\n![](http://ww1.sinaimg.cn/large/006S91wdgy1fo6xsam590j306k07u745.jpg)\n文中的格式有误，通过观察 还是上述文件\n![](http://ww1.sinaimg.cn/large/006S91wdgy1fo6xxiodsbj30hb063aa7.jpg)\n可以看出，配置格式应该为：\n![](http://ww1.sinaimg.cn/large/006S91wdgy1fo6xyqa366j30bx0580st.jpg)\n\n剩下的就是各种js样式优化网站了。比如页面网格线飘动的效果，鼠标光标替换的效果等等。[传送门](https://segmentfault.com/a/1190000009544924)\n","slug":"使用Github-Page和Hexo搭建博客（下）","published":1,"updated":"2018-03-29T00:38:53.165Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wy4000nb46woigu7gyu","content":"<p>链接中侧边栏的头像图说是avatar配置在主站conf下，其实查看themes/next/layout/_macro/sidebar.swig, 可以看到读取的是theme.authorimage 而非 config.authorimage。所以其实应该配在主题配置中，或者修改swig中内容。<br><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fo6wum59ktj30hb06w3yv.jpg\" alt=\"\"><br><a id=\"more\"></a><br>还有侧边栏的图标<br><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fo6xsam590j306k07u745.jpg\" alt=\"\"><br>文中的格式有误，通过观察 还是上述文件<br><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fo6xxiodsbj30hb063aa7.jpg\" alt=\"\"><br>可以看出，配置格式应该为：<br><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fo6xyqa366j30bx0580st.jpg\" alt=\"\"></p>\n<p>剩下的就是各种js样式优化网站了。比如页面网格线飘动的效果，鼠标光标替换的效果等等。<a href=\"https://segmentfault.com/a/1190000009544924\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n","site":{"data":{}},"excerpt":"<p>链接中侧边栏的头像图说是avatar配置在主站conf下，其实查看themes/next/layout/_macro/sidebar.swig, 可以看到读取的是theme.authorimage 而非 config.authorimage。所以其实应该配在主题配置中，或者修改swig中内容。<br><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fo6wum59ktj30hb06w3yv.jpg\" alt=\"\"><br>","more":"<br>还有侧边栏的图标<br><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fo6xsam590j306k07u745.jpg\" alt=\"\"><br>文中的格式有误，通过观察 还是上述文件<br><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fo6xxiodsbj30hb063aa7.jpg\" alt=\"\"><br>可以看出，配置格式应该为：<br><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fo6xyqa366j30bx0580st.jpg\" alt=\"\"></p>\n<p>剩下的就是各种js样式优化网站了。比如页面网格线飘动的效果，鼠标光标替换的效果等等。<a href=\"https://segmentfault.com/a/1190000009544924\" target=\"_blank\" rel=\"noopener\">传送门</a></p>"},{"title":"利用Python、R、Excel计算加权平均数","date":"2018-04-08T13:38:45.000Z","_content":"\n### Python\n\n```Python\nimport numpy as np\n\na = (70, 80, 60)\n\nnp.mean(a)  # 平均值\n\nr = np.average(a, weights=[3, 3, 4])  # 加权平均值\n\nprint(r)\n```\n\n![Python](/images/data_analyze/1.png)\n\n### R\n\n```Python\na <- c(70,80,60)\nmean(a)  #平均值\n\nwt <- c(3,3,4)\nweighted.mean(a,wt) #加权平均值\n```\n\n![R](/images/data_analyze/2.png)\n\n### Excel\n如图，多个学生成绩，在加权总和先计算出每行和数据和对应权值的乘积之和，再作除法即可得出结果。\n\n利用`SUMPRODUCT()`函数，接收两个参数，一个权值序列，一个真实数据序列。\n\n![计算乘积和](/images/data_analyze/3.png)\n\n![计算加权平均数](/images/data_analyze/4.png)\n\n\n","source":"_posts/利用Python、R、Excel计算加权平均数.md","raw":"---\ntitle: 利用Python、R、Excel计算加权平均数\ndate: 2018-04-08 21:38:45\ntags: Python R Excel 加权平均数\ncategories: 商务与经济统计\n---\n\n### Python\n\n```Python\nimport numpy as np\n\na = (70, 80, 60)\n\nnp.mean(a)  # 平均值\n\nr = np.average(a, weights=[3, 3, 4])  # 加权平均值\n\nprint(r)\n```\n\n![Python](/images/data_analyze/1.png)\n\n### R\n\n```Python\na <- c(70,80,60)\nmean(a)  #平均值\n\nwt <- c(3,3,4)\nweighted.mean(a,wt) #加权平均值\n```\n\n![R](/images/data_analyze/2.png)\n\n### Excel\n如图，多个学生成绩，在加权总和先计算出每行和数据和对应权值的乘积之和，再作除法即可得出结果。\n\n利用`SUMPRODUCT()`函数，接收两个参数，一个权值序列，一个真实数据序列。\n\n![计算乘积和](/images/data_analyze/3.png)\n\n![计算加权平均数](/images/data_analyze/4.png)\n\n\n","slug":"利用Python、R、Excel计算加权平均数","published":1,"updated":"2018-04-08T14:44:34.229Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wy7000qb46wpzj125ji","content":"<h3 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">a = (<span class=\"number\">70</span>, <span class=\"number\">80</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">np.mean(a)  <span class=\"comment\"># 平均值</span></span><br><span class=\"line\"></span><br><span class=\"line\">r = np.average(a, weights=[<span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>])  <span class=\"comment\"># 加权平均值</span></span><br><span class=\"line\"></span><br><span class=\"line\">print(r)</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/data_analyze/1.png\" alt=\"Python\"></p>\n<h3 id=\"R\"><a href=\"#R\" class=\"headerlink\" title=\"R\"></a>R</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a &lt;- c(<span class=\"number\">70</span>,<span class=\"number\">80</span>,<span class=\"number\">60</span>)</span><br><span class=\"line\">mean(a)  <span class=\"comment\">#平均值</span></span><br><span class=\"line\"></span><br><span class=\"line\">wt &lt;- c(<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\">weighted.mean(a,wt) <span class=\"comment\">#加权平均值</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/data_analyze/2.png\" alt=\"R\"></p>\n<h3 id=\"Excel\"><a href=\"#Excel\" class=\"headerlink\" title=\"Excel\"></a>Excel</h3><p>如图，多个学生成绩，在加权总和先计算出每行和数据和对应权值的乘积之和，再作除法即可得出结果。</p>\n<p>利用<code>SUMPRODUCT()</code>函数，接收两个参数，一个权值序列，一个真实数据序列。</p>\n<p><img src=\"/images/data_analyze/3.png\" alt=\"计算乘积和\"></p>\n<p><img src=\"/images/data_analyze/4.png\" alt=\"计算加权平均数\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">a = (<span class=\"number\">70</span>, <span class=\"number\">80</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">np.mean(a)  <span class=\"comment\"># 平均值</span></span><br><span class=\"line\"></span><br><span class=\"line\">r = np.average(a, weights=[<span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>])  <span class=\"comment\"># 加权平均值</span></span><br><span class=\"line\"></span><br><span class=\"line\">print(r)</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/data_analyze/1.png\" alt=\"Python\"></p>\n<h3 id=\"R\"><a href=\"#R\" class=\"headerlink\" title=\"R\"></a>R</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a &lt;- c(<span class=\"number\">70</span>,<span class=\"number\">80</span>,<span class=\"number\">60</span>)</span><br><span class=\"line\">mean(a)  <span class=\"comment\">#平均值</span></span><br><span class=\"line\"></span><br><span class=\"line\">wt &lt;- c(<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\">weighted.mean(a,wt) <span class=\"comment\">#加权平均值</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/data_analyze/2.png\" alt=\"R\"></p>\n<h3 id=\"Excel\"><a href=\"#Excel\" class=\"headerlink\" title=\"Excel\"></a>Excel</h3><p>如图，多个学生成绩，在加权总和先计算出每行和数据和对应权值的乘积之和，再作除法即可得出结果。</p>\n<p>利用<code>SUMPRODUCT()</code>函数，接收两个参数，一个权值序列，一个真实数据序列。</p>\n<p><img src=\"/images/data_analyze/3.png\" alt=\"计算乘积和\"></p>\n<p><img src=\"/images/data_analyze/4.png\" alt=\"计算加权平均数\"></p>\n"},{"title":"利用Python、R、Excel做频数统计并绘制条形图和饼图","date":"2018-03-07T03:03:41.000Z","_content":"\nExcel、Python、R三种方法进行频数分析并画出条形图和饼形图\n\nExcel 利用函数COUNTIF，传入两个参数，第一个为源数据，第二个为分类数据各列一遍（即频数统计的各项）\n\n-----\n### Python\n##### 频数统计\n利用count()函数，具体见下方条形图的代码。\n##### 条形图\n方法如下：\n\n> matplotlib.pyplot.bar(left, height, width=0.8, bottom=None, hold=None, data=None, **kwargs)\n\n参数说明：\n\n- left: 每一个柱形左侧的X坐标\n\n- height:每一个柱形的高度\n\n- width: 柱形之间的宽度\n\n- bottom: 柱形的Y坐标\n\n- color: 柱形的颜色\n\n<!--more-->\n\n[官网解释](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.bar.html#matplotlib.pyplot.bar)\n\n代码示例：\n\n    from matplotlib import pyplot as plt\n    import numpy as np\n    \n    # 中文乱码的处理\n    plt.rcParams['font.sans-serif'] =['Microsoft YaHei']\n    plt.rcParams['axes.unicode_minus'] = False\n    \n    #第一步，取出一张白纸\n    fig = plt.figure(1)\n    \n    #第二步，确定绘图范围，由于只需要画一张图，所以我们将整张白纸作为绘图的范围(111等同于1,1,1 表示一行一列的第一个)\n    ax1 = plt.subplot(111)\n    \n    #第三步，整理我们准备绘制的数据\n    data = np.array([15, 20, 18, 25])\n    \n    #第四步，准备绘制条形图，思考绘制条形图需要确定那些要素\n    #1、绘制的条形宽度\n    #2、绘制的条形位置(中心)\n    #3、条形图的高度（数据值）\n    width=0.5\n    x_bar = np.arange(4)\n    \n    #第五步，绘制条形图的主体，条形图实质上就是一系列的矩形元素，我们通过plt.bar函数来绘制条形图\n    rect = ax1.bar(left=x_bar, height=data, width=width, color=\"lightblue\")\n    \n    #第六步，向各条形上添加数据标签\n    for rec in rect:\n        x=rec.get_x()\n        height=rec.get_height()\n        ax1.text(x+0.1,1.02*height,str(height))\n    \n    #第七步，绘制x，y坐标轴刻度及标签，标题\n    ax1.set_xticks(x_bar)\n    ax1.set_xticklabels((\"first\", \"second\", \"third\", \"fourth\"))\n    ax1.set_ylabel(\"sales\")\n    ax1.set_title(\"The Sales in 2016\")\n    ax1.grid(True)\n    ax1.set_ylim(0, 28)\n    plt.show()\n\n\n其中第五步创建矩形元素中，\nleft为x轴的位置序列，一般采用arange函数产生一个序列；height为y轴的数值序列，也就是柱形图的高度，一般就是我们需要展示的数据；width为柱形图的宽度。\n\n或者：\n\n    import random\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    tv_show = [\"WoF\", \"THM\", \"Jep\", \"JJ\", \"OWS\"]\n    tvs = [random.choice(tv_show) for _ in range(50)]\n    # print(tvs)\n    # 频数\n    WoF_count = tvs.count(\"WoF\")\n    THM_count = tvs.count(\"THM\")\n    Jep_count = tvs.count(\"Jep\")\n    JJ_count = tvs.count(\"JJ\")\n    OWS_count = tvs.count(\"OWS\")\n    \n    # 条形图\n    x_bar = np.arange(5)\n    data = np.array([WoF_count, THM_count, Jep_count, JJ_count, OWS_count])\n    fig = plt.figure()\n    ax1 = plt.subplot(111)\n    rect = ax1.bar(left=x_bar, width=0.5, height=data, color=\"lightblue\")\n    \n    ax1.set_xticks(x_bar)\n    ax1.set_xticklabels(tv_show)\n    plt.xlabel(\"X\")\n    plt.ylabel(\"Y\")\n    plt.title(\"bar chart\")\n    plt.show()\n    \n画出的图像是这样的\n![](http://ww1.sinaimg.cn/large/006S91wdgy1fp4214rt3oj30hs0d50sq.jpg)\n    \n##### 饼形图\n方法及参数：\n\n> pie(x, explode=None, labels=None,  \n        colors=('b', 'g', 'r', 'c', 'm', 'y', 'k', 'w'),  \n        autopct=None, pctdistance=0.6, shadow=False,  \n        labeldistance=1.1, startangle=None, radius=None,  \n        counterclock=True, wedgeprops=None, textprops=None,  \n        center = (0, 0), frame = False )  \n    \n参数说明：\n- x       (每一块)的比例，如果sum(x) > 1会使用sum(x)归一化\n- labels  (每一块)饼图外侧显示的说明文字\n- explode (每一块)离开中心距离\n- startangle  起始绘制角度,默认图是从x轴正方向逆时针画起,如设定=90则从y轴正方向画起\n- shadow  是否阴影\n- labeldistance label绘制位置,相对于半径的比例, 如<1则绘制在饼图内侧\n- autopct 控制饼图内百分比设置,可以使用format字符串或者format function\n- '%1.1f'指小数点前后位数(没有用空格补齐)\n- pctdistance 类似于labeldistance,指定autopct的位置刻度\n- radius  控制饼图半径\n\n随便以测试数据为例，画风大致是这样的\n    \n    import numpy as np\n    import matplotlib.pyplot as plt\n    \n    labels=['China','Swiss','USA','UK','Laos','Spain']\n    x = [222, 42, 455, 664, 454, 334]\n    explode = [0, 0.1, 0, 0, 0, 0] # 0.1 凸出这部分，\n    \n    fig = plt.figure()\n    plt.pie(x, labels=labels, explode=explode, autopct='%1.2f%%')\n    plt.title(\"Pie chart\")\n    \n    plt.show()\n    plt.savefig(\"PieChart.jpg\")\n    \n![](http://ww1.sinaimg.cn/large/006S91wdgy1fp425rzm6mj30hs0d5t99.jpg)\n    \n-------------\n    \n### R\n利用table()函数，即可直观的看到频数。\n\n举个栗子：\n    \n    a <- c('A','B','C','A','D','B','E')\n\n    test <- table(a)\n    # 提取table()中的元素\n    names(test)\n    # 提取table()中的频数\n    as.numeric(test)\n    \n    # 转换\n    test2 <- as.data.frame(test)\n    test2\n    # 提取table()中频数为1的数据\n    test2[which(test2$Freq==1),]\n    # 提取table()中指定元素2的频数\n    test2[which(test2$a=='A'),]\n    \n##### 画条形图：\n\n    library(ggplot2)\n    test <- c('A','B','C','D','A','C','C')\n    test1 <- table(test)\n    test2 <- as.data.frame(test1)\n    x<-test2$test\n    y<-test2$Freq\n    ggplot(data=test2, aes(x=test, y=Freq)) + geom_bar(stat='identity')\n    \n    \n使用汇总好的数据画图\n\n    x <- c('A','B','C','D','E')\n    y <- c(13,22,16,31,8)\n    df <- data.frame(x = x, y = y)\n    ggplot(data = df, mapping = aes(x = x, y = y)) + geom_bar(stat = 'identity')\n    \n![](http://ww1.sinaimg.cn/large/006S91wdly1fp42d255vaj30cj0a7q2q.jpg)\n    \n要强调的是如果横轴对应数据非离散型，则须先将其转为因子类型，否则结果会出现\"空条\"。利用factor()函数。\n\n[geombar官方文档](http://ggplot2.tidyverse.org/reference/geom_bar.html)\n\n##### 饼图：\n    x <- c(9, 2, 4, 5)\n    labels <- c('A', 'B', 'C', 'D')\n    \n    # 给文件指定名称\n    png(file=\"ABCD.jpg\")\n    # 画图\n    pie(x, labels, main='pie chart demo', col=rainbow(length(x)), radius = 0.9)\n    # 保存\n    dev.off()\n    \n![](http://ww1.sinaimg.cn/large/006S91wdgy1fp42i5mveoj30dc0dcglf.jpg)\n  \n使用R画饼图的语法如下：  \n> pie(x, labels, radius, main, col, clockwise)\n\n以下是使用的参数的描述 -\n\n- x - 是包含饼图中使用的数值的向量。\n- labels - 用于描述切片的标签。\n- radius - 用来表示饼图圆的半径(-1和+1之间的值)。\n- main - 用来表示图表的标题。\n- col - 表示调色板。\n- clockwise - 是一个逻辑值，指示片是顺时针还是逆时针绘制。","source":"_posts/利用Python、R、Excel做频数统计并绘制条形图和饼图.md","raw":"---\ntitle: 利用Python、R、Excel做频数统计并绘制条形图和饼图\ndate: 2018-03-07 11:03:41\ntags: 数据分析 Python R Excel\ncategories: 商务与经济统计\n---\n\nExcel、Python、R三种方法进行频数分析并画出条形图和饼形图\n\nExcel 利用函数COUNTIF，传入两个参数，第一个为源数据，第二个为分类数据各列一遍（即频数统计的各项）\n\n-----\n### Python\n##### 频数统计\n利用count()函数，具体见下方条形图的代码。\n##### 条形图\n方法如下：\n\n> matplotlib.pyplot.bar(left, height, width=0.8, bottom=None, hold=None, data=None, **kwargs)\n\n参数说明：\n\n- left: 每一个柱形左侧的X坐标\n\n- height:每一个柱形的高度\n\n- width: 柱形之间的宽度\n\n- bottom: 柱形的Y坐标\n\n- color: 柱形的颜色\n\n<!--more-->\n\n[官网解释](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.bar.html#matplotlib.pyplot.bar)\n\n代码示例：\n\n    from matplotlib import pyplot as plt\n    import numpy as np\n    \n    # 中文乱码的处理\n    plt.rcParams['font.sans-serif'] =['Microsoft YaHei']\n    plt.rcParams['axes.unicode_minus'] = False\n    \n    #第一步，取出一张白纸\n    fig = plt.figure(1)\n    \n    #第二步，确定绘图范围，由于只需要画一张图，所以我们将整张白纸作为绘图的范围(111等同于1,1,1 表示一行一列的第一个)\n    ax1 = plt.subplot(111)\n    \n    #第三步，整理我们准备绘制的数据\n    data = np.array([15, 20, 18, 25])\n    \n    #第四步，准备绘制条形图，思考绘制条形图需要确定那些要素\n    #1、绘制的条形宽度\n    #2、绘制的条形位置(中心)\n    #3、条形图的高度（数据值）\n    width=0.5\n    x_bar = np.arange(4)\n    \n    #第五步，绘制条形图的主体，条形图实质上就是一系列的矩形元素，我们通过plt.bar函数来绘制条形图\n    rect = ax1.bar(left=x_bar, height=data, width=width, color=\"lightblue\")\n    \n    #第六步，向各条形上添加数据标签\n    for rec in rect:\n        x=rec.get_x()\n        height=rec.get_height()\n        ax1.text(x+0.1,1.02*height,str(height))\n    \n    #第七步，绘制x，y坐标轴刻度及标签，标题\n    ax1.set_xticks(x_bar)\n    ax1.set_xticklabels((\"first\", \"second\", \"third\", \"fourth\"))\n    ax1.set_ylabel(\"sales\")\n    ax1.set_title(\"The Sales in 2016\")\n    ax1.grid(True)\n    ax1.set_ylim(0, 28)\n    plt.show()\n\n\n其中第五步创建矩形元素中，\nleft为x轴的位置序列，一般采用arange函数产生一个序列；height为y轴的数值序列，也就是柱形图的高度，一般就是我们需要展示的数据；width为柱形图的宽度。\n\n或者：\n\n    import random\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    tv_show = [\"WoF\", \"THM\", \"Jep\", \"JJ\", \"OWS\"]\n    tvs = [random.choice(tv_show) for _ in range(50)]\n    # print(tvs)\n    # 频数\n    WoF_count = tvs.count(\"WoF\")\n    THM_count = tvs.count(\"THM\")\n    Jep_count = tvs.count(\"Jep\")\n    JJ_count = tvs.count(\"JJ\")\n    OWS_count = tvs.count(\"OWS\")\n    \n    # 条形图\n    x_bar = np.arange(5)\n    data = np.array([WoF_count, THM_count, Jep_count, JJ_count, OWS_count])\n    fig = plt.figure()\n    ax1 = plt.subplot(111)\n    rect = ax1.bar(left=x_bar, width=0.5, height=data, color=\"lightblue\")\n    \n    ax1.set_xticks(x_bar)\n    ax1.set_xticklabels(tv_show)\n    plt.xlabel(\"X\")\n    plt.ylabel(\"Y\")\n    plt.title(\"bar chart\")\n    plt.show()\n    \n画出的图像是这样的\n![](http://ww1.sinaimg.cn/large/006S91wdgy1fp4214rt3oj30hs0d50sq.jpg)\n    \n##### 饼形图\n方法及参数：\n\n> pie(x, explode=None, labels=None,  \n        colors=('b', 'g', 'r', 'c', 'm', 'y', 'k', 'w'),  \n        autopct=None, pctdistance=0.6, shadow=False,  \n        labeldistance=1.1, startangle=None, radius=None,  \n        counterclock=True, wedgeprops=None, textprops=None,  \n        center = (0, 0), frame = False )  \n    \n参数说明：\n- x       (每一块)的比例，如果sum(x) > 1会使用sum(x)归一化\n- labels  (每一块)饼图外侧显示的说明文字\n- explode (每一块)离开中心距离\n- startangle  起始绘制角度,默认图是从x轴正方向逆时针画起,如设定=90则从y轴正方向画起\n- shadow  是否阴影\n- labeldistance label绘制位置,相对于半径的比例, 如<1则绘制在饼图内侧\n- autopct 控制饼图内百分比设置,可以使用format字符串或者format function\n- '%1.1f'指小数点前后位数(没有用空格补齐)\n- pctdistance 类似于labeldistance,指定autopct的位置刻度\n- radius  控制饼图半径\n\n随便以测试数据为例，画风大致是这样的\n    \n    import numpy as np\n    import matplotlib.pyplot as plt\n    \n    labels=['China','Swiss','USA','UK','Laos','Spain']\n    x = [222, 42, 455, 664, 454, 334]\n    explode = [0, 0.1, 0, 0, 0, 0] # 0.1 凸出这部分，\n    \n    fig = plt.figure()\n    plt.pie(x, labels=labels, explode=explode, autopct='%1.2f%%')\n    plt.title(\"Pie chart\")\n    \n    plt.show()\n    plt.savefig(\"PieChart.jpg\")\n    \n![](http://ww1.sinaimg.cn/large/006S91wdgy1fp425rzm6mj30hs0d5t99.jpg)\n    \n-------------\n    \n### R\n利用table()函数，即可直观的看到频数。\n\n举个栗子：\n    \n    a <- c('A','B','C','A','D','B','E')\n\n    test <- table(a)\n    # 提取table()中的元素\n    names(test)\n    # 提取table()中的频数\n    as.numeric(test)\n    \n    # 转换\n    test2 <- as.data.frame(test)\n    test2\n    # 提取table()中频数为1的数据\n    test2[which(test2$Freq==1),]\n    # 提取table()中指定元素2的频数\n    test2[which(test2$a=='A'),]\n    \n##### 画条形图：\n\n    library(ggplot2)\n    test <- c('A','B','C','D','A','C','C')\n    test1 <- table(test)\n    test2 <- as.data.frame(test1)\n    x<-test2$test\n    y<-test2$Freq\n    ggplot(data=test2, aes(x=test, y=Freq)) + geom_bar(stat='identity')\n    \n    \n使用汇总好的数据画图\n\n    x <- c('A','B','C','D','E')\n    y <- c(13,22,16,31,8)\n    df <- data.frame(x = x, y = y)\n    ggplot(data = df, mapping = aes(x = x, y = y)) + geom_bar(stat = 'identity')\n    \n![](http://ww1.sinaimg.cn/large/006S91wdly1fp42d255vaj30cj0a7q2q.jpg)\n    \n要强调的是如果横轴对应数据非离散型，则须先将其转为因子类型，否则结果会出现\"空条\"。利用factor()函数。\n\n[geombar官方文档](http://ggplot2.tidyverse.org/reference/geom_bar.html)\n\n##### 饼图：\n    x <- c(9, 2, 4, 5)\n    labels <- c('A', 'B', 'C', 'D')\n    \n    # 给文件指定名称\n    png(file=\"ABCD.jpg\")\n    # 画图\n    pie(x, labels, main='pie chart demo', col=rainbow(length(x)), radius = 0.9)\n    # 保存\n    dev.off()\n    \n![](http://ww1.sinaimg.cn/large/006S91wdgy1fp42i5mveoj30dc0dcglf.jpg)\n  \n使用R画饼图的语法如下：  \n> pie(x, labels, radius, main, col, clockwise)\n\n以下是使用的参数的描述 -\n\n- x - 是包含饼图中使用的数值的向量。\n- labels - 用于描述切片的标签。\n- radius - 用来表示饼图圆的半径(-1和+1之间的值)。\n- main - 用来表示图表的标题。\n- col - 表示调色板。\n- clockwise - 是一个逻辑值，指示片是顺时针还是逆时针绘制。","slug":"利用Python、R、Excel做频数统计并绘制条形图和饼图","published":1,"updated":"2018-03-29T00:38:53.166Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wy9000ub46wxfzgdufy","content":"<p>Excel、Python、R三种方法进行频数分析并画出条形图和饼形图</p>\n<p>Excel 利用函数COUNTIF，传入两个参数，第一个为源数据，第二个为分类数据各列一遍（即频数统计的各项）</p>\n<hr>\n<h3 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h3><h5 id=\"频数统计\"><a href=\"#频数统计\" class=\"headerlink\" title=\"频数统计\"></a>频数统计</h5><p>利用count()函数，具体见下方条形图的代码。</p>\n<h5 id=\"条形图\"><a href=\"#条形图\" class=\"headerlink\" title=\"条形图\"></a>条形图</h5><p>方法如下：</p>\n<blockquote>\n<p>matplotlib.pyplot.bar(left, height, width=0.8, bottom=None, hold=None, data=None, **kwargs)</p>\n</blockquote>\n<p>参数说明：</p>\n<ul>\n<li><p>left: 每一个柱形左侧的X坐标</p>\n</li>\n<li><p>height:每一个柱形的高度</p>\n</li>\n<li><p>width: 柱形之间的宽度</p>\n</li>\n<li><p>bottom: 柱形的Y坐标</p>\n</li>\n<li><p>color: 柱形的颜色</p>\n</li>\n</ul>\n<a id=\"more\"></a>\n<p><a href=\"https://matplotlib.org/api/_as_gen/matplotlib.pyplot.bar.html#matplotlib.pyplot.bar\" target=\"_blank\" rel=\"noopener\">官网解释</a></p>\n<p>代码示例：</p>\n<pre><code>from matplotlib import pyplot as plt\nimport numpy as np\n\n# 中文乱码的处理\nplt.rcParams[&apos;font.sans-serif&apos;] =[&apos;Microsoft YaHei&apos;]\nplt.rcParams[&apos;axes.unicode_minus&apos;] = False\n\n#第一步，取出一张白纸\nfig = plt.figure(1)\n\n#第二步，确定绘图范围，由于只需要画一张图，所以我们将整张白纸作为绘图的范围(111等同于1,1,1 表示一行一列的第一个)\nax1 = plt.subplot(111)\n\n#第三步，整理我们准备绘制的数据\ndata = np.array([15, 20, 18, 25])\n\n#第四步，准备绘制条形图，思考绘制条形图需要确定那些要素\n#1、绘制的条形宽度\n#2、绘制的条形位置(中心)\n#3、条形图的高度（数据值）\nwidth=0.5\nx_bar = np.arange(4)\n\n#第五步，绘制条形图的主体，条形图实质上就是一系列的矩形元素，我们通过plt.bar函数来绘制条形图\nrect = ax1.bar(left=x_bar, height=data, width=width, color=&quot;lightblue&quot;)\n\n#第六步，向各条形上添加数据标签\nfor rec in rect:\n    x=rec.get_x()\n    height=rec.get_height()\n    ax1.text(x+0.1,1.02*height,str(height))\n\n#第七步，绘制x，y坐标轴刻度及标签，标题\nax1.set_xticks(x_bar)\nax1.set_xticklabels((&quot;first&quot;, &quot;second&quot;, &quot;third&quot;, &quot;fourth&quot;))\nax1.set_ylabel(&quot;sales&quot;)\nax1.set_title(&quot;The Sales in 2016&quot;)\nax1.grid(True)\nax1.set_ylim(0, 28)\nplt.show()\n</code></pre><p>其中第五步创建矩形元素中，<br>left为x轴的位置序列，一般采用arange函数产生一个序列；height为y轴的数值序列，也就是柱形图的高度，一般就是我们需要展示的数据；width为柱形图的宽度。</p>\n<p>或者：</p>\n<pre><code>import random\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\ntv_show = [&quot;WoF&quot;, &quot;THM&quot;, &quot;Jep&quot;, &quot;JJ&quot;, &quot;OWS&quot;]\ntvs = [random.choice(tv_show) for _ in range(50)]\n# print(tvs)\n# 频数\nWoF_count = tvs.count(&quot;WoF&quot;)\nTHM_count = tvs.count(&quot;THM&quot;)\nJep_count = tvs.count(&quot;Jep&quot;)\nJJ_count = tvs.count(&quot;JJ&quot;)\nOWS_count = tvs.count(&quot;OWS&quot;)\n\n# 条形图\nx_bar = np.arange(5)\ndata = np.array([WoF_count, THM_count, Jep_count, JJ_count, OWS_count])\nfig = plt.figure()\nax1 = plt.subplot(111)\nrect = ax1.bar(left=x_bar, width=0.5, height=data, color=&quot;lightblue&quot;)\n\nax1.set_xticks(x_bar)\nax1.set_xticklabels(tv_show)\nplt.xlabel(&quot;X&quot;)\nplt.ylabel(&quot;Y&quot;)\nplt.title(&quot;bar chart&quot;)\nplt.show()\n</code></pre><p>画出的图像是这样的<br><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fp4214rt3oj30hs0d50sq.jpg\" alt=\"\"></p>\n<h5 id=\"饼形图\"><a href=\"#饼形图\" class=\"headerlink\" title=\"饼形图\"></a>饼形图</h5><p>方法及参数：</p>\n<blockquote>\n<p>pie(x, explode=None, labels=None,<br>        colors=(‘b’, ‘g’, ‘r’, ‘c’, ‘m’, ‘y’, ‘k’, ‘w’),<br>        autopct=None, pctdistance=0.6, shadow=False,<br>        labeldistance=1.1, startangle=None, radius=None,<br>        counterclock=True, wedgeprops=None, textprops=None,<br>        center = (0, 0), frame = False )  </p>\n</blockquote>\n<p>参数说明：</p>\n<ul>\n<li>x       (每一块)的比例，如果sum(x) &gt; 1会使用sum(x)归一化</li>\n<li>labels  (每一块)饼图外侧显示的说明文字</li>\n<li>explode (每一块)离开中心距离</li>\n<li>startangle  起始绘制角度,默认图是从x轴正方向逆时针画起,如设定=90则从y轴正方向画起</li>\n<li>shadow  是否阴影</li>\n<li>labeldistance label绘制位置,相对于半径的比例, 如&lt;1则绘制在饼图内侧</li>\n<li>autopct 控制饼图内百分比设置,可以使用format字符串或者format function</li>\n<li>‘%1.1f’指小数点前后位数(没有用空格补齐)</li>\n<li>pctdistance 类似于labeldistance,指定autopct的位置刻度</li>\n<li>radius  控制饼图半径</li>\n</ul>\n<p>随便以测试数据为例，画风大致是这样的</p>\n<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nlabels=[&apos;China&apos;,&apos;Swiss&apos;,&apos;USA&apos;,&apos;UK&apos;,&apos;Laos&apos;,&apos;Spain&apos;]\nx = [222, 42, 455, 664, 454, 334]\nexplode = [0, 0.1, 0, 0, 0, 0] # 0.1 凸出这部分，\n\nfig = plt.figure()\nplt.pie(x, labels=labels, explode=explode, autopct=&apos;%1.2f%%&apos;)\nplt.title(&quot;Pie chart&quot;)\n\nplt.show()\nplt.savefig(&quot;PieChart.jpg&quot;)\n</code></pre><p><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fp425rzm6mj30hs0d5t99.jpg\" alt=\"\"></p>\n<hr>\n<h3 id=\"R\"><a href=\"#R\" class=\"headerlink\" title=\"R\"></a>R</h3><p>利用table()函数，即可直观的看到频数。</p>\n<p>举个栗子：</p>\n<pre><code>a &lt;- c(&apos;A&apos;,&apos;B&apos;,&apos;C&apos;,&apos;A&apos;,&apos;D&apos;,&apos;B&apos;,&apos;E&apos;)\n\ntest &lt;- table(a)\n# 提取table()中的元素\nnames(test)\n# 提取table()中的频数\nas.numeric(test)\n\n# 转换\ntest2 &lt;- as.data.frame(test)\ntest2\n# 提取table()中频数为1的数据\ntest2[which(test2$Freq==1),]\n# 提取table()中指定元素2的频数\ntest2[which(test2$a==&apos;A&apos;),]\n</code></pre><h5 id=\"画条形图：\"><a href=\"#画条形图：\" class=\"headerlink\" title=\"画条形图：\"></a>画条形图：</h5><pre><code>library(ggplot2)\ntest &lt;- c(&apos;A&apos;,&apos;B&apos;,&apos;C&apos;,&apos;D&apos;,&apos;A&apos;,&apos;C&apos;,&apos;C&apos;)\ntest1 &lt;- table(test)\ntest2 &lt;- as.data.frame(test1)\nx&lt;-test2$test\ny&lt;-test2$Freq\nggplot(data=test2, aes(x=test, y=Freq)) + geom_bar(stat=&apos;identity&apos;)\n</code></pre><p>使用汇总好的数据画图</p>\n<pre><code>x &lt;- c(&apos;A&apos;,&apos;B&apos;,&apos;C&apos;,&apos;D&apos;,&apos;E&apos;)\ny &lt;- c(13,22,16,31,8)\ndf &lt;- data.frame(x = x, y = y)\nggplot(data = df, mapping = aes(x = x, y = y)) + geom_bar(stat = &apos;identity&apos;)\n</code></pre><p><img src=\"http://ww1.sinaimg.cn/large/006S91wdly1fp42d255vaj30cj0a7q2q.jpg\" alt=\"\"></p>\n<p>要强调的是如果横轴对应数据非离散型，则须先将其转为因子类型，否则结果会出现”空条”。利用factor()函数。</p>\n<p><a href=\"http://ggplot2.tidyverse.org/reference/geom_bar.html\" target=\"_blank\" rel=\"noopener\">geombar官方文档</a></p>\n<h5 id=\"饼图：\"><a href=\"#饼图：\" class=\"headerlink\" title=\"饼图：\"></a>饼图：</h5><pre><code>x &lt;- c(9, 2, 4, 5)\nlabels &lt;- c(&apos;A&apos;, &apos;B&apos;, &apos;C&apos;, &apos;D&apos;)\n\n# 给文件指定名称\npng(file=&quot;ABCD.jpg&quot;)\n# 画图\npie(x, labels, main=&apos;pie chart demo&apos;, col=rainbow(length(x)), radius = 0.9)\n# 保存\ndev.off()\n</code></pre><p><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fp42i5mveoj30dc0dcglf.jpg\" alt=\"\"></p>\n<p>使用R画饼图的语法如下：  </p>\n<blockquote>\n<p>pie(x, labels, radius, main, col, clockwise)</p>\n</blockquote>\n<p>以下是使用的参数的描述 -</p>\n<ul>\n<li>x - 是包含饼图中使用的数值的向量。</li>\n<li>labels - 用于描述切片的标签。</li>\n<li>radius - 用来表示饼图圆的半径(-1和+1之间的值)。</li>\n<li>main - 用来表示图表的标题。</li>\n<li>col - 表示调色板。</li>\n<li>clockwise - 是一个逻辑值，指示片是顺时针还是逆时针绘制。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>Excel、Python、R三种方法进行频数分析并画出条形图和饼形图</p>\n<p>Excel 利用函数COUNTIF，传入两个参数，第一个为源数据，第二个为分类数据各列一遍（即频数统计的各项）</p>\n<hr>\n<h3 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h3><h5 id=\"频数统计\"><a href=\"#频数统计\" class=\"headerlink\" title=\"频数统计\"></a>频数统计</h5><p>利用count()函数，具体见下方条形图的代码。</p>\n<h5 id=\"条形图\"><a href=\"#条形图\" class=\"headerlink\" title=\"条形图\"></a>条形图</h5><p>方法如下：</p>\n<blockquote>\n<p>matplotlib.pyplot.bar(left, height, width=0.8, bottom=None, hold=None, data=None, **kwargs)</p>\n</blockquote>\n<p>参数说明：</p>\n<ul>\n<li><p>left: 每一个柱形左侧的X坐标</p>\n</li>\n<li><p>height:每一个柱形的高度</p>\n</li>\n<li><p>width: 柱形之间的宽度</p>\n</li>\n<li><p>bottom: 柱形的Y坐标</p>\n</li>\n<li><p>color: 柱形的颜色</p>\n</li>\n</ul>","more":"<p><a href=\"https://matplotlib.org/api/_as_gen/matplotlib.pyplot.bar.html#matplotlib.pyplot.bar\" target=\"_blank\" rel=\"noopener\">官网解释</a></p>\n<p>代码示例：</p>\n<pre><code>from matplotlib import pyplot as plt\nimport numpy as np\n\n# 中文乱码的处理\nplt.rcParams[&apos;font.sans-serif&apos;] =[&apos;Microsoft YaHei&apos;]\nplt.rcParams[&apos;axes.unicode_minus&apos;] = False\n\n#第一步，取出一张白纸\nfig = plt.figure(1)\n\n#第二步，确定绘图范围，由于只需要画一张图，所以我们将整张白纸作为绘图的范围(111等同于1,1,1 表示一行一列的第一个)\nax1 = plt.subplot(111)\n\n#第三步，整理我们准备绘制的数据\ndata = np.array([15, 20, 18, 25])\n\n#第四步，准备绘制条形图，思考绘制条形图需要确定那些要素\n#1、绘制的条形宽度\n#2、绘制的条形位置(中心)\n#3、条形图的高度（数据值）\nwidth=0.5\nx_bar = np.arange(4)\n\n#第五步，绘制条形图的主体，条形图实质上就是一系列的矩形元素，我们通过plt.bar函数来绘制条形图\nrect = ax1.bar(left=x_bar, height=data, width=width, color=&quot;lightblue&quot;)\n\n#第六步，向各条形上添加数据标签\nfor rec in rect:\n    x=rec.get_x()\n    height=rec.get_height()\n    ax1.text(x+0.1,1.02*height,str(height))\n\n#第七步，绘制x，y坐标轴刻度及标签，标题\nax1.set_xticks(x_bar)\nax1.set_xticklabels((&quot;first&quot;, &quot;second&quot;, &quot;third&quot;, &quot;fourth&quot;))\nax1.set_ylabel(&quot;sales&quot;)\nax1.set_title(&quot;The Sales in 2016&quot;)\nax1.grid(True)\nax1.set_ylim(0, 28)\nplt.show()\n</code></pre><p>其中第五步创建矩形元素中，<br>left为x轴的位置序列，一般采用arange函数产生一个序列；height为y轴的数值序列，也就是柱形图的高度，一般就是我们需要展示的数据；width为柱形图的宽度。</p>\n<p>或者：</p>\n<pre><code>import random\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\ntv_show = [&quot;WoF&quot;, &quot;THM&quot;, &quot;Jep&quot;, &quot;JJ&quot;, &quot;OWS&quot;]\ntvs = [random.choice(tv_show) for _ in range(50)]\n# print(tvs)\n# 频数\nWoF_count = tvs.count(&quot;WoF&quot;)\nTHM_count = tvs.count(&quot;THM&quot;)\nJep_count = tvs.count(&quot;Jep&quot;)\nJJ_count = tvs.count(&quot;JJ&quot;)\nOWS_count = tvs.count(&quot;OWS&quot;)\n\n# 条形图\nx_bar = np.arange(5)\ndata = np.array([WoF_count, THM_count, Jep_count, JJ_count, OWS_count])\nfig = plt.figure()\nax1 = plt.subplot(111)\nrect = ax1.bar(left=x_bar, width=0.5, height=data, color=&quot;lightblue&quot;)\n\nax1.set_xticks(x_bar)\nax1.set_xticklabels(tv_show)\nplt.xlabel(&quot;X&quot;)\nplt.ylabel(&quot;Y&quot;)\nplt.title(&quot;bar chart&quot;)\nplt.show()\n</code></pre><p>画出的图像是这样的<br><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fp4214rt3oj30hs0d50sq.jpg\" alt=\"\"></p>\n<h5 id=\"饼形图\"><a href=\"#饼形图\" class=\"headerlink\" title=\"饼形图\"></a>饼形图</h5><p>方法及参数：</p>\n<blockquote>\n<p>pie(x, explode=None, labels=None,<br>        colors=(‘b’, ‘g’, ‘r’, ‘c’, ‘m’, ‘y’, ‘k’, ‘w’),<br>        autopct=None, pctdistance=0.6, shadow=False,<br>        labeldistance=1.1, startangle=None, radius=None,<br>        counterclock=True, wedgeprops=None, textprops=None,<br>        center = (0, 0), frame = False )  </p>\n</blockquote>\n<p>参数说明：</p>\n<ul>\n<li>x       (每一块)的比例，如果sum(x) &gt; 1会使用sum(x)归一化</li>\n<li>labels  (每一块)饼图外侧显示的说明文字</li>\n<li>explode (每一块)离开中心距离</li>\n<li>startangle  起始绘制角度,默认图是从x轴正方向逆时针画起,如设定=90则从y轴正方向画起</li>\n<li>shadow  是否阴影</li>\n<li>labeldistance label绘制位置,相对于半径的比例, 如&lt;1则绘制在饼图内侧</li>\n<li>autopct 控制饼图内百分比设置,可以使用format字符串或者format function</li>\n<li>‘%1.1f’指小数点前后位数(没有用空格补齐)</li>\n<li>pctdistance 类似于labeldistance,指定autopct的位置刻度</li>\n<li>radius  控制饼图半径</li>\n</ul>\n<p>随便以测试数据为例，画风大致是这样的</p>\n<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nlabels=[&apos;China&apos;,&apos;Swiss&apos;,&apos;USA&apos;,&apos;UK&apos;,&apos;Laos&apos;,&apos;Spain&apos;]\nx = [222, 42, 455, 664, 454, 334]\nexplode = [0, 0.1, 0, 0, 0, 0] # 0.1 凸出这部分，\n\nfig = plt.figure()\nplt.pie(x, labels=labels, explode=explode, autopct=&apos;%1.2f%%&apos;)\nplt.title(&quot;Pie chart&quot;)\n\nplt.show()\nplt.savefig(&quot;PieChart.jpg&quot;)\n</code></pre><p><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fp425rzm6mj30hs0d5t99.jpg\" alt=\"\"></p>\n<hr>\n<h3 id=\"R\"><a href=\"#R\" class=\"headerlink\" title=\"R\"></a>R</h3><p>利用table()函数，即可直观的看到频数。</p>\n<p>举个栗子：</p>\n<pre><code>a &lt;- c(&apos;A&apos;,&apos;B&apos;,&apos;C&apos;,&apos;A&apos;,&apos;D&apos;,&apos;B&apos;,&apos;E&apos;)\n\ntest &lt;- table(a)\n# 提取table()中的元素\nnames(test)\n# 提取table()中的频数\nas.numeric(test)\n\n# 转换\ntest2 &lt;- as.data.frame(test)\ntest2\n# 提取table()中频数为1的数据\ntest2[which(test2$Freq==1),]\n# 提取table()中指定元素2的频数\ntest2[which(test2$a==&apos;A&apos;),]\n</code></pre><h5 id=\"画条形图：\"><a href=\"#画条形图：\" class=\"headerlink\" title=\"画条形图：\"></a>画条形图：</h5><pre><code>library(ggplot2)\ntest &lt;- c(&apos;A&apos;,&apos;B&apos;,&apos;C&apos;,&apos;D&apos;,&apos;A&apos;,&apos;C&apos;,&apos;C&apos;)\ntest1 &lt;- table(test)\ntest2 &lt;- as.data.frame(test1)\nx&lt;-test2$test\ny&lt;-test2$Freq\nggplot(data=test2, aes(x=test, y=Freq)) + geom_bar(stat=&apos;identity&apos;)\n</code></pre><p>使用汇总好的数据画图</p>\n<pre><code>x &lt;- c(&apos;A&apos;,&apos;B&apos;,&apos;C&apos;,&apos;D&apos;,&apos;E&apos;)\ny &lt;- c(13,22,16,31,8)\ndf &lt;- data.frame(x = x, y = y)\nggplot(data = df, mapping = aes(x = x, y = y)) + geom_bar(stat = &apos;identity&apos;)\n</code></pre><p><img src=\"http://ww1.sinaimg.cn/large/006S91wdly1fp42d255vaj30cj0a7q2q.jpg\" alt=\"\"></p>\n<p>要强调的是如果横轴对应数据非离散型，则须先将其转为因子类型，否则结果会出现”空条”。利用factor()函数。</p>\n<p><a href=\"http://ggplot2.tidyverse.org/reference/geom_bar.html\" target=\"_blank\" rel=\"noopener\">geombar官方文档</a></p>\n<h5 id=\"饼图：\"><a href=\"#饼图：\" class=\"headerlink\" title=\"饼图：\"></a>饼图：</h5><pre><code>x &lt;- c(9, 2, 4, 5)\nlabels &lt;- c(&apos;A&apos;, &apos;B&apos;, &apos;C&apos;, &apos;D&apos;)\n\n# 给文件指定名称\npng(file=&quot;ABCD.jpg&quot;)\n# 画图\npie(x, labels, main=&apos;pie chart demo&apos;, col=rainbow(length(x)), radius = 0.9)\n# 保存\ndev.off()\n</code></pre><p><img src=\"http://ww1.sinaimg.cn/large/006S91wdgy1fp42i5mveoj30dc0dcglf.jpg\" alt=\"\"></p>\n<p>使用R画饼图的语法如下：  </p>\n<blockquote>\n<p>pie(x, labels, radius, main, col, clockwise)</p>\n</blockquote>\n<p>以下是使用的参数的描述 -</p>\n<ul>\n<li>x - 是包含饼图中使用的数值的向量。</li>\n<li>labels - 用于描述切片的标签。</li>\n<li>radius - 用来表示饼图圆的半径(-1和+1之间的值)。</li>\n<li>main - 用来表示图表的标题。</li>\n<li>col - 表示调色板。</li>\n<li>clockwise - 是一个逻辑值，指示片是顺时针还是逆时针绘制。</li>\n</ul>"},{"title":"利用hexo和github page搭建博客（上）","date":"2018-02-05T02:15:46.000Z","_content":"\n安装NodeJS和Git并配置环境变量\n\n测试node\n\nnode -v\nnpm -v\n​   测试git\n\n电脑任一文件夹右键出现Git GUI Here和Git Bash Here\n<!--more-->\nGithub新建项目\n\n项目名必须遵守：用户名.github.io。并且勾选Initialize this repository with a README\n\n在建好的项目右侧有个setting按钮，点击后向下拉至github pages，访问网址，项目可以外网访问。\n\n安装Hexo\n\n选择位置创建文件夹，比如D:\\blog，进入目录，输入npm install hexo -g，开始安装Hexo\n\n输入hexo -v，检查hexo是否安装成功\n\n输入hexo init，初始化该文件夹\n\n输入npm install，安装所需组件\n\n输入hexo g，开启服务器，访问网址，一般端口是4000，如果不好使，可能是被占用，ctrl+c</button>停止服务器，接着输入“hexo server -p 端口号”来改变端口号\n\n将Hexo与Github page联系起来\n\n在blog文件夹右键点击Git Bash Here\n\n设置Git的user name和email（如果是第一次的话）\n\ngit config --global user.name \"yuanshuai\"\ngit config --golbal user.email \"17600232953@163.com\"\n输入 cd~/.ssh，检查是否有.ssh文件夹\n\n输入ssh-keygen -t rsa -C \"17600232953@163.com\",一直回车，生成密钥，存储位置为用户根路径下的.ssh文件夹\n\n输入eval \"$(ssh-agent -s)\"，添加密钥到ssh-agent\n\n输入ssh-add ~/.sssh/id_rsa，添加ssh key到ssh-agent\n\n登录Github添加ssh，拷贝id_rsa.pub内容\n\n配置Deployment\n\n在blog目录下_config.yml文件中，修改repo值\n\ndeploy:\n    type: get\n    repository: git@github.com:用户名.github.io.git\n    branch: master\nrepo值为github项目ssh地址\n\n新建博客\n\ncmd执行：hexo new post \"博客名\"\n\n生成部署之前，需要安装一个扩展：npm install hexo-deployer-git --save\n\nhexo d -g，生成及部署\n\n修改主题参考如下链接：\n\n传送门\n\n其中有一些问题，下篇详细列举。\n","source":"_posts/利用hexo和github-page搭建博客（上）.md","raw":"---\ntitle: 利用hexo和github page搭建博客（上）\ndate: 2018-02-05 10:15:46\ntags:\ncategories: hexo\n---\n\n安装NodeJS和Git并配置环境变量\n\n测试node\n\nnode -v\nnpm -v\n​   测试git\n\n电脑任一文件夹右键出现Git GUI Here和Git Bash Here\n<!--more-->\nGithub新建项目\n\n项目名必须遵守：用户名.github.io。并且勾选Initialize this repository with a README\n\n在建好的项目右侧有个setting按钮，点击后向下拉至github pages，访问网址，项目可以外网访问。\n\n安装Hexo\n\n选择位置创建文件夹，比如D:\\blog，进入目录，输入npm install hexo -g，开始安装Hexo\n\n输入hexo -v，检查hexo是否安装成功\n\n输入hexo init，初始化该文件夹\n\n输入npm install，安装所需组件\n\n输入hexo g，开启服务器，访问网址，一般端口是4000，如果不好使，可能是被占用，ctrl+c</button>停止服务器，接着输入“hexo server -p 端口号”来改变端口号\n\n将Hexo与Github page联系起来\n\n在blog文件夹右键点击Git Bash Here\n\n设置Git的user name和email（如果是第一次的话）\n\ngit config --global user.name \"yuanshuai\"\ngit config --golbal user.email \"17600232953@163.com\"\n输入 cd~/.ssh，检查是否有.ssh文件夹\n\n输入ssh-keygen -t rsa -C \"17600232953@163.com\",一直回车，生成密钥，存储位置为用户根路径下的.ssh文件夹\n\n输入eval \"$(ssh-agent -s)\"，添加密钥到ssh-agent\n\n输入ssh-add ~/.sssh/id_rsa，添加ssh key到ssh-agent\n\n登录Github添加ssh，拷贝id_rsa.pub内容\n\n配置Deployment\n\n在blog目录下_config.yml文件中，修改repo值\n\ndeploy:\n    type: get\n    repository: git@github.com:用户名.github.io.git\n    branch: master\nrepo值为github项目ssh地址\n\n新建博客\n\ncmd执行：hexo new post \"博客名\"\n\n生成部署之前，需要安装一个扩展：npm install hexo-deployer-git --save\n\nhexo d -g，生成及部署\n\n修改主题参考如下链接：\n\n传送门\n\n其中有一些问题，下篇详细列举。\n","slug":"利用hexo和github-page搭建博客（上）","published":1,"updated":"2018-03-29T00:38:53.167Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wyc000wb46wj5dh5hkj","content":"<p>安装NodeJS和Git并配置环境变量</p>\n<p>测试node</p>\n<p>node -v<br>npm -v<br>​   测试git</p>\n<p>电脑任一文件夹右键出现Git GUI Here和Git Bash Here<br><a id=\"more\"></a><br>Github新建项目</p>\n<p>项目名必须遵守：用户名.github.io。并且勾选Initialize this repository with a README</p>\n<p>在建好的项目右侧有个setting按钮，点击后向下拉至github pages，访问网址，项目可以外网访问。</p>\n<p>安装Hexo</p>\n<p>选择位置创建文件夹，比如D:\\blog，进入目录，输入npm install hexo -g，开始安装Hexo</p>\n<p>输入hexo -v，检查hexo是否安装成功</p>\n<p>输入hexo init，初始化该文件夹</p>\n<p>输入npm install，安装所需组件</p>\n<p>输入hexo g，开启服务器，访问网址，一般端口是4000，如果不好使，可能是被占用，ctrl+c停止服务器，接着输入“hexo server -p 端口号”来改变端口号</p>\n<p>将Hexo与Github page联系起来</p>\n<p>在blog文件夹右键点击Git Bash Here</p>\n<p>设置Git的user name和email（如果是第一次的话）</p>\n<p>git config –global user.name “yuanshuai”<br>git config –golbal user.email “17600232953@163.com”<br>输入 cd~/.ssh，检查是否有.ssh文件夹</p>\n<p>输入ssh-keygen -t rsa -C “17600232953@163.com”,一直回车，生成密钥，存储位置为用户根路径下的.ssh文件夹</p>\n<p>输入eval “$(ssh-agent -s)”，添加密钥到ssh-agent</p>\n<p>输入ssh-add ~/.sssh/id_rsa，添加ssh key到ssh-agent</p>\n<p>登录Github添加ssh，拷贝id_rsa.pub内容</p>\n<p>配置Deployment</p>\n<p>在blog目录下_config.yml文件中，修改repo值</p>\n<p>deploy:<br>    type: get<br>    repository: git@github.com:用户名.github.io.git<br>    branch: master<br>repo值为github项目ssh地址</p>\n<p>新建博客</p>\n<p>cmd执行：hexo new post “博客名”</p>\n<p>生成部署之前，需要安装一个扩展：npm install hexo-deployer-git –save</p>\n<p>hexo d -g，生成及部署</p>\n<p>修改主题参考如下链接：</p>\n<p>传送门</p>\n<p>其中有一些问题，下篇详细列举。</p>\n","site":{"data":{}},"excerpt":"<p>安装NodeJS和Git并配置环境变量</p>\n<p>测试node</p>\n<p>node -v<br>npm -v<br>​   测试git</p>\n<p>电脑任一文件夹右键出现Git GUI Here和Git Bash Here<br>","more":"<br>Github新建项目</p>\n<p>项目名必须遵守：用户名.github.io。并且勾选Initialize this repository with a README</p>\n<p>在建好的项目右侧有个setting按钮，点击后向下拉至github pages，访问网址，项目可以外网访问。</p>\n<p>安装Hexo</p>\n<p>选择位置创建文件夹，比如D:\\blog，进入目录，输入npm install hexo -g，开始安装Hexo</p>\n<p>输入hexo -v，检查hexo是否安装成功</p>\n<p>输入hexo init，初始化该文件夹</p>\n<p>输入npm install，安装所需组件</p>\n<p>输入hexo g，开启服务器，访问网址，一般端口是4000，如果不好使，可能是被占用，ctrl+c停止服务器，接着输入“hexo server -p 端口号”来改变端口号</p>\n<p>将Hexo与Github page联系起来</p>\n<p>在blog文件夹右键点击Git Bash Here</p>\n<p>设置Git的user name和email（如果是第一次的话）</p>\n<p>git config –global user.name “yuanshuai”<br>git config –golbal user.email “17600232953@163.com”<br>输入 cd~/.ssh，检查是否有.ssh文件夹</p>\n<p>输入ssh-keygen -t rsa -C “17600232953@163.com”,一直回车，生成密钥，存储位置为用户根路径下的.ssh文件夹</p>\n<p>输入eval “$(ssh-agent -s)”，添加密钥到ssh-agent</p>\n<p>输入ssh-add ~/.sssh/id_rsa，添加ssh key到ssh-agent</p>\n<p>登录Github添加ssh，拷贝id_rsa.pub内容</p>\n<p>配置Deployment</p>\n<p>在blog目录下_config.yml文件中，修改repo值</p>\n<p>deploy:<br>    type: get<br>    repository: git@github.com:用户名.github.io.git<br>    branch: master<br>repo值为github项目ssh地址</p>\n<p>新建博客</p>\n<p>cmd执行：hexo new post “博客名”</p>\n<p>生成部署之前，需要安装一个扩展：npm install hexo-deployer-git –save</p>\n<p>hexo d -g，生成及部署</p>\n<p>修改主题参考如下链接：</p>\n<p>传送门</p>\n<p>其中有一些问题，下篇详细列举。</p>"},{"title":"商务与经济统计-（一）数据与统计资料","date":"2018-02-26T10:50:52.000Z","_content":"\n**统计**：收集、分析、提炼和解析数据的科学与艺术。\n\n### 数据与统计资料\n\n**统计资料**：诸如20%、100亿元等等。术语统计资料是指**数据值事实**，如平均数、中位数、百分数和最大值等。\n\n**数据**：是为了描述和解释所搜集、分析、汇总的事实和数字。将用于特定研究而搜集的所有数据称为研究的**数据集**。\n\n<!--more-->\n\n个体是指搜集数据的实体。\n变量是个体中所感兴趣的那些特征（指标）。\n\n**观测值**就时对某一特定的个体得到的所有测量值集合称为一个观测值（即平常表格中的一行）。\n\n---\n\n**测量尺度**：包括名义尺度、顺序尺度、间隔尺度、比率尺度。\n\n当一个变量的数据中包含了用来识别个体属性的标记或名称时，测量尺度被称为**名义尺度**。例如一个人的性别男或女。这种名义尺度一般还可以用数值代码及非数字的标记来表示。如1,2或a,b。\n\n如果数据具有名义数据的性质，并且数据的顺序或等级的意义明确，那么这种非变量的测量尺度是**顺序尺度**。比如班级排名，用数字表示。或是游戏中的S、A、B、C、D等评级。\n\n如果数据具有顺序数据的所有性质，并且可以按某一个固定度量单位表示树枝间的间隔，则这种测量尺度就是**间隔尺度**。间隔尺度永远是数值型的。学生成绩A比B多70分等等。并且间隔尺度总是可以进行数学运算，且计算结果有意义的。\n\n如果数据具有间隔数据的所有性质，并且两个数值之比是有意义的，则这种变量的测量尺度是**比率尺度**。如戴尔的价格是联想的2倍，这个除法的结果。比率尺度需要有一个零值，变量取零值时表示什么都不存在。\n\n---\n数据可以分为分类型和数量型。归属于某一类别的数据称为**分类型数据**。分类型数据主要使用名义尺度或顺序尺度度量。用于表示大小或多少的数值称为**数量型数据**。数量型数据可以通过间隔尺度或比率尺度度量。\n\n**分类变量**是用分类型数据表示的变量，**数量变量**是用数量型数据表示的变量。分类变量，统计分析方法极其有限，及时分类数据用数值代码表示，对其进行加减乘除等数学运算也是没有意义的；另一方面，对数量变量进行数学运算，可以得到有意义的结果。\n\n---\n**截面数据**是在相同或近似相同的同一时间点上搜集的数据（横向）。**时间序列数据**是在几个时期内搜集的数据（纵向）。\n\n---\n数据来源有：\n\n**现有来源**，可以是公司机构内部保有的，或者从外部购入等。\n\n**观测性研究**：与实验不同，实验一般在控制条件下完成，而观测性研究正如其字面“观测”，无法控制实验中的内容。\n\n**描述统计**：将数据以表格、图形或数值形式汇总的统计方法。\n\n**统计推断**：利用样本数据对总体特征进行估计和假设检验的过程。\n\n**逻辑分析方法**：将数据转化为做出好决策见解的科学过程。包括三大类：**描述性分析**、**预测性分析**、**规范性分析**。\n- 描述性分析：描述过去发生状况的分析技术集合。\n    \n- 预测性分析：利用过去数据建立的模型来预测未来过反映相关关系的分析技术。\n    \n- 规范性分析：产生一个最佳行动过程的分析技术集合。一组约束条件下产生最大或最小目标的解决方案的优化模型属于规范模型。\n\n**大数据和数据挖掘**\n\n- 数据挖掘：研究从非常大的数据库中开发有用的决策信息的方法。从（庞大的）数据库中**自动**提取**预测性**的信息。","source":"_posts/商务与经济统计-（一）数据与统计资料.md","raw":"---\ntitle: 商务与经济统计-（一）数据与统计资料\ndate: 2018-02-26 18:50:52\ntags: 数据分析\ncategories: 商务与经济统计\n---\n\n**统计**：收集、分析、提炼和解析数据的科学与艺术。\n\n### 数据与统计资料\n\n**统计资料**：诸如20%、100亿元等等。术语统计资料是指**数据值事实**，如平均数、中位数、百分数和最大值等。\n\n**数据**：是为了描述和解释所搜集、分析、汇总的事实和数字。将用于特定研究而搜集的所有数据称为研究的**数据集**。\n\n<!--more-->\n\n个体是指搜集数据的实体。\n变量是个体中所感兴趣的那些特征（指标）。\n\n**观测值**就时对某一特定的个体得到的所有测量值集合称为一个观测值（即平常表格中的一行）。\n\n---\n\n**测量尺度**：包括名义尺度、顺序尺度、间隔尺度、比率尺度。\n\n当一个变量的数据中包含了用来识别个体属性的标记或名称时，测量尺度被称为**名义尺度**。例如一个人的性别男或女。这种名义尺度一般还可以用数值代码及非数字的标记来表示。如1,2或a,b。\n\n如果数据具有名义数据的性质，并且数据的顺序或等级的意义明确，那么这种非变量的测量尺度是**顺序尺度**。比如班级排名，用数字表示。或是游戏中的S、A、B、C、D等评级。\n\n如果数据具有顺序数据的所有性质，并且可以按某一个固定度量单位表示树枝间的间隔，则这种测量尺度就是**间隔尺度**。间隔尺度永远是数值型的。学生成绩A比B多70分等等。并且间隔尺度总是可以进行数学运算，且计算结果有意义的。\n\n如果数据具有间隔数据的所有性质，并且两个数值之比是有意义的，则这种变量的测量尺度是**比率尺度**。如戴尔的价格是联想的2倍，这个除法的结果。比率尺度需要有一个零值，变量取零值时表示什么都不存在。\n\n---\n数据可以分为分类型和数量型。归属于某一类别的数据称为**分类型数据**。分类型数据主要使用名义尺度或顺序尺度度量。用于表示大小或多少的数值称为**数量型数据**。数量型数据可以通过间隔尺度或比率尺度度量。\n\n**分类变量**是用分类型数据表示的变量，**数量变量**是用数量型数据表示的变量。分类变量，统计分析方法极其有限，及时分类数据用数值代码表示，对其进行加减乘除等数学运算也是没有意义的；另一方面，对数量变量进行数学运算，可以得到有意义的结果。\n\n---\n**截面数据**是在相同或近似相同的同一时间点上搜集的数据（横向）。**时间序列数据**是在几个时期内搜集的数据（纵向）。\n\n---\n数据来源有：\n\n**现有来源**，可以是公司机构内部保有的，或者从外部购入等。\n\n**观测性研究**：与实验不同，实验一般在控制条件下完成，而观测性研究正如其字面“观测”，无法控制实验中的内容。\n\n**描述统计**：将数据以表格、图形或数值形式汇总的统计方法。\n\n**统计推断**：利用样本数据对总体特征进行估计和假设检验的过程。\n\n**逻辑分析方法**：将数据转化为做出好决策见解的科学过程。包括三大类：**描述性分析**、**预测性分析**、**规范性分析**。\n- 描述性分析：描述过去发生状况的分析技术集合。\n    \n- 预测性分析：利用过去数据建立的模型来预测未来过反映相关关系的分析技术。\n    \n- 规范性分析：产生一个最佳行动过程的分析技术集合。一组约束条件下产生最大或最小目标的解决方案的优化模型属于规范模型。\n\n**大数据和数据挖掘**\n\n- 数据挖掘：研究从非常大的数据库中开发有用的决策信息的方法。从（庞大的）数据库中**自动**提取**预测性**的信息。","slug":"商务与经济统计-（一）数据与统计资料","published":1,"updated":"2018-03-29T00:38:53.168Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wye000zb46we7pe7y0r","content":"<p><strong>统计</strong>：收集、分析、提炼和解析数据的科学与艺术。</p>\n<h3 id=\"数据与统计资料\"><a href=\"#数据与统计资料\" class=\"headerlink\" title=\"数据与统计资料\"></a>数据与统计资料</h3><p><strong>统计资料</strong>：诸如20%、100亿元等等。术语统计资料是指<strong>数据值事实</strong>，如平均数、中位数、百分数和最大值等。</p>\n<p><strong>数据</strong>：是为了描述和解释所搜集、分析、汇总的事实和数字。将用于特定研究而搜集的所有数据称为研究的<strong>数据集</strong>。</p>\n<a id=\"more\"></a>\n<p>个体是指搜集数据的实体。<br>变量是个体中所感兴趣的那些特征（指标）。</p>\n<p><strong>观测值</strong>就时对某一特定的个体得到的所有测量值集合称为一个观测值（即平常表格中的一行）。</p>\n<hr>\n<p><strong>测量尺度</strong>：包括名义尺度、顺序尺度、间隔尺度、比率尺度。</p>\n<p>当一个变量的数据中包含了用来识别个体属性的标记或名称时，测量尺度被称为<strong>名义尺度</strong>。例如一个人的性别男或女。这种名义尺度一般还可以用数值代码及非数字的标记来表示。如1,2或a,b。</p>\n<p>如果数据具有名义数据的性质，并且数据的顺序或等级的意义明确，那么这种非变量的测量尺度是<strong>顺序尺度</strong>。比如班级排名，用数字表示。或是游戏中的S、A、B、C、D等评级。</p>\n<p>如果数据具有顺序数据的所有性质，并且可以按某一个固定度量单位表示树枝间的间隔，则这种测量尺度就是<strong>间隔尺度</strong>。间隔尺度永远是数值型的。学生成绩A比B多70分等等。并且间隔尺度总是可以进行数学运算，且计算结果有意义的。</p>\n<p>如果数据具有间隔数据的所有性质，并且两个数值之比是有意义的，则这种变量的测量尺度是<strong>比率尺度</strong>。如戴尔的价格是联想的2倍，这个除法的结果。比率尺度需要有一个零值，变量取零值时表示什么都不存在。</p>\n<hr>\n<p>数据可以分为分类型和数量型。归属于某一类别的数据称为<strong>分类型数据</strong>。分类型数据主要使用名义尺度或顺序尺度度量。用于表示大小或多少的数值称为<strong>数量型数据</strong>。数量型数据可以通过间隔尺度或比率尺度度量。</p>\n<p><strong>分类变量</strong>是用分类型数据表示的变量，<strong>数量变量</strong>是用数量型数据表示的变量。分类变量，统计分析方法极其有限，及时分类数据用数值代码表示，对其进行加减乘除等数学运算也是没有意义的；另一方面，对数量变量进行数学运算，可以得到有意义的结果。</p>\n<hr>\n<p><strong>截面数据</strong>是在相同或近似相同的同一时间点上搜集的数据（横向）。<strong>时间序列数据</strong>是在几个时期内搜集的数据（纵向）。</p>\n<hr>\n<p>数据来源有：</p>\n<p><strong>现有来源</strong>，可以是公司机构内部保有的，或者从外部购入等。</p>\n<p><strong>观测性研究</strong>：与实验不同，实验一般在控制条件下完成，而观测性研究正如其字面“观测”，无法控制实验中的内容。</p>\n<p><strong>描述统计</strong>：将数据以表格、图形或数值形式汇总的统计方法。</p>\n<p><strong>统计推断</strong>：利用样本数据对总体特征进行估计和假设检验的过程。</p>\n<p><strong>逻辑分析方法</strong>：将数据转化为做出好决策见解的科学过程。包括三大类：<strong>描述性分析</strong>、<strong>预测性分析</strong>、<strong>规范性分析</strong>。</p>\n<ul>\n<li><p>描述性分析：描述过去发生状况的分析技术集合。</p>\n</li>\n<li><p>预测性分析：利用过去数据建立的模型来预测未来过反映相关关系的分析技术。</p>\n</li>\n<li><p>规范性分析：产生一个最佳行动过程的分析技术集合。一组约束条件下产生最大或最小目标的解决方案的优化模型属于规范模型。</p>\n</li>\n</ul>\n<p><strong>大数据和数据挖掘</strong></p>\n<ul>\n<li>数据挖掘：研究从非常大的数据库中开发有用的决策信息的方法。从（庞大的）数据库中<strong>自动</strong>提取<strong>预测性</strong>的信息。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p><strong>统计</strong>：收集、分析、提炼和解析数据的科学与艺术。</p>\n<h3 id=\"数据与统计资料\"><a href=\"#数据与统计资料\" class=\"headerlink\" title=\"数据与统计资料\"></a>数据与统计资料</h3><p><strong>统计资料</strong>：诸如20%、100亿元等等。术语统计资料是指<strong>数据值事实</strong>，如平均数、中位数、百分数和最大值等。</p>\n<p><strong>数据</strong>：是为了描述和解释所搜集、分析、汇总的事实和数字。将用于特定研究而搜集的所有数据称为研究的<strong>数据集</strong>。</p>","more":"<p>个体是指搜集数据的实体。<br>变量是个体中所感兴趣的那些特征（指标）。</p>\n<p><strong>观测值</strong>就时对某一特定的个体得到的所有测量值集合称为一个观测值（即平常表格中的一行）。</p>\n<hr>\n<p><strong>测量尺度</strong>：包括名义尺度、顺序尺度、间隔尺度、比率尺度。</p>\n<p>当一个变量的数据中包含了用来识别个体属性的标记或名称时，测量尺度被称为<strong>名义尺度</strong>。例如一个人的性别男或女。这种名义尺度一般还可以用数值代码及非数字的标记来表示。如1,2或a,b。</p>\n<p>如果数据具有名义数据的性质，并且数据的顺序或等级的意义明确，那么这种非变量的测量尺度是<strong>顺序尺度</strong>。比如班级排名，用数字表示。或是游戏中的S、A、B、C、D等评级。</p>\n<p>如果数据具有顺序数据的所有性质，并且可以按某一个固定度量单位表示树枝间的间隔，则这种测量尺度就是<strong>间隔尺度</strong>。间隔尺度永远是数值型的。学生成绩A比B多70分等等。并且间隔尺度总是可以进行数学运算，且计算结果有意义的。</p>\n<p>如果数据具有间隔数据的所有性质，并且两个数值之比是有意义的，则这种变量的测量尺度是<strong>比率尺度</strong>。如戴尔的价格是联想的2倍，这个除法的结果。比率尺度需要有一个零值，变量取零值时表示什么都不存在。</p>\n<hr>\n<p>数据可以分为分类型和数量型。归属于某一类别的数据称为<strong>分类型数据</strong>。分类型数据主要使用名义尺度或顺序尺度度量。用于表示大小或多少的数值称为<strong>数量型数据</strong>。数量型数据可以通过间隔尺度或比率尺度度量。</p>\n<p><strong>分类变量</strong>是用分类型数据表示的变量，<strong>数量变量</strong>是用数量型数据表示的变量。分类变量，统计分析方法极其有限，及时分类数据用数值代码表示，对其进行加减乘除等数学运算也是没有意义的；另一方面，对数量变量进行数学运算，可以得到有意义的结果。</p>\n<hr>\n<p><strong>截面数据</strong>是在相同或近似相同的同一时间点上搜集的数据（横向）。<strong>时间序列数据</strong>是在几个时期内搜集的数据（纵向）。</p>\n<hr>\n<p>数据来源有：</p>\n<p><strong>现有来源</strong>，可以是公司机构内部保有的，或者从外部购入等。</p>\n<p><strong>观测性研究</strong>：与实验不同，实验一般在控制条件下完成，而观测性研究正如其字面“观测”，无法控制实验中的内容。</p>\n<p><strong>描述统计</strong>：将数据以表格、图形或数值形式汇总的统计方法。</p>\n<p><strong>统计推断</strong>：利用样本数据对总体特征进行估计和假设检验的过程。</p>\n<p><strong>逻辑分析方法</strong>：将数据转化为做出好决策见解的科学过程。包括三大类：<strong>描述性分析</strong>、<strong>预测性分析</strong>、<strong>规范性分析</strong>。</p>\n<ul>\n<li><p>描述性分析：描述过去发生状况的分析技术集合。</p>\n</li>\n<li><p>预测性分析：利用过去数据建立的模型来预测未来过反映相关关系的分析技术。</p>\n</li>\n<li><p>规范性分析：产生一个最佳行动过程的分析技术集合。一组约束条件下产生最大或最小目标的解决方案的优化模型属于规范模型。</p>\n</li>\n</ul>\n<p><strong>大数据和数据挖掘</strong></p>\n<ul>\n<li>数据挖掘：研究从非常大的数据库中开发有用的决策信息的方法。从（庞大的）数据库中<strong>自动</strong>提取<strong>预测性</strong>的信息。</li>\n</ul>"},{"title":"商务与经济统计-（二）描述统计学一：表格法和图形法","date":"2018-03-05T13:30:45.000Z","_content":"\n数据可以分为分类型和数量型，**分类型数据**是用标签活名称来识别项目的类型。**数量型数据**是表示大小或多少的数值。\n\n**数据可视化**常常用于描述汇总和表述一个数据集信息的图形显示的效用。\n\n### 汇总分类变量的数据\n#### 频数分布\n**频数分布（frequency distribution）** 是一种数据的表格汇总方法，表示在几个互不重叠组别中，每一组项目的个数（即频数）。\n\n某项数据  | 频数 \n---|---\nA | 19\nB | 8\nC | 5\nD | 13\nE | 5\nF | 50\n\n<!--more-->\n\n**相对频数分布和百分数频数分布**\n\n**相对频数分布(relative frequency distribution)**\n是每一组相对频数数据的表格汇总\n\n**百分数频数分布(percent frequency distribution)** 是每一组百分数频数数据的表格汇总\n\n#### 条形图和饼形图\n\n---\n\n### 汇总数量变量的数据\n#### 频数分布\n\n对于数量型数据，在定义用于频数分布的互补重叠组别时，要格外小心。一般来讲，确定频数分布的组时，三个必要的步骤是：\n\n（1）确定互不重叠组的组数。\n\n（2）确定每组的宽度。\n\n（3）确定组限。\n    \n- **组数**：一般选择5~20组。\n\n- **租宽**：一般，每组宽度相同。\n    \n    近似组宽 = （数据最大值-数据最小值）/组数\n\n- **组限**：选择组限必须使每一个数据值属于且只属于一组。说白了就是开闭区间等问题。\n\n- **组中值**：上组限和下组限的中间值，如一个组为10~14，那么它的组中值为12。\n#### 相对频数分布和百分比频数分布\n#### 打点图\n**打点图（dot plot）** 横轴是数据的值域，每一个数据值由位于横轴上的点表示。\n#### 直方图\n\n**直方图（histogram）** 尾部向左延伸一些，则图形**左偏**。一般考试成绩符合这种，少数人成绩很低。\n\n尾部向右侧延伸一些，则图形**右偏**。比如房价，少数房子比其他更加昂贵。\n\n#### 累积分布\n\n**累积频数分布（cumulative frequency distribution）** 表示的是小于或等于每一组上组限的数据项个数，而不是表示每一组的频数。\n\n#### 茎叶显示\n**茎叶显示（stem-and-leaf display）**\n    \n---\n\n### 用表格方法汇总两个变量的数据\n\n#### 交叉分组表\n\n**交叉分组表(crosstabulation)**\n是一种汇总两个变量数据的方法。一般来讲一个变量是分类型，另一个变量是数量型最常见\n\n#### 辛普森悖论\n\n我们常常合并并综合两个或两个以上的交叉分组表中的内容，生成一个汇总的交叉分组表，以显示两个变量的相关性。在这种情况下，从两个或多个单独的交叉分组表得到的结论与一个综合的交叉分组表数据得到的结论可能截然相反。依据综合和为综合数据得到的相反结论被称为**辛普森悖论（Simpson's paradox）**。个人理解，因为存在分类型变量，所以存在==权重==问题，要注意隐藏的变量。\n\n### 用图形显示方法汇总两个变量的数据\n#### 散点图和趋势线\n\n**散点图（scatter diagram）**\n是对两个数量变量间关系的图形表述，\n**趋势线（trendline）**\n是显示相关性近似程度的一条直线。\n\n#### 复合条形图和结构条形图\n**复合条形图（side-by-side bar chart）** 是对已汇总的多个条形图同时显示的一种图形显示方法。\n**结构条形图（stacked chart）** 其每一个长条被分解成不同颜色的矩形段，以与饼图类似的方法显示每一组的相对频数。\n\n#### 数据仪表板\n\n数据可视化工具使用最广泛的一种是**数据仪表板（data dashboard）** 。大杂烩，类似汽车的仪表盘。很多种（简单的）图形表示放在一起。\n","source":"_posts/商务与经济统计-（二）描述统计学一：表格法和图形法.md","raw":"---\ntitle: 商务与经济统计-（二）描述统计学一：表格法和图形法\ndate: 2018-03-05 21:30:45\ntags: 数据分析\ncategories: 商务与经济统计\n---\n\n数据可以分为分类型和数量型，**分类型数据**是用标签活名称来识别项目的类型。**数量型数据**是表示大小或多少的数值。\n\n**数据可视化**常常用于描述汇总和表述一个数据集信息的图形显示的效用。\n\n### 汇总分类变量的数据\n#### 频数分布\n**频数分布（frequency distribution）** 是一种数据的表格汇总方法，表示在几个互不重叠组别中，每一组项目的个数（即频数）。\n\n某项数据  | 频数 \n---|---\nA | 19\nB | 8\nC | 5\nD | 13\nE | 5\nF | 50\n\n<!--more-->\n\n**相对频数分布和百分数频数分布**\n\n**相对频数分布(relative frequency distribution)**\n是每一组相对频数数据的表格汇总\n\n**百分数频数分布(percent frequency distribution)** 是每一组百分数频数数据的表格汇总\n\n#### 条形图和饼形图\n\n---\n\n### 汇总数量变量的数据\n#### 频数分布\n\n对于数量型数据，在定义用于频数分布的互补重叠组别时，要格外小心。一般来讲，确定频数分布的组时，三个必要的步骤是：\n\n（1）确定互不重叠组的组数。\n\n（2）确定每组的宽度。\n\n（3）确定组限。\n    \n- **组数**：一般选择5~20组。\n\n- **租宽**：一般，每组宽度相同。\n    \n    近似组宽 = （数据最大值-数据最小值）/组数\n\n- **组限**：选择组限必须使每一个数据值属于且只属于一组。说白了就是开闭区间等问题。\n\n- **组中值**：上组限和下组限的中间值，如一个组为10~14，那么它的组中值为12。\n#### 相对频数分布和百分比频数分布\n#### 打点图\n**打点图（dot plot）** 横轴是数据的值域，每一个数据值由位于横轴上的点表示。\n#### 直方图\n\n**直方图（histogram）** 尾部向左延伸一些，则图形**左偏**。一般考试成绩符合这种，少数人成绩很低。\n\n尾部向右侧延伸一些，则图形**右偏**。比如房价，少数房子比其他更加昂贵。\n\n#### 累积分布\n\n**累积频数分布（cumulative frequency distribution）** 表示的是小于或等于每一组上组限的数据项个数，而不是表示每一组的频数。\n\n#### 茎叶显示\n**茎叶显示（stem-and-leaf display）**\n    \n---\n\n### 用表格方法汇总两个变量的数据\n\n#### 交叉分组表\n\n**交叉分组表(crosstabulation)**\n是一种汇总两个变量数据的方法。一般来讲一个变量是分类型，另一个变量是数量型最常见\n\n#### 辛普森悖论\n\n我们常常合并并综合两个或两个以上的交叉分组表中的内容，生成一个汇总的交叉分组表，以显示两个变量的相关性。在这种情况下，从两个或多个单独的交叉分组表得到的结论与一个综合的交叉分组表数据得到的结论可能截然相反。依据综合和为综合数据得到的相反结论被称为**辛普森悖论（Simpson's paradox）**。个人理解，因为存在分类型变量，所以存在==权重==问题，要注意隐藏的变量。\n\n### 用图形显示方法汇总两个变量的数据\n#### 散点图和趋势线\n\n**散点图（scatter diagram）**\n是对两个数量变量间关系的图形表述，\n**趋势线（trendline）**\n是显示相关性近似程度的一条直线。\n\n#### 复合条形图和结构条形图\n**复合条形图（side-by-side bar chart）** 是对已汇总的多个条形图同时显示的一种图形显示方法。\n**结构条形图（stacked chart）** 其每一个长条被分解成不同颜色的矩形段，以与饼图类似的方法显示每一组的相对频数。\n\n#### 数据仪表板\n\n数据可视化工具使用最广泛的一种是**数据仪表板（data dashboard）** 。大杂烩，类似汽车的仪表盘。很多种（简单的）图形表示放在一起。\n","slug":"商务与经济统计-（二）描述统计学一：表格法和图形法","published":1,"updated":"2018-03-29T00:38:53.170Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wyg0013b46wd70fq45h","content":"<p>数据可以分为分类型和数量型，<strong>分类型数据</strong>是用标签活名称来识别项目的类型。<strong>数量型数据</strong>是表示大小或多少的数值。</p>\n<p><strong>数据可视化</strong>常常用于描述汇总和表述一个数据集信息的图形显示的效用。</p>\n<h3 id=\"汇总分类变量的数据\"><a href=\"#汇总分类变量的数据\" class=\"headerlink\" title=\"汇总分类变量的数据\"></a>汇总分类变量的数据</h3><h4 id=\"频数分布\"><a href=\"#频数分布\" class=\"headerlink\" title=\"频数分布\"></a>频数分布</h4><p><strong>频数分布（frequency distribution）</strong> 是一种数据的表格汇总方法，表示在几个互不重叠组别中，每一组项目的个数（即频数）。</p>\n<table>\n<thead>\n<tr>\n<th>某项数据</th>\n<th>频数 </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>19</td>\n</tr>\n<tr>\n<td>B</td>\n<td>8</td>\n</tr>\n<tr>\n<td>C</td>\n<td>5</td>\n</tr>\n<tr>\n<td>D</td>\n<td>13</td>\n</tr>\n<tr>\n<td>E</td>\n<td>5</td>\n</tr>\n<tr>\n<td>F</td>\n<td>50</td>\n</tr>\n</tbody>\n</table>\n<a id=\"more\"></a>\n<p><strong>相对频数分布和百分数频数分布</strong></p>\n<p><strong>相对频数分布(relative frequency distribution)</strong><br>是每一组相对频数数据的表格汇总</p>\n<p><strong>百分数频数分布(percent frequency distribution)</strong> 是每一组百分数频数数据的表格汇总</p>\n<h4 id=\"条形图和饼形图\"><a href=\"#条形图和饼形图\" class=\"headerlink\" title=\"条形图和饼形图\"></a>条形图和饼形图</h4><hr>\n<h3 id=\"汇总数量变量的数据\"><a href=\"#汇总数量变量的数据\" class=\"headerlink\" title=\"汇总数量变量的数据\"></a>汇总数量变量的数据</h3><h4 id=\"频数分布-1\"><a href=\"#频数分布-1\" class=\"headerlink\" title=\"频数分布\"></a>频数分布</h4><p>对于数量型数据，在定义用于频数分布的互补重叠组别时，要格外小心。一般来讲，确定频数分布的组时，三个必要的步骤是：</p>\n<p>（1）确定互不重叠组的组数。</p>\n<p>（2）确定每组的宽度。</p>\n<p>（3）确定组限。</p>\n<ul>\n<li><p><strong>组数</strong>：一般选择5~20组。</p>\n</li>\n<li><p><strong>租宽</strong>：一般，每组宽度相同。</p>\n<p>  近似组宽 = （数据最大值-数据最小值）/组数</p>\n</li>\n<li><p><strong>组限</strong>：选择组限必须使每一个数据值属于且只属于一组。说白了就是开闭区间等问题。</p>\n</li>\n<li><p><strong>组中值</strong>：上组限和下组限的中间值，如一个组为10~14，那么它的组中值为12。</p>\n<h4 id=\"相对频数分布和百分比频数分布\"><a href=\"#相对频数分布和百分比频数分布\" class=\"headerlink\" title=\"相对频数分布和百分比频数分布\"></a>相对频数分布和百分比频数分布</h4><h4 id=\"打点图\"><a href=\"#打点图\" class=\"headerlink\" title=\"打点图\"></a>打点图</h4><p><strong>打点图（dot plot）</strong> 横轴是数据的值域，每一个数据值由位于横轴上的点表示。</p>\n<h4 id=\"直方图\"><a href=\"#直方图\" class=\"headerlink\" title=\"直方图\"></a>直方图</h4></li>\n</ul>\n<p><strong>直方图（histogram）</strong> 尾部向左延伸一些，则图形<strong>左偏</strong>。一般考试成绩符合这种，少数人成绩很低。</p>\n<p>尾部向右侧延伸一些，则图形<strong>右偏</strong>。比如房价，少数房子比其他更加昂贵。</p>\n<h4 id=\"累积分布\"><a href=\"#累积分布\" class=\"headerlink\" title=\"累积分布\"></a>累积分布</h4><p><strong>累积频数分布（cumulative frequency distribution）</strong> 表示的是小于或等于每一组上组限的数据项个数，而不是表示每一组的频数。</p>\n<h4 id=\"茎叶显示\"><a href=\"#茎叶显示\" class=\"headerlink\" title=\"茎叶显示\"></a>茎叶显示</h4><p><strong>茎叶显示（stem-and-leaf display）</strong></p>\n<hr>\n<h3 id=\"用表格方法汇总两个变量的数据\"><a href=\"#用表格方法汇总两个变量的数据\" class=\"headerlink\" title=\"用表格方法汇总两个变量的数据\"></a>用表格方法汇总两个变量的数据</h3><h4 id=\"交叉分组表\"><a href=\"#交叉分组表\" class=\"headerlink\" title=\"交叉分组表\"></a>交叉分组表</h4><p><strong>交叉分组表(crosstabulation)</strong><br>是一种汇总两个变量数据的方法。一般来讲一个变量是分类型，另一个变量是数量型最常见</p>\n<h4 id=\"辛普森悖论\"><a href=\"#辛普森悖论\" class=\"headerlink\" title=\"辛普森悖论\"></a>辛普森悖论</h4><p>我们常常合并并综合两个或两个以上的交叉分组表中的内容，生成一个汇总的交叉分组表，以显示两个变量的相关性。在这种情况下，从两个或多个单独的交叉分组表得到的结论与一个综合的交叉分组表数据得到的结论可能截然相反。依据综合和为综合数据得到的相反结论被称为<strong>辛普森悖论（Simpson’s paradox）</strong>。个人理解，因为存在分类型变量，所以存在==权重==问题，要注意隐藏的变量。</p>\n<h3 id=\"用图形显示方法汇总两个变量的数据\"><a href=\"#用图形显示方法汇总两个变量的数据\" class=\"headerlink\" title=\"用图形显示方法汇总两个变量的数据\"></a>用图形显示方法汇总两个变量的数据</h3><h4 id=\"散点图和趋势线\"><a href=\"#散点图和趋势线\" class=\"headerlink\" title=\"散点图和趋势线\"></a>散点图和趋势线</h4><p><strong>散点图（scatter diagram）</strong><br>是对两个数量变量间关系的图形表述，<br><strong>趋势线（trendline）</strong><br>是显示相关性近似程度的一条直线。</p>\n<h4 id=\"复合条形图和结构条形图\"><a href=\"#复合条形图和结构条形图\" class=\"headerlink\" title=\"复合条形图和结构条形图\"></a>复合条形图和结构条形图</h4><p><strong>复合条形图（side-by-side bar chart）</strong> 是对已汇总的多个条形图同时显示的一种图形显示方法。<br><strong>结构条形图（stacked chart）</strong> 其每一个长条被分解成不同颜色的矩形段，以与饼图类似的方法显示每一组的相对频数。</p>\n<h4 id=\"数据仪表板\"><a href=\"#数据仪表板\" class=\"headerlink\" title=\"数据仪表板\"></a>数据仪表板</h4><p>数据可视化工具使用最广泛的一种是<strong>数据仪表板（data dashboard）</strong> 。大杂烩，类似汽车的仪表盘。很多种（简单的）图形表示放在一起。</p>\n","site":{"data":{}},"excerpt":"<p>数据可以分为分类型和数量型，<strong>分类型数据</strong>是用标签活名称来识别项目的类型。<strong>数量型数据</strong>是表示大小或多少的数值。</p>\n<p><strong>数据可视化</strong>常常用于描述汇总和表述一个数据集信息的图形显示的效用。</p>\n<h3 id=\"汇总分类变量的数据\"><a href=\"#汇总分类变量的数据\" class=\"headerlink\" title=\"汇总分类变量的数据\"></a>汇总分类变量的数据</h3><h4 id=\"频数分布\"><a href=\"#频数分布\" class=\"headerlink\" title=\"频数分布\"></a>频数分布</h4><p><strong>频数分布（frequency distribution）</strong> 是一种数据的表格汇总方法，表示在几个互不重叠组别中，每一组项目的个数（即频数）。</p>\n<table>\n<thead>\n<tr>\n<th>某项数据</th>\n<th>频数 </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>19</td>\n</tr>\n<tr>\n<td>B</td>\n<td>8</td>\n</tr>\n<tr>\n<td>C</td>\n<td>5</td>\n</tr>\n<tr>\n<td>D</td>\n<td>13</td>\n</tr>\n<tr>\n<td>E</td>\n<td>5</td>\n</tr>\n<tr>\n<td>F</td>\n<td>50</td>\n</tr>\n</tbody>\n</table>","more":"<p><strong>相对频数分布和百分数频数分布</strong></p>\n<p><strong>相对频数分布(relative frequency distribution)</strong><br>是每一组相对频数数据的表格汇总</p>\n<p><strong>百分数频数分布(percent frequency distribution)</strong> 是每一组百分数频数数据的表格汇总</p>\n<h4 id=\"条形图和饼形图\"><a href=\"#条形图和饼形图\" class=\"headerlink\" title=\"条形图和饼形图\"></a>条形图和饼形图</h4><hr>\n<h3 id=\"汇总数量变量的数据\"><a href=\"#汇总数量变量的数据\" class=\"headerlink\" title=\"汇总数量变量的数据\"></a>汇总数量变量的数据</h3><h4 id=\"频数分布-1\"><a href=\"#频数分布-1\" class=\"headerlink\" title=\"频数分布\"></a>频数分布</h4><p>对于数量型数据，在定义用于频数分布的互补重叠组别时，要格外小心。一般来讲，确定频数分布的组时，三个必要的步骤是：</p>\n<p>（1）确定互不重叠组的组数。</p>\n<p>（2）确定每组的宽度。</p>\n<p>（3）确定组限。</p>\n<ul>\n<li><p><strong>组数</strong>：一般选择5~20组。</p>\n</li>\n<li><p><strong>租宽</strong>：一般，每组宽度相同。</p>\n<p>  近似组宽 = （数据最大值-数据最小值）/组数</p>\n</li>\n<li><p><strong>组限</strong>：选择组限必须使每一个数据值属于且只属于一组。说白了就是开闭区间等问题。</p>\n</li>\n<li><p><strong>组中值</strong>：上组限和下组限的中间值，如一个组为10~14，那么它的组中值为12。</p>\n<h4 id=\"相对频数分布和百分比频数分布\"><a href=\"#相对频数分布和百分比频数分布\" class=\"headerlink\" title=\"相对频数分布和百分比频数分布\"></a>相对频数分布和百分比频数分布</h4><h4 id=\"打点图\"><a href=\"#打点图\" class=\"headerlink\" title=\"打点图\"></a>打点图</h4><p><strong>打点图（dot plot）</strong> 横轴是数据的值域，每一个数据值由位于横轴上的点表示。</p>\n<h4 id=\"直方图\"><a href=\"#直方图\" class=\"headerlink\" title=\"直方图\"></a>直方图</h4></li>\n</ul>\n<p><strong>直方图（histogram）</strong> 尾部向左延伸一些，则图形<strong>左偏</strong>。一般考试成绩符合这种，少数人成绩很低。</p>\n<p>尾部向右侧延伸一些，则图形<strong>右偏</strong>。比如房价，少数房子比其他更加昂贵。</p>\n<h4 id=\"累积分布\"><a href=\"#累积分布\" class=\"headerlink\" title=\"累积分布\"></a>累积分布</h4><p><strong>累积频数分布（cumulative frequency distribution）</strong> 表示的是小于或等于每一组上组限的数据项个数，而不是表示每一组的频数。</p>\n<h4 id=\"茎叶显示\"><a href=\"#茎叶显示\" class=\"headerlink\" title=\"茎叶显示\"></a>茎叶显示</h4><p><strong>茎叶显示（stem-and-leaf display）</strong></p>\n<hr>\n<h3 id=\"用表格方法汇总两个变量的数据\"><a href=\"#用表格方法汇总两个变量的数据\" class=\"headerlink\" title=\"用表格方法汇总两个变量的数据\"></a>用表格方法汇总两个变量的数据</h3><h4 id=\"交叉分组表\"><a href=\"#交叉分组表\" class=\"headerlink\" title=\"交叉分组表\"></a>交叉分组表</h4><p><strong>交叉分组表(crosstabulation)</strong><br>是一种汇总两个变量数据的方法。一般来讲一个变量是分类型，另一个变量是数量型最常见</p>\n<h4 id=\"辛普森悖论\"><a href=\"#辛普森悖论\" class=\"headerlink\" title=\"辛普森悖论\"></a>辛普森悖论</h4><p>我们常常合并并综合两个或两个以上的交叉分组表中的内容，生成一个汇总的交叉分组表，以显示两个变量的相关性。在这种情况下，从两个或多个单独的交叉分组表得到的结论与一个综合的交叉分组表数据得到的结论可能截然相反。依据综合和为综合数据得到的相反结论被称为<strong>辛普森悖论（Simpson’s paradox）</strong>。个人理解，因为存在分类型变量，所以存在==权重==问题，要注意隐藏的变量。</p>\n<h3 id=\"用图形显示方法汇总两个变量的数据\"><a href=\"#用图形显示方法汇总两个变量的数据\" class=\"headerlink\" title=\"用图形显示方法汇总两个变量的数据\"></a>用图形显示方法汇总两个变量的数据</h3><h4 id=\"散点图和趋势线\"><a href=\"#散点图和趋势线\" class=\"headerlink\" title=\"散点图和趋势线\"></a>散点图和趋势线</h4><p><strong>散点图（scatter diagram）</strong><br>是对两个数量变量间关系的图形表述，<br><strong>趋势线（trendline）</strong><br>是显示相关性近似程度的一条直线。</p>\n<h4 id=\"复合条形图和结构条形图\"><a href=\"#复合条形图和结构条形图\" class=\"headerlink\" title=\"复合条形图和结构条形图\"></a>复合条形图和结构条形图</h4><p><strong>复合条形图（side-by-side bar chart）</strong> 是对已汇总的多个条形图同时显示的一种图形显示方法。<br><strong>结构条形图（stacked chart）</strong> 其每一个长条被分解成不同颜色的矩形段，以与饼图类似的方法显示每一组的相对频数。</p>\n<h4 id=\"数据仪表板\"><a href=\"#数据仪表板\" class=\"headerlink\" title=\"数据仪表板\"></a>数据仪表板</h4><p>数据可视化工具使用最广泛的一种是<strong>数据仪表板（data dashboard）</strong> 。大杂烩，类似汽车的仪表盘。很多种（简单的）图形表示放在一起。</p>"},{"title":"收获不止Oracle-内存参数的调整","date":"2018-03-15T03:27:42.000Z","_content":"\n##### 查看\n\n![1](../images/shouhuo/TIM截图20180314192717.png)\n\n<!--more-->\n\nsga_target是动态参数，可以调整后立马生效，前提是修改的值不能超过sga_max_size的值。如果超过必须按照静态参数方式调整（[scope=spfile?](#sp)）并重启实例。重启后默认的sga_max_size会自动调整到和sga_target一样大小。\n\n修改语句可以是这样的，alter system set sga_target=500M\n\npga同理，但发现共享池和数据缓存区大小都为0。因为Oracle设置为SGA自动管理。共享池和数据缓存区的大小由sga_max_size和sga_target_size决定。\n\n一般情况下都建议使用SGA内存大小自动分配的策略，如果要手动改，把sga_target_size设为0，再把shared_pool_size和db_cache_size设置为非0。\n\n\nlog_buffer的大小由于日志每满1M写一次，每满1/3写一次，所以太大也没什么卵用，系统默认是15M。\n\n##### 修改\n\nalter system 命令增加了一个scope选项，参数有三个：`memory`、`spfile`、`both`。\n\n- memory：只改变当前实例运行，重新启动数据库后失效。\n- spfile：只改变spfile的设置，不改变当前实例运行，重启数据库后生效。\n- both：同时改变实例及spfile，当前更改立即生效，重启后仍然生效。\n\n完整命令如下：\n```sql\nalter system set <parameter_name>=<value> scope=memory|spfile|both [sid=<sid_name>]\n```\n\nsid 用作RAC环境下指定不同实例。\n\n<span id=\"sp\"></span>\n1. 如果当前实例使用的是pfile而非spfile，则scope=spfile或scope=both会出错；\n\n2. 如果实例以pfile启动，则scope的默认值是memory，若以spfile启动，默认为both；\n\n3. 有些参数必须重启才能生效，比如log_buffer；\n\n4. scope不写默认是both。\n\nlog_buffer修改必须重启，所以scope=memory和both都报错。\n\n![log_buffer](/images/shouhuo/TIM截图20180315112242.png) \n\n最后查看依旧没有变化，需要重启后才生效。\n","source":"_posts/收获不止Oracle-内存参数的调整.md","raw":"---\ntitle: 收获不止Oracle-内存参数的调整\ndate: 2018-03-15 11:27:42\ntags: 数据库 Oracle\ncategories: 收获不止Oracle\n---\n\n##### 查看\n\n![1](../images/shouhuo/TIM截图20180314192717.png)\n\n<!--more-->\n\nsga_target是动态参数，可以调整后立马生效，前提是修改的值不能超过sga_max_size的值。如果超过必须按照静态参数方式调整（[scope=spfile?](#sp)）并重启实例。重启后默认的sga_max_size会自动调整到和sga_target一样大小。\n\n修改语句可以是这样的，alter system set sga_target=500M\n\npga同理，但发现共享池和数据缓存区大小都为0。因为Oracle设置为SGA自动管理。共享池和数据缓存区的大小由sga_max_size和sga_target_size决定。\n\n一般情况下都建议使用SGA内存大小自动分配的策略，如果要手动改，把sga_target_size设为0，再把shared_pool_size和db_cache_size设置为非0。\n\n\nlog_buffer的大小由于日志每满1M写一次，每满1/3写一次，所以太大也没什么卵用，系统默认是15M。\n\n##### 修改\n\nalter system 命令增加了一个scope选项，参数有三个：`memory`、`spfile`、`both`。\n\n- memory：只改变当前实例运行，重新启动数据库后失效。\n- spfile：只改变spfile的设置，不改变当前实例运行，重启数据库后生效。\n- both：同时改变实例及spfile，当前更改立即生效，重启后仍然生效。\n\n完整命令如下：\n```sql\nalter system set <parameter_name>=<value> scope=memory|spfile|both [sid=<sid_name>]\n```\n\nsid 用作RAC环境下指定不同实例。\n\n<span id=\"sp\"></span>\n1. 如果当前实例使用的是pfile而非spfile，则scope=spfile或scope=both会出错；\n\n2. 如果实例以pfile启动，则scope的默认值是memory，若以spfile启动，默认为both；\n\n3. 有些参数必须重启才能生效，比如log_buffer；\n\n4. scope不写默认是both。\n\nlog_buffer修改必须重启，所以scope=memory和both都报错。\n\n![log_buffer](/images/shouhuo/TIM截图20180315112242.png) \n\n最后查看依旧没有变化，需要重启后才生效。\n","slug":"收获不止Oracle-内存参数的调整","published":1,"updated":"2018-03-29T00:38:53.172Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wyi0015b46wrilnp4ny","content":"<h5 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h5><p><img src=\"../images/shouhuo/TIM截图20180314192717.png\" alt=\"1\"></p>\n<a id=\"more\"></a>\n<p>sga_target是动态参数，可以调整后立马生效，前提是修改的值不能超过sga_max_size的值。如果超过必须按照静态参数方式调整（<a href=\"#sp\">scope=spfile?</a>）并重启实例。重启后默认的sga_max_size会自动调整到和sga_target一样大小。</p>\n<p>修改语句可以是这样的，alter system set sga_target=500M</p>\n<p>pga同理，但发现共享池和数据缓存区大小都为0。因为Oracle设置为SGA自动管理。共享池和数据缓存区的大小由sga_max_size和sga_target_size决定。</p>\n<p>一般情况下都建议使用SGA内存大小自动分配的策略，如果要手动改，把sga_target_size设为0，再把shared_pool_size和db_cache_size设置为非0。</p>\n<p>log_buffer的大小由于日志每满1M写一次，每满1/3写一次，所以太大也没什么卵用，系统默认是15M。</p>\n<h5 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h5><p>alter system 命令增加了一个scope选项，参数有三个：<code>memory</code>、<code>spfile</code>、<code>both</code>。</p>\n<ul>\n<li>memory：只改变当前实例运行，重新启动数据库后失效。</li>\n<li>spfile：只改变spfile的设置，不改变当前实例运行，重启数据库后生效。</li>\n<li>both：同时改变实例及spfile，当前更改立即生效，重启后仍然生效。</li>\n</ul>\n<p>完整命令如下：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">system</span> <span class=\"keyword\">set</span> &lt;parameter_name&gt;=&lt;<span class=\"keyword\">value</span>&gt; <span class=\"keyword\">scope</span>=<span class=\"keyword\">memory</span>|<span class=\"keyword\">spfile</span>|<span class=\"keyword\">both</span> [<span class=\"keyword\">sid</span>=&lt;sid_name&gt;]</span><br></pre></td></tr></table></figure></p>\n<p>sid 用作RAC环境下指定不同实例。</p>\n<p><span id=\"sp\"></span></p>\n<ol>\n<li><p>如果当前实例使用的是pfile而非spfile，则scope=spfile或scope=both会出错；</p>\n</li>\n<li><p>如果实例以pfile启动，则scope的默认值是memory，若以spfile启动，默认为both；</p>\n</li>\n<li><p>有些参数必须重启才能生效，比如log_buffer；</p>\n</li>\n<li><p>scope不写默认是both。</p>\n</li>\n</ol>\n<p>log_buffer修改必须重启，所以scope=memory和both都报错。</p>\n<p><img src=\"/images/shouhuo/TIM截图20180315112242.png\" alt=\"log_buffer\"> </p>\n<p>最后查看依旧没有变化，需要重启后才生效。</p>\n","site":{"data":{}},"excerpt":"<h5 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h5><p><img src=\"../images/shouhuo/TIM截图20180314192717.png\" alt=\"1\"></p>","more":"<p>sga_target是动态参数，可以调整后立马生效，前提是修改的值不能超过sga_max_size的值。如果超过必须按照静态参数方式调整（<a href=\"#sp\">scope=spfile?</a>）并重启实例。重启后默认的sga_max_size会自动调整到和sga_target一样大小。</p>\n<p>修改语句可以是这样的，alter system set sga_target=500M</p>\n<p>pga同理，但发现共享池和数据缓存区大小都为0。因为Oracle设置为SGA自动管理。共享池和数据缓存区的大小由sga_max_size和sga_target_size决定。</p>\n<p>一般情况下都建议使用SGA内存大小自动分配的策略，如果要手动改，把sga_target_size设为0，再把shared_pool_size和db_cache_size设置为非0。</p>\n<p>log_buffer的大小由于日志每满1M写一次，每满1/3写一次，所以太大也没什么卵用，系统默认是15M。</p>\n<h5 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h5><p>alter system 命令增加了一个scope选项，参数有三个：<code>memory</code>、<code>spfile</code>、<code>both</code>。</p>\n<ul>\n<li>memory：只改变当前实例运行，重新启动数据库后失效。</li>\n<li>spfile：只改变spfile的设置，不改变当前实例运行，重启数据库后生效。</li>\n<li>both：同时改变实例及spfile，当前更改立即生效，重启后仍然生效。</li>\n</ul>\n<p>完整命令如下：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">system</span> <span class=\"keyword\">set</span> &lt;parameter_name&gt;=&lt;<span class=\"keyword\">value</span>&gt; <span class=\"keyword\">scope</span>=<span class=\"keyword\">memory</span>|<span class=\"keyword\">spfile</span>|<span class=\"keyword\">both</span> [<span class=\"keyword\">sid</span>=&lt;sid_name&gt;]</span><br></pre></td></tr></table></figure></p>\n<p>sid 用作RAC环境下指定不同实例。</p>\n<p><span id=\"sp\"></span></p>\n<ol>\n<li><p>如果当前实例使用的是pfile而非spfile，则scope=spfile或scope=both会出错；</p>\n</li>\n<li><p>如果实例以pfile启动，则scope的默认值是memory，若以spfile启动，默认为both；</p>\n</li>\n<li><p>有些参数必须重启才能生效，比如log_buffer；</p>\n</li>\n<li><p>scope不写默认是both。</p>\n</li>\n</ol>\n<p>log_buffer修改必须重启，所以scope=memory和both都报错。</p>\n<p><img src=\"/images/shouhuo/TIM截图20180315112242.png\" alt=\"log_buffer\"> </p>\n<p>最后查看依旧没有变化，需要重启后才生效。</p>"},{"title":"收获不止Oracle-体系结构","date":"2018-03-13T01:39:38.000Z","_content":"\n#### 体系结构\n啥也不说，先贴个图\n\n![image](/images/shouhuo/3.png)\n\n<!--more-->\n\n##### 通过执行计划了解缓存区\n执行两次，第二次有缓存，对比执行时间及统计信息。\n\n第一次：\n\n```\nSQL> create table t as select * from all_objects;                                                               \n表已创建。                                                                       \nSQL> desc t;                                                                                     \n 名称                                      是否为空? 类型                                                \n ----------------------------------------- -------- ----------------------------                 \n OWNER                                     NOT NULL VARCHAR2(30)                                 \n OBJECT_NAME                               NOT NULL VARCHAR2(30)                                 \n SUBOBJECT_NAME                                     VARCHAR2(30)                                 \n OBJECT_ID                                 NOT NULL NUMBER                                       \n DATA_OBJECT_ID                                     NUMBER                                       \n OBJECT_TYPE                                        VARCHAR2(19)                                 \n CREATED                                   NOT NULL DATE                                         \n LAST_DDL_TIME                             NOT NULL DATE                                         \n TIMESTAMP                                          VARCHAR2(19)                                 \n STATUS                                             VARCHAR2(7)                                  \n TEMPORARY                                          VARCHAR2(1)                                  \n GENERATED                                          VARCHAR2(1)                                  \n SECONDARY                                          VARCHAR2(1)                                  \n NAMESPACE                                 NOT NULL NUMBER                                       \n EDITION_NAME                                       VARCHAR2(30)                                 \n                                                                                                 \nSQL> create index idx_object_id on t(object_id);                                                 \n                                                                                                 \n索引已创建。                                                                                           \n                                                                                                 \nSQL> set autotrace on                                                                            \nSQL> set linesize 1000                                                                           \nSQL> set timing on                                                                               \nSQL> select object_name from t where object_id=29;                                               \n                                                                                                 \nOBJECT_NAME                                                                                      \n------------------------------                                                                   \nC_COBJ#                                                                                          \n                                                                                                 \n已用时间:  00: 00: 00.09                                                                             \n                                                                                                 \n执行计划                                                                                             \n----------------------------------------------------------                                       \nPlan hash value: 2041828949                                                                      \n                                                                                                 \n---------------------------------------------------------------------------------------------    \n| Id  | Operation                   | Name          | Rows  | Bytes | Cost (%CPU)| Time     |    \n---------------------------------------------------------------------------------------------    \n|   0 | SELECT STATEMENT            |               |     1 |    30 |     2   (0)| 00:00:01 |    \n|   1 |  TABLE ACCESS BY INDEX ROWID| T             |     1 |    30 |     2   (0)| 00:00:01 |    \n|*  2 |   INDEX RANGE SCAN          | IDX_OBJECT_ID |     1 |       |     1   (0)| 00:00:01 |    \n---------------------------------------------------------------------------------------------    \n                                                                                                 \nPredicate Information (identified by operation id):                                              \n---------------------------------------------------                                              \n                                                                                                 \n   2 - access(\"OBJECT_ID\"=29)                                                                    \n                                                                                                 \nNote                                                                                             \n-----                                                                                            \n   - dynamic sampling used for this statement (level=2)                                          \n                                                                                                 \n                                                                                                 \n统计信息                                                                                             \n----------------------------------------------------------                                       \n         52  recursive calls                                                                     \n          0  db block gets                                                                       \n         79  consistent gets                                                                     \n          1  physical reads                                                                      \n          0  redo size                                                                           \n        535  bytes sent via SQL*Net to client                                                    \n        520  bytes received via SQL*Net from client                                              \n          2  SQL*Net roundtrips to/from client                                                   \n          0  sorts (memory)                                                                      \n          0  sorts (disk)                                                                        \n          1  rows processed                               \nSQL>                                    \n```\n\n第二次：\n```\nSQL> select object_name from t where object_id=29;                                               \n                                                                                                 \nOBJECT_NAME                                                                                      \n------------------------------                                                                   \nC_COBJ#                                                                                          \n                                                                                                 \n已用时间:  00: 00: 00.01                                                                             \n                                                                                                 \n执行计划                                                                                             \n----------------------------------------------------------                                       \nPlan hash value: 2041828949                                                                      \n                                                                                                 \n---------------------------------------------------------------------------------------------    \n| Id  | Operation                   | Name          | Rows  | Bytes | Cost (%CPU)| Time     |    \n---------------------------------------------------------------------------------------------    \n|   0 | SELECT STATEMENT            |               |     1 |    30 |     2   (0)| 00:00:01 |    \n|   1 |  TABLE ACCESS BY INDEX ROWID| T             |     1 |    30 |     2   (0)| 00:00:01 |    \n|*  2 |   INDEX RANGE SCAN          | IDX_OBJECT_ID |     1 |       |     1   (0)| 00:00:01 |    \n---------------------------------------------------------------------------------------------    \n                                                                                                 \nPredicate Information (identified by operation id):                                              \n---------------------------------------------------                                              \n                                                                                                 \n   2 - access(\"OBJECT_ID\"=29)                                                                    \n                                                                                                 \nNote                                                                                             \n-----                                                                                            \n   - dynamic sampling used for this statement (level=2)                                          \n                                                                                                 \n                                                                                                 \n统计信息                                                                                             \n----------------------------------------------------------                                       \n          0  recursive calls                                                                     \n          0  db block gets                                                                       \n          4  consistent gets                                                                     \n          0  physical reads                                                                      \n          0  redo size                                                                           \n        535  bytes sent via SQL*Net to client                                                    \n        520  bytes received via SQL*Net from client                                              \n          2  SQL*Net roundtrips to/from client                                                   \n          0  sorts (memory)                                                                      \n          0  sorts (disk)                                                                        \n          1  rows processed                                                                      \n                                                                                                 \nSQL>                                                                                             \n```\n\n强制不用索引读，比较不同方案的COST，验证是否靠谱。利用`HIST`写法。\n\n原来的sql：\n    \n    select object_name from t where object_id=29;\n    \n不走索引：\n    \n    select /*+full(t)*/ object_name from t where object_id=29;\n    \n> 注意：要执行两遍，消除共享池解析、减少甚至消除物理读和递归调用。\n\n结果如下：\n```\nSQL> select /*+full(t)*/ object_name from t where object_id=29;\n\nOBJECT_NAME\n------------------------------\nC_COBJ#\n\n已用时间:  00: 00: 00.00\n\n执行计划\n----------------------------------------------------------\nPlan hash value: 1601196873\n\n--------------------------------------------------------------------------\n| Id  | Operation         | Name | Rows  | Bytes | Cost (%CPU)| Time     |\n--------------------------------------------------------------------------\n|   0 | SELECT STATEMENT  |      |     1 |    30 |   280   (1)| 00:00:04 |\n|*  1 |  TABLE ACCESS FULL| T    |     1 |    30 |   280   (1)| 00:00:04 |\n--------------------------------------------------------------------------\n\nPredicate Information (identified by operation id):\n---------------------------------------------------\n\n   1 - filter(\"OBJECT_ID\"=29)\n\nNote\n-----\n   - dynamic sampling used for this statement (level=2)\n\n\n统计信息\n----------------------------------------------------------\n          0  recursive calls\n          0  db block gets\n       1026  consistent gets\n          0  physical reads\n          0  redo size\n        535  bytes sent via SQL*Net to client\n        520  bytes received via SQL*Net from client\n          2  SQL*Net roundtrips to/from client\n          0  sorts (memory)\n          0  sorts (disk)\n          1  rows processed\n```\n\nCOST指CPU耗费：Oracle估计的该步骤的执行成本，用于说明SQL执行的代价，理论上越小越好（该值可能与实际有出入）\n\nTIME指Oracle估计的当前操作所需的时间\n\n-----\n##### 各个后台进程的作用\n\n更新时，COMMIT无法左右数据何时从数据缓冲区刷入到数据区。（当前SESSION可以立即查看到数据修改）缓冲区的数据积累到一定程度，再批量刷入到磁盘中。DBWR将缓冲区数据写入磁盘不是由commit决定的，而是由ckpt进程决定的，在此之前，LGWR会将数据写入日志文件，避免断电丢失数据。\n\n\nPMON：Processes Monitor，进程监视器，执行某些更新语句，未提交时进程崩溃了，PMON会自动回滚。除此之外还可以干预后台进程，遇到LGWR进程失败这样的严重问题，会终止实例，防止数据错乱。\n\nLCKn仅使用于RAC数据库，最多可有10个进程，用于实例间的封锁。\n\nRECO：用于分布式数据库的恢复，全称Distributed Database Recovery。\n\nCKPT：由Oracle的FAST_START_MTTR_TARGET参数控制，用于触发DBWR从数据缓冲区中写出数据到磁盘。CKPT执行越频繁，DBWR写出越频繁，DBWR写出越频繁越不能显示批量特性，但是数据库异常恢复的时候会越迅速。\n\nDBWR：负责吧数据缓冲区写出到磁盘里，该进程和CKPT相辅相成。因为是CKPT促成DBWR去写数据的。不过DBWR也和LGWR相关，因为DBWR想将数据缓冲区数据写到磁盘的时候，必须通知LGWR先完成日志缓冲区写到磁盘的动作后，方可开工。\n\nLGWR：把日志缓冲区的数据从内存写到磁盘的REDO文件里。完成数据库对象创建、更新数据等操作过程的记录。\n\n>LGWR工作相当繁重，记录的的日志顺序也很重要，多进程难以保证顺序，所以LGWR只能采用单进程。LGWR执行的规则如下：\n    \n    1. 每隔三秒钟，LGWR运行一次。\n    2.任何COMMIT触发LGWR运行一次。\n    3.DBWR要把数据从数据缓冲写到磁盘，触发LGWR运行一次。\n    4.日志缓冲区满三分之一或记录满1MB，触发LGWR运行一次。\n    5.联机日志文件切换也触发LGWR。\n    \nARCH：作用是在LGWR写日志写到需要覆盖重写的时候，触发ARCH进程去转义日志文件，复制出去形成归档日志文件，以免日志丢失。","source":"_posts/收获不止Oracle-体系结构.md","raw":"---\ntitle: 收获不止Oracle-体系结构\ndate: 2018-03-13 09:39:38\ntags: Oracle\ncategories: 收获不止Oracle\n---\n\n#### 体系结构\n啥也不说，先贴个图\n\n![image](/images/shouhuo/3.png)\n\n<!--more-->\n\n##### 通过执行计划了解缓存区\n执行两次，第二次有缓存，对比执行时间及统计信息。\n\n第一次：\n\n```\nSQL> create table t as select * from all_objects;                                                               \n表已创建。                                                                       \nSQL> desc t;                                                                                     \n 名称                                      是否为空? 类型                                                \n ----------------------------------------- -------- ----------------------------                 \n OWNER                                     NOT NULL VARCHAR2(30)                                 \n OBJECT_NAME                               NOT NULL VARCHAR2(30)                                 \n SUBOBJECT_NAME                                     VARCHAR2(30)                                 \n OBJECT_ID                                 NOT NULL NUMBER                                       \n DATA_OBJECT_ID                                     NUMBER                                       \n OBJECT_TYPE                                        VARCHAR2(19)                                 \n CREATED                                   NOT NULL DATE                                         \n LAST_DDL_TIME                             NOT NULL DATE                                         \n TIMESTAMP                                          VARCHAR2(19)                                 \n STATUS                                             VARCHAR2(7)                                  \n TEMPORARY                                          VARCHAR2(1)                                  \n GENERATED                                          VARCHAR2(1)                                  \n SECONDARY                                          VARCHAR2(1)                                  \n NAMESPACE                                 NOT NULL NUMBER                                       \n EDITION_NAME                                       VARCHAR2(30)                                 \n                                                                                                 \nSQL> create index idx_object_id on t(object_id);                                                 \n                                                                                                 \n索引已创建。                                                                                           \n                                                                                                 \nSQL> set autotrace on                                                                            \nSQL> set linesize 1000                                                                           \nSQL> set timing on                                                                               \nSQL> select object_name from t where object_id=29;                                               \n                                                                                                 \nOBJECT_NAME                                                                                      \n------------------------------                                                                   \nC_COBJ#                                                                                          \n                                                                                                 \n已用时间:  00: 00: 00.09                                                                             \n                                                                                                 \n执行计划                                                                                             \n----------------------------------------------------------                                       \nPlan hash value: 2041828949                                                                      \n                                                                                                 \n---------------------------------------------------------------------------------------------    \n| Id  | Operation                   | Name          | Rows  | Bytes | Cost (%CPU)| Time     |    \n---------------------------------------------------------------------------------------------    \n|   0 | SELECT STATEMENT            |               |     1 |    30 |     2   (0)| 00:00:01 |    \n|   1 |  TABLE ACCESS BY INDEX ROWID| T             |     1 |    30 |     2   (0)| 00:00:01 |    \n|*  2 |   INDEX RANGE SCAN          | IDX_OBJECT_ID |     1 |       |     1   (0)| 00:00:01 |    \n---------------------------------------------------------------------------------------------    \n                                                                                                 \nPredicate Information (identified by operation id):                                              \n---------------------------------------------------                                              \n                                                                                                 \n   2 - access(\"OBJECT_ID\"=29)                                                                    \n                                                                                                 \nNote                                                                                             \n-----                                                                                            \n   - dynamic sampling used for this statement (level=2)                                          \n                                                                                                 \n                                                                                                 \n统计信息                                                                                             \n----------------------------------------------------------                                       \n         52  recursive calls                                                                     \n          0  db block gets                                                                       \n         79  consistent gets                                                                     \n          1  physical reads                                                                      \n          0  redo size                                                                           \n        535  bytes sent via SQL*Net to client                                                    \n        520  bytes received via SQL*Net from client                                              \n          2  SQL*Net roundtrips to/from client                                                   \n          0  sorts (memory)                                                                      \n          0  sorts (disk)                                                                        \n          1  rows processed                               \nSQL>                                    \n```\n\n第二次：\n```\nSQL> select object_name from t where object_id=29;                                               \n                                                                                                 \nOBJECT_NAME                                                                                      \n------------------------------                                                                   \nC_COBJ#                                                                                          \n                                                                                                 \n已用时间:  00: 00: 00.01                                                                             \n                                                                                                 \n执行计划                                                                                             \n----------------------------------------------------------                                       \nPlan hash value: 2041828949                                                                      \n                                                                                                 \n---------------------------------------------------------------------------------------------    \n| Id  | Operation                   | Name          | Rows  | Bytes | Cost (%CPU)| Time     |    \n---------------------------------------------------------------------------------------------    \n|   0 | SELECT STATEMENT            |               |     1 |    30 |     2   (0)| 00:00:01 |    \n|   1 |  TABLE ACCESS BY INDEX ROWID| T             |     1 |    30 |     2   (0)| 00:00:01 |    \n|*  2 |   INDEX RANGE SCAN          | IDX_OBJECT_ID |     1 |       |     1   (0)| 00:00:01 |    \n---------------------------------------------------------------------------------------------    \n                                                                                                 \nPredicate Information (identified by operation id):                                              \n---------------------------------------------------                                              \n                                                                                                 \n   2 - access(\"OBJECT_ID\"=29)                                                                    \n                                                                                                 \nNote                                                                                             \n-----                                                                                            \n   - dynamic sampling used for this statement (level=2)                                          \n                                                                                                 \n                                                                                                 \n统计信息                                                                                             \n----------------------------------------------------------                                       \n          0  recursive calls                                                                     \n          0  db block gets                                                                       \n          4  consistent gets                                                                     \n          0  physical reads                                                                      \n          0  redo size                                                                           \n        535  bytes sent via SQL*Net to client                                                    \n        520  bytes received via SQL*Net from client                                              \n          2  SQL*Net roundtrips to/from client                                                   \n          0  sorts (memory)                                                                      \n          0  sorts (disk)                                                                        \n          1  rows processed                                                                      \n                                                                                                 \nSQL>                                                                                             \n```\n\n强制不用索引读，比较不同方案的COST，验证是否靠谱。利用`HIST`写法。\n\n原来的sql：\n    \n    select object_name from t where object_id=29;\n    \n不走索引：\n    \n    select /*+full(t)*/ object_name from t where object_id=29;\n    \n> 注意：要执行两遍，消除共享池解析、减少甚至消除物理读和递归调用。\n\n结果如下：\n```\nSQL> select /*+full(t)*/ object_name from t where object_id=29;\n\nOBJECT_NAME\n------------------------------\nC_COBJ#\n\n已用时间:  00: 00: 00.00\n\n执行计划\n----------------------------------------------------------\nPlan hash value: 1601196873\n\n--------------------------------------------------------------------------\n| Id  | Operation         | Name | Rows  | Bytes | Cost (%CPU)| Time     |\n--------------------------------------------------------------------------\n|   0 | SELECT STATEMENT  |      |     1 |    30 |   280   (1)| 00:00:04 |\n|*  1 |  TABLE ACCESS FULL| T    |     1 |    30 |   280   (1)| 00:00:04 |\n--------------------------------------------------------------------------\n\nPredicate Information (identified by operation id):\n---------------------------------------------------\n\n   1 - filter(\"OBJECT_ID\"=29)\n\nNote\n-----\n   - dynamic sampling used for this statement (level=2)\n\n\n统计信息\n----------------------------------------------------------\n          0  recursive calls\n          0  db block gets\n       1026  consistent gets\n          0  physical reads\n          0  redo size\n        535  bytes sent via SQL*Net to client\n        520  bytes received via SQL*Net from client\n          2  SQL*Net roundtrips to/from client\n          0  sorts (memory)\n          0  sorts (disk)\n          1  rows processed\n```\n\nCOST指CPU耗费：Oracle估计的该步骤的执行成本，用于说明SQL执行的代价，理论上越小越好（该值可能与实际有出入）\n\nTIME指Oracle估计的当前操作所需的时间\n\n-----\n##### 各个后台进程的作用\n\n更新时，COMMIT无法左右数据何时从数据缓冲区刷入到数据区。（当前SESSION可以立即查看到数据修改）缓冲区的数据积累到一定程度，再批量刷入到磁盘中。DBWR将缓冲区数据写入磁盘不是由commit决定的，而是由ckpt进程决定的，在此之前，LGWR会将数据写入日志文件，避免断电丢失数据。\n\n\nPMON：Processes Monitor，进程监视器，执行某些更新语句，未提交时进程崩溃了，PMON会自动回滚。除此之外还可以干预后台进程，遇到LGWR进程失败这样的严重问题，会终止实例，防止数据错乱。\n\nLCKn仅使用于RAC数据库，最多可有10个进程，用于实例间的封锁。\n\nRECO：用于分布式数据库的恢复，全称Distributed Database Recovery。\n\nCKPT：由Oracle的FAST_START_MTTR_TARGET参数控制，用于触发DBWR从数据缓冲区中写出数据到磁盘。CKPT执行越频繁，DBWR写出越频繁，DBWR写出越频繁越不能显示批量特性，但是数据库异常恢复的时候会越迅速。\n\nDBWR：负责吧数据缓冲区写出到磁盘里，该进程和CKPT相辅相成。因为是CKPT促成DBWR去写数据的。不过DBWR也和LGWR相关，因为DBWR想将数据缓冲区数据写到磁盘的时候，必须通知LGWR先完成日志缓冲区写到磁盘的动作后，方可开工。\n\nLGWR：把日志缓冲区的数据从内存写到磁盘的REDO文件里。完成数据库对象创建、更新数据等操作过程的记录。\n\n>LGWR工作相当繁重，记录的的日志顺序也很重要，多进程难以保证顺序，所以LGWR只能采用单进程。LGWR执行的规则如下：\n    \n    1. 每隔三秒钟，LGWR运行一次。\n    2.任何COMMIT触发LGWR运行一次。\n    3.DBWR要把数据从数据缓冲写到磁盘，触发LGWR运行一次。\n    4.日志缓冲区满三分之一或记录满1MB，触发LGWR运行一次。\n    5.联机日志文件切换也触发LGWR。\n    \nARCH：作用是在LGWR写日志写到需要覆盖重写的时候，触发ARCH进程去转义日志文件，复制出去形成归档日志文件，以免日志丢失。","slug":"收获不止Oracle-体系结构","published":1,"updated":"2018-03-29T00:38:53.171Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wyj0019b46wf97d8w68","content":"<h4 id=\"体系结构\"><a href=\"#体系结构\" class=\"headerlink\" title=\"体系结构\"></a>体系结构</h4><p>啥也不说，先贴个图</p>\n<p><img src=\"/images/shouhuo/3.png\" alt=\"image\"></p>\n<a id=\"more\"></a>\n<h5 id=\"通过执行计划了解缓存区\"><a href=\"#通过执行计划了解缓存区\" class=\"headerlink\" title=\"通过执行计划了解缓存区\"></a>通过执行计划了解缓存区</h5><p>执行两次，第二次有缓存，对比执行时间及统计信息。</p>\n<p>第一次：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL&gt; create table t as select * from all_objects;                                                               </span><br><span class=\"line\">表已创建。                                                                       </span><br><span class=\"line\">SQL&gt; desc t;                                                                                     </span><br><span class=\"line\"> 名称                                      是否为空? 类型                                                </span><br><span class=\"line\"> ----------------------------------------- -------- ----------------------------                 </span><br><span class=\"line\"> OWNER                                     NOT NULL VARCHAR2(30)                                 </span><br><span class=\"line\"> OBJECT_NAME                               NOT NULL VARCHAR2(30)                                 </span><br><span class=\"line\"> SUBOBJECT_NAME                                     VARCHAR2(30)                                 </span><br><span class=\"line\"> OBJECT_ID                                 NOT NULL NUMBER                                       </span><br><span class=\"line\"> DATA_OBJECT_ID                                     NUMBER                                       </span><br><span class=\"line\"> OBJECT_TYPE                                        VARCHAR2(19)                                 </span><br><span class=\"line\"> CREATED                                   NOT NULL DATE                                         </span><br><span class=\"line\"> LAST_DDL_TIME                             NOT NULL DATE                                         </span><br><span class=\"line\"> TIMESTAMP                                          VARCHAR2(19)                                 </span><br><span class=\"line\"> STATUS                                             VARCHAR2(7)                                  </span><br><span class=\"line\"> TEMPORARY                                          VARCHAR2(1)                                  </span><br><span class=\"line\"> GENERATED                                          VARCHAR2(1)                                  </span><br><span class=\"line\"> SECONDARY                                          VARCHAR2(1)                                  </span><br><span class=\"line\"> NAMESPACE                                 NOT NULL NUMBER                                       </span><br><span class=\"line\"> EDITION_NAME                                       VARCHAR2(30)                                 </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">SQL&gt; create index idx_object_id on t(object_id);                                                 </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">索引已创建。                                                                                           </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">SQL&gt; set autotrace on                                                                            </span><br><span class=\"line\">SQL&gt; set linesize 1000                                                                           </span><br><span class=\"line\">SQL&gt; set timing on                                                                               </span><br><span class=\"line\">SQL&gt; select object_name from t where object_id=29;                                               </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">OBJECT_NAME                                                                                      </span><br><span class=\"line\">------------------------------                                                                   </span><br><span class=\"line\">C_COBJ#                                                                                          </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">已用时间:  00: 00: 00.09                                                                             </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">执行计划                                                                                             </span><br><span class=\"line\">----------------------------------------------------------                                       </span><br><span class=\"line\">Plan hash value: 2041828949                                                                      </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">---------------------------------------------------------------------------------------------    </span><br><span class=\"line\">| Id  | Operation                   | Name          | Rows  | Bytes | Cost (%CPU)| Time     |    </span><br><span class=\"line\">---------------------------------------------------------------------------------------------    </span><br><span class=\"line\">|   0 | SELECT STATEMENT            |               |     1 |    30 |     2   (0)| 00:00:01 |    </span><br><span class=\"line\">|   1 |  TABLE ACCESS BY INDEX ROWID| T             |     1 |    30 |     2   (0)| 00:00:01 |    </span><br><span class=\"line\">|*  2 |   INDEX RANGE SCAN          | IDX_OBJECT_ID |     1 |       |     1   (0)| 00:00:01 |    </span><br><span class=\"line\">---------------------------------------------------------------------------------------------    </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">Predicate Information (identified by operation id):                                              </span><br><span class=\"line\">---------------------------------------------------                                              </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">   2 - access(&quot;OBJECT_ID&quot;=29)                                                                    </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">Note                                                                                             </span><br><span class=\"line\">-----                                                                                            </span><br><span class=\"line\">   - dynamic sampling used for this statement (level=2)                                          </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">统计信息                                                                                             </span><br><span class=\"line\">----------------------------------------------------------                                       </span><br><span class=\"line\">         52  recursive calls                                                                     </span><br><span class=\"line\">          0  db block gets                                                                       </span><br><span class=\"line\">         79  consistent gets                                                                     </span><br><span class=\"line\">          1  physical reads                                                                      </span><br><span class=\"line\">          0  redo size                                                                           </span><br><span class=\"line\">        535  bytes sent via SQL*Net to client                                                    </span><br><span class=\"line\">        520  bytes received via SQL*Net from client                                              </span><br><span class=\"line\">          2  SQL*Net roundtrips to/from client                                                   </span><br><span class=\"line\">          0  sorts (memory)                                                                      </span><br><span class=\"line\">          0  sorts (disk)                                                                        </span><br><span class=\"line\">          1  rows processed                               </span><br><span class=\"line\">SQL&gt;</span><br></pre></td></tr></table></figure>\n<p>第二次：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL&gt; select object_name from t where object_id=29;                                               </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">OBJECT_NAME                                                                                      </span><br><span class=\"line\">------------------------------                                                                   </span><br><span class=\"line\">C_COBJ#                                                                                          </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">已用时间:  00: 00: 00.01                                                                             </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">执行计划                                                                                             </span><br><span class=\"line\">----------------------------------------------------------                                       </span><br><span class=\"line\">Plan hash value: 2041828949                                                                      </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">---------------------------------------------------------------------------------------------    </span><br><span class=\"line\">| Id  | Operation                   | Name          | Rows  | Bytes | Cost (%CPU)| Time     |    </span><br><span class=\"line\">---------------------------------------------------------------------------------------------    </span><br><span class=\"line\">|   0 | SELECT STATEMENT            |               |     1 |    30 |     2   (0)| 00:00:01 |    </span><br><span class=\"line\">|   1 |  TABLE ACCESS BY INDEX ROWID| T             |     1 |    30 |     2   (0)| 00:00:01 |    </span><br><span class=\"line\">|*  2 |   INDEX RANGE SCAN          | IDX_OBJECT_ID |     1 |       |     1   (0)| 00:00:01 |    </span><br><span class=\"line\">---------------------------------------------------------------------------------------------    </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">Predicate Information (identified by operation id):                                              </span><br><span class=\"line\">---------------------------------------------------                                              </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">   2 - access(&quot;OBJECT_ID&quot;=29)                                                                    </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">Note                                                                                             </span><br><span class=\"line\">-----                                                                                            </span><br><span class=\"line\">   - dynamic sampling used for this statement (level=2)                                          </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">统计信息                                                                                             </span><br><span class=\"line\">----------------------------------------------------------                                       </span><br><span class=\"line\">          0  recursive calls                                                                     </span><br><span class=\"line\">          0  db block gets                                                                       </span><br><span class=\"line\">          4  consistent gets                                                                     </span><br><span class=\"line\">          0  physical reads                                                                      </span><br><span class=\"line\">          0  redo size                                                                           </span><br><span class=\"line\">        535  bytes sent via SQL*Net to client                                                    </span><br><span class=\"line\">        520  bytes received via SQL*Net from client                                              </span><br><span class=\"line\">          2  SQL*Net roundtrips to/from client                                                   </span><br><span class=\"line\">          0  sorts (memory)                                                                      </span><br><span class=\"line\">          0  sorts (disk)                                                                        </span><br><span class=\"line\">          1  rows processed                                                                      </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">SQL&gt;</span><br></pre></td></tr></table></figure></p>\n<p>强制不用索引读，比较不同方案的COST，验证是否靠谱。利用<code>HIST</code>写法。</p>\n<p>原来的sql：</p>\n<pre><code>select object_name from t where object_id=29;\n</code></pre><p>不走索引：</p>\n<pre><code>select /*+full(t)*/ object_name from t where object_id=29;\n</code></pre><blockquote>\n<p>注意：要执行两遍，消除共享池解析、减少甚至消除物理读和递归调用。</p>\n</blockquote>\n<p>结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL&gt; select /*+full(t)*/ object_name from t where object_id=29;</span><br><span class=\"line\"></span><br><span class=\"line\">OBJECT_NAME</span><br><span class=\"line\">------------------------------</span><br><span class=\"line\">C_COBJ#</span><br><span class=\"line\"></span><br><span class=\"line\">已用时间:  00: 00: 00.00</span><br><span class=\"line\"></span><br><span class=\"line\">执行计划</span><br><span class=\"line\">----------------------------------------------------------</span><br><span class=\"line\">Plan hash value: 1601196873</span><br><span class=\"line\"></span><br><span class=\"line\">--------------------------------------------------------------------------</span><br><span class=\"line\">| Id  | Operation         | Name | Rows  | Bytes | Cost (%CPU)| Time     |</span><br><span class=\"line\">--------------------------------------------------------------------------</span><br><span class=\"line\">|   0 | SELECT STATEMENT  |      |     1 |    30 |   280   (1)| 00:00:04 |</span><br><span class=\"line\">|*  1 |  TABLE ACCESS FULL| T    |     1 |    30 |   280   (1)| 00:00:04 |</span><br><span class=\"line\">--------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">Predicate Information (identified by operation id):</span><br><span class=\"line\">---------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">   1 - filter(&quot;OBJECT_ID&quot;=29)</span><br><span class=\"line\"></span><br><span class=\"line\">Note</span><br><span class=\"line\">-----</span><br><span class=\"line\">   - dynamic sampling used for this statement (level=2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">统计信息</span><br><span class=\"line\">----------------------------------------------------------</span><br><span class=\"line\">          0  recursive calls</span><br><span class=\"line\">          0  db block gets</span><br><span class=\"line\">       1026  consistent gets</span><br><span class=\"line\">          0  physical reads</span><br><span class=\"line\">          0  redo size</span><br><span class=\"line\">        535  bytes sent via SQL*Net to client</span><br><span class=\"line\">        520  bytes received via SQL*Net from client</span><br><span class=\"line\">          2  SQL*Net roundtrips to/from client</span><br><span class=\"line\">          0  sorts (memory)</span><br><span class=\"line\">          0  sorts (disk)</span><br><span class=\"line\">          1  rows processed</span><br></pre></td></tr></table></figure></p>\n<p>COST指CPU耗费：Oracle估计的该步骤的执行成本，用于说明SQL执行的代价，理论上越小越好（该值可能与实际有出入）</p>\n<p>TIME指Oracle估计的当前操作所需的时间</p>\n<hr>\n<h5 id=\"各个后台进程的作用\"><a href=\"#各个后台进程的作用\" class=\"headerlink\" title=\"各个后台进程的作用\"></a>各个后台进程的作用</h5><p>更新时，COMMIT无法左右数据何时从数据缓冲区刷入到数据区。（当前SESSION可以立即查看到数据修改）缓冲区的数据积累到一定程度，再批量刷入到磁盘中。DBWR将缓冲区数据写入磁盘不是由commit决定的，而是由ckpt进程决定的，在此之前，LGWR会将数据写入日志文件，避免断电丢失数据。</p>\n<p>PMON：Processes Monitor，进程监视器，执行某些更新语句，未提交时进程崩溃了，PMON会自动回滚。除此之外还可以干预后台进程，遇到LGWR进程失败这样的严重问题，会终止实例，防止数据错乱。</p>\n<p>LCKn仅使用于RAC数据库，最多可有10个进程，用于实例间的封锁。</p>\n<p>RECO：用于分布式数据库的恢复，全称Distributed Database Recovery。</p>\n<p>CKPT：由Oracle的FAST_START_MTTR_TARGET参数控制，用于触发DBWR从数据缓冲区中写出数据到磁盘。CKPT执行越频繁，DBWR写出越频繁，DBWR写出越频繁越不能显示批量特性，但是数据库异常恢复的时候会越迅速。</p>\n<p>DBWR：负责吧数据缓冲区写出到磁盘里，该进程和CKPT相辅相成。因为是CKPT促成DBWR去写数据的。不过DBWR也和LGWR相关，因为DBWR想将数据缓冲区数据写到磁盘的时候，必须通知LGWR先完成日志缓冲区写到磁盘的动作后，方可开工。</p>\n<p>LGWR：把日志缓冲区的数据从内存写到磁盘的REDO文件里。完成数据库对象创建、更新数据等操作过程的记录。</p>\n<blockquote>\n<p>LGWR工作相当繁重，记录的的日志顺序也很重要，多进程难以保证顺序，所以LGWR只能采用单进程。LGWR执行的规则如下：</p>\n</blockquote>\n<pre><code>1. 每隔三秒钟，LGWR运行一次。\n2.任何COMMIT触发LGWR运行一次。\n3.DBWR要把数据从数据缓冲写到磁盘，触发LGWR运行一次。\n4.日志缓冲区满三分之一或记录满1MB，触发LGWR运行一次。\n5.联机日志文件切换也触发LGWR。\n</code></pre><p>ARCH：作用是在LGWR写日志写到需要覆盖重写的时候，触发ARCH进程去转义日志文件，复制出去形成归档日志文件，以免日志丢失。</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"体系结构\"><a href=\"#体系结构\" class=\"headerlink\" title=\"体系结构\"></a>体系结构</h4><p>啥也不说，先贴个图</p>\n<p><img src=\"/images/shouhuo/3.png\" alt=\"image\"></p>","more":"<h5 id=\"通过执行计划了解缓存区\"><a href=\"#通过执行计划了解缓存区\" class=\"headerlink\" title=\"通过执行计划了解缓存区\"></a>通过执行计划了解缓存区</h5><p>执行两次，第二次有缓存，对比执行时间及统计信息。</p>\n<p>第一次：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL&gt; create table t as select * from all_objects;                                                               </span><br><span class=\"line\">表已创建。                                                                       </span><br><span class=\"line\">SQL&gt; desc t;                                                                                     </span><br><span class=\"line\"> 名称                                      是否为空? 类型                                                </span><br><span class=\"line\"> ----------------------------------------- -------- ----------------------------                 </span><br><span class=\"line\"> OWNER                                     NOT NULL VARCHAR2(30)                                 </span><br><span class=\"line\"> OBJECT_NAME                               NOT NULL VARCHAR2(30)                                 </span><br><span class=\"line\"> SUBOBJECT_NAME                                     VARCHAR2(30)                                 </span><br><span class=\"line\"> OBJECT_ID                                 NOT NULL NUMBER                                       </span><br><span class=\"line\"> DATA_OBJECT_ID                                     NUMBER                                       </span><br><span class=\"line\"> OBJECT_TYPE                                        VARCHAR2(19)                                 </span><br><span class=\"line\"> CREATED                                   NOT NULL DATE                                         </span><br><span class=\"line\"> LAST_DDL_TIME                             NOT NULL DATE                                         </span><br><span class=\"line\"> TIMESTAMP                                          VARCHAR2(19)                                 </span><br><span class=\"line\"> STATUS                                             VARCHAR2(7)                                  </span><br><span class=\"line\"> TEMPORARY                                          VARCHAR2(1)                                  </span><br><span class=\"line\"> GENERATED                                          VARCHAR2(1)                                  </span><br><span class=\"line\"> SECONDARY                                          VARCHAR2(1)                                  </span><br><span class=\"line\"> NAMESPACE                                 NOT NULL NUMBER                                       </span><br><span class=\"line\"> EDITION_NAME                                       VARCHAR2(30)                                 </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">SQL&gt; create index idx_object_id on t(object_id);                                                 </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">索引已创建。                                                                                           </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">SQL&gt; set autotrace on                                                                            </span><br><span class=\"line\">SQL&gt; set linesize 1000                                                                           </span><br><span class=\"line\">SQL&gt; set timing on                                                                               </span><br><span class=\"line\">SQL&gt; select object_name from t where object_id=29;                                               </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">OBJECT_NAME                                                                                      </span><br><span class=\"line\">------------------------------                                                                   </span><br><span class=\"line\">C_COBJ#                                                                                          </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">已用时间:  00: 00: 00.09                                                                             </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">执行计划                                                                                             </span><br><span class=\"line\">----------------------------------------------------------                                       </span><br><span class=\"line\">Plan hash value: 2041828949                                                                      </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">---------------------------------------------------------------------------------------------    </span><br><span class=\"line\">| Id  | Operation                   | Name          | Rows  | Bytes | Cost (%CPU)| Time     |    </span><br><span class=\"line\">---------------------------------------------------------------------------------------------    </span><br><span class=\"line\">|   0 | SELECT STATEMENT            |               |     1 |    30 |     2   (0)| 00:00:01 |    </span><br><span class=\"line\">|   1 |  TABLE ACCESS BY INDEX ROWID| T             |     1 |    30 |     2   (0)| 00:00:01 |    </span><br><span class=\"line\">|*  2 |   INDEX RANGE SCAN          | IDX_OBJECT_ID |     1 |       |     1   (0)| 00:00:01 |    </span><br><span class=\"line\">---------------------------------------------------------------------------------------------    </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">Predicate Information (identified by operation id):                                              </span><br><span class=\"line\">---------------------------------------------------                                              </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">   2 - access(&quot;OBJECT_ID&quot;=29)                                                                    </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">Note                                                                                             </span><br><span class=\"line\">-----                                                                                            </span><br><span class=\"line\">   - dynamic sampling used for this statement (level=2)                                          </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">统计信息                                                                                             </span><br><span class=\"line\">----------------------------------------------------------                                       </span><br><span class=\"line\">         52  recursive calls                                                                     </span><br><span class=\"line\">          0  db block gets                                                                       </span><br><span class=\"line\">         79  consistent gets                                                                     </span><br><span class=\"line\">          1  physical reads                                                                      </span><br><span class=\"line\">          0  redo size                                                                           </span><br><span class=\"line\">        535  bytes sent via SQL*Net to client                                                    </span><br><span class=\"line\">        520  bytes received via SQL*Net from client                                              </span><br><span class=\"line\">          2  SQL*Net roundtrips to/from client                                                   </span><br><span class=\"line\">          0  sorts (memory)                                                                      </span><br><span class=\"line\">          0  sorts (disk)                                                                        </span><br><span class=\"line\">          1  rows processed                               </span><br><span class=\"line\">SQL&gt;</span><br></pre></td></tr></table></figure>\n<p>第二次：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL&gt; select object_name from t where object_id=29;                                               </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">OBJECT_NAME                                                                                      </span><br><span class=\"line\">------------------------------                                                                   </span><br><span class=\"line\">C_COBJ#                                                                                          </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">已用时间:  00: 00: 00.01                                                                             </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">执行计划                                                                                             </span><br><span class=\"line\">----------------------------------------------------------                                       </span><br><span class=\"line\">Plan hash value: 2041828949                                                                      </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">---------------------------------------------------------------------------------------------    </span><br><span class=\"line\">| Id  | Operation                   | Name          | Rows  | Bytes | Cost (%CPU)| Time     |    </span><br><span class=\"line\">---------------------------------------------------------------------------------------------    </span><br><span class=\"line\">|   0 | SELECT STATEMENT            |               |     1 |    30 |     2   (0)| 00:00:01 |    </span><br><span class=\"line\">|   1 |  TABLE ACCESS BY INDEX ROWID| T             |     1 |    30 |     2   (0)| 00:00:01 |    </span><br><span class=\"line\">|*  2 |   INDEX RANGE SCAN          | IDX_OBJECT_ID |     1 |       |     1   (0)| 00:00:01 |    </span><br><span class=\"line\">---------------------------------------------------------------------------------------------    </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">Predicate Information (identified by operation id):                                              </span><br><span class=\"line\">---------------------------------------------------                                              </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">   2 - access(&quot;OBJECT_ID&quot;=29)                                                                    </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">Note                                                                                             </span><br><span class=\"line\">-----                                                                                            </span><br><span class=\"line\">   - dynamic sampling used for this statement (level=2)                                          </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">统计信息                                                                                             </span><br><span class=\"line\">----------------------------------------------------------                                       </span><br><span class=\"line\">          0  recursive calls                                                                     </span><br><span class=\"line\">          0  db block gets                                                                       </span><br><span class=\"line\">          4  consistent gets                                                                     </span><br><span class=\"line\">          0  physical reads                                                                      </span><br><span class=\"line\">          0  redo size                                                                           </span><br><span class=\"line\">        535  bytes sent via SQL*Net to client                                                    </span><br><span class=\"line\">        520  bytes received via SQL*Net from client                                              </span><br><span class=\"line\">          2  SQL*Net roundtrips to/from client                                                   </span><br><span class=\"line\">          0  sorts (memory)                                                                      </span><br><span class=\"line\">          0  sorts (disk)                                                                        </span><br><span class=\"line\">          1  rows processed                                                                      </span><br><span class=\"line\">                                                                                                 </span><br><span class=\"line\">SQL&gt;</span><br></pre></td></tr></table></figure></p>\n<p>强制不用索引读，比较不同方案的COST，验证是否靠谱。利用<code>HIST</code>写法。</p>\n<p>原来的sql：</p>\n<pre><code>select object_name from t where object_id=29;\n</code></pre><p>不走索引：</p>\n<pre><code>select /*+full(t)*/ object_name from t where object_id=29;\n</code></pre><blockquote>\n<p>注意：要执行两遍，消除共享池解析、减少甚至消除物理读和递归调用。</p>\n</blockquote>\n<p>结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL&gt; select /*+full(t)*/ object_name from t where object_id=29;</span><br><span class=\"line\"></span><br><span class=\"line\">OBJECT_NAME</span><br><span class=\"line\">------------------------------</span><br><span class=\"line\">C_COBJ#</span><br><span class=\"line\"></span><br><span class=\"line\">已用时间:  00: 00: 00.00</span><br><span class=\"line\"></span><br><span class=\"line\">执行计划</span><br><span class=\"line\">----------------------------------------------------------</span><br><span class=\"line\">Plan hash value: 1601196873</span><br><span class=\"line\"></span><br><span class=\"line\">--------------------------------------------------------------------------</span><br><span class=\"line\">| Id  | Operation         | Name | Rows  | Bytes | Cost (%CPU)| Time     |</span><br><span class=\"line\">--------------------------------------------------------------------------</span><br><span class=\"line\">|   0 | SELECT STATEMENT  |      |     1 |    30 |   280   (1)| 00:00:04 |</span><br><span class=\"line\">|*  1 |  TABLE ACCESS FULL| T    |     1 |    30 |   280   (1)| 00:00:04 |</span><br><span class=\"line\">--------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">Predicate Information (identified by operation id):</span><br><span class=\"line\">---------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">   1 - filter(&quot;OBJECT_ID&quot;=29)</span><br><span class=\"line\"></span><br><span class=\"line\">Note</span><br><span class=\"line\">-----</span><br><span class=\"line\">   - dynamic sampling used for this statement (level=2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">统计信息</span><br><span class=\"line\">----------------------------------------------------------</span><br><span class=\"line\">          0  recursive calls</span><br><span class=\"line\">          0  db block gets</span><br><span class=\"line\">       1026  consistent gets</span><br><span class=\"line\">          0  physical reads</span><br><span class=\"line\">          0  redo size</span><br><span class=\"line\">        535  bytes sent via SQL*Net to client</span><br><span class=\"line\">        520  bytes received via SQL*Net from client</span><br><span class=\"line\">          2  SQL*Net roundtrips to/from client</span><br><span class=\"line\">          0  sorts (memory)</span><br><span class=\"line\">          0  sorts (disk)</span><br><span class=\"line\">          1  rows processed</span><br></pre></td></tr></table></figure></p>\n<p>COST指CPU耗费：Oracle估计的该步骤的执行成本，用于说明SQL执行的代价，理论上越小越好（该值可能与实际有出入）</p>\n<p>TIME指Oracle估计的当前操作所需的时间</p>\n<hr>\n<h5 id=\"各个后台进程的作用\"><a href=\"#各个后台进程的作用\" class=\"headerlink\" title=\"各个后台进程的作用\"></a>各个后台进程的作用</h5><p>更新时，COMMIT无法左右数据何时从数据缓冲区刷入到数据区。（当前SESSION可以立即查看到数据修改）缓冲区的数据积累到一定程度，再批量刷入到磁盘中。DBWR将缓冲区数据写入磁盘不是由commit决定的，而是由ckpt进程决定的，在此之前，LGWR会将数据写入日志文件，避免断电丢失数据。</p>\n<p>PMON：Processes Monitor，进程监视器，执行某些更新语句，未提交时进程崩溃了，PMON会自动回滚。除此之外还可以干预后台进程，遇到LGWR进程失败这样的严重问题，会终止实例，防止数据错乱。</p>\n<p>LCKn仅使用于RAC数据库，最多可有10个进程，用于实例间的封锁。</p>\n<p>RECO：用于分布式数据库的恢复，全称Distributed Database Recovery。</p>\n<p>CKPT：由Oracle的FAST_START_MTTR_TARGET参数控制，用于触发DBWR从数据缓冲区中写出数据到磁盘。CKPT执行越频繁，DBWR写出越频繁，DBWR写出越频繁越不能显示批量特性，但是数据库异常恢复的时候会越迅速。</p>\n<p>DBWR：负责吧数据缓冲区写出到磁盘里，该进程和CKPT相辅相成。因为是CKPT促成DBWR去写数据的。不过DBWR也和LGWR相关，因为DBWR想将数据缓冲区数据写到磁盘的时候，必须通知LGWR先完成日志缓冲区写到磁盘的动作后，方可开工。</p>\n<p>LGWR：把日志缓冲区的数据从内存写到磁盘的REDO文件里。完成数据库对象创建、更新数据等操作过程的记录。</p>\n<blockquote>\n<p>LGWR工作相当繁重，记录的的日志顺序也很重要，多进程难以保证顺序，所以LGWR只能采用单进程。LGWR执行的规则如下：</p>\n</blockquote>\n<pre><code>1. 每隔三秒钟，LGWR运行一次。\n2.任何COMMIT触发LGWR运行一次。\n3.DBWR要把数据从数据缓冲写到磁盘，触发LGWR运行一次。\n4.日志缓冲区满三分之一或记录满1MB，触发LGWR运行一次。\n5.联机日志文件切换也触发LGWR。\n</code></pre><p>ARCH：作用是在LGWR写日志写到需要覆盖重写的时候，触发ARCH进程去转义日志文件，复制出去形成归档日志文件，以免日志丢失。</p>"},{"title":"收获不止Oracle-各种文件的位置","date":"2018-03-26T09:20:48.000Z","_content":"\n#### 参数文件位置\n\nshow parameter spfile;\n\n\n![show parameter spfile](/images/shouhuo/9.png)\n\n<!--more-->\n\n#### 控制文件位置\n\nshow parameter control;\n\n\n![控制文件](/images/shouhuo/10.png)\n\n#### 数据文件位置\n\nselect file_name from dba_data_files;\n\n\n![数据文件](/images/shouhuo/11.png)\n\n#### 日志文件位置：\n\nselect group#,member from v$logfile;\n\n\n![日志文件](/images/shouhuo/12.png)\n\n不知道为什么GROUP#那一列格式化后就变成了\\#\\#\\#\\#\\#\\#，本身是1,2,3。\n\n#### 归档文件位置\n\nshow parameter recovery\n\n\n![归档文件](/images/shouhuo/13.png)\n\n\n#### 告警日志文件（位于bdump目录下，以alert打头的文件）\n\nshow parameter dump\n\n![告警日志](/images/shouhuo/14.png)","source":"_posts/收获不止Oracle-各种文件的位置.md","raw":"---\ntitle: 收获不止Oracle-各种文件的位置\ndate: 2018-03-26 17:20:48\ntags: Oracle\ncategories: 收获不止Oracle\n---\n\n#### 参数文件位置\n\nshow parameter spfile;\n\n\n![show parameter spfile](/images/shouhuo/9.png)\n\n<!--more-->\n\n#### 控制文件位置\n\nshow parameter control;\n\n\n![控制文件](/images/shouhuo/10.png)\n\n#### 数据文件位置\n\nselect file_name from dba_data_files;\n\n\n![数据文件](/images/shouhuo/11.png)\n\n#### 日志文件位置：\n\nselect group#,member from v$logfile;\n\n\n![日志文件](/images/shouhuo/12.png)\n\n不知道为什么GROUP#那一列格式化后就变成了\\#\\#\\#\\#\\#\\#，本身是1,2,3。\n\n#### 归档文件位置\n\nshow parameter recovery\n\n\n![归档文件](/images/shouhuo/13.png)\n\n\n#### 告警日志文件（位于bdump目录下，以alert打头的文件）\n\nshow parameter dump\n\n![告警日志](/images/shouhuo/14.png)","slug":"收获不止Oracle-各种文件的位置","published":1,"updated":"2018-03-29T00:38:53.174Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wyl001bb46w8hb1wpcs","content":"<h4 id=\"参数文件位置\"><a href=\"#参数文件位置\" class=\"headerlink\" title=\"参数文件位置\"></a>参数文件位置</h4><p>show parameter spfile;</p>\n<p><img src=\"/images/shouhuo/9.png\" alt=\"show parameter spfile\"></p>\n<a id=\"more\"></a>\n<h4 id=\"控制文件位置\"><a href=\"#控制文件位置\" class=\"headerlink\" title=\"控制文件位置\"></a>控制文件位置</h4><p>show parameter control;</p>\n<p><img src=\"/images/shouhuo/10.png\" alt=\"控制文件\"></p>\n<h4 id=\"数据文件位置\"><a href=\"#数据文件位置\" class=\"headerlink\" title=\"数据文件位置\"></a>数据文件位置</h4><p>select file_name from dba_data_files;</p>\n<p><img src=\"/images/shouhuo/11.png\" alt=\"数据文件\"></p>\n<h4 id=\"日志文件位置：\"><a href=\"#日志文件位置：\" class=\"headerlink\" title=\"日志文件位置：\"></a>日志文件位置：</h4><p>select group#,member from v$logfile;</p>\n<p><img src=\"/images/shouhuo/12.png\" alt=\"日志文件\"></p>\n<p>不知道为什么GROUP#那一列格式化后就变成了######，本身是1,2,3。</p>\n<h4 id=\"归档文件位置\"><a href=\"#归档文件位置\" class=\"headerlink\" title=\"归档文件位置\"></a>归档文件位置</h4><p>show parameter recovery</p>\n<p><img src=\"/images/shouhuo/13.png\" alt=\"归档文件\"></p>\n<h4 id=\"告警日志文件（位于bdump目录下，以alert打头的文件）\"><a href=\"#告警日志文件（位于bdump目录下，以alert打头的文件）\" class=\"headerlink\" title=\"告警日志文件（位于bdump目录下，以alert打头的文件）\"></a>告警日志文件（位于bdump目录下，以alert打头的文件）</h4><p>show parameter dump</p>\n<p><img src=\"/images/shouhuo/14.png\" alt=\"告警日志\"></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"参数文件位置\"><a href=\"#参数文件位置\" class=\"headerlink\" title=\"参数文件位置\"></a>参数文件位置</h4><p>show parameter spfile;</p>\n<p><img src=\"/images/shouhuo/9.png\" alt=\"show parameter spfile\"></p>","more":"<h4 id=\"控制文件位置\"><a href=\"#控制文件位置\" class=\"headerlink\" title=\"控制文件位置\"></a>控制文件位置</h4><p>show parameter control;</p>\n<p><img src=\"/images/shouhuo/10.png\" alt=\"控制文件\"></p>\n<h4 id=\"数据文件位置\"><a href=\"#数据文件位置\" class=\"headerlink\" title=\"数据文件位置\"></a>数据文件位置</h4><p>select file_name from dba_data_files;</p>\n<p><img src=\"/images/shouhuo/11.png\" alt=\"数据文件\"></p>\n<h4 id=\"日志文件位置：\"><a href=\"#日志文件位置：\" class=\"headerlink\" title=\"日志文件位置：\"></a>日志文件位置：</h4><p>select group#,member from v$logfile;</p>\n<p><img src=\"/images/shouhuo/12.png\" alt=\"日志文件\"></p>\n<p>不知道为什么GROUP#那一列格式化后就变成了######，本身是1,2,3。</p>\n<h4 id=\"归档文件位置\"><a href=\"#归档文件位置\" class=\"headerlink\" title=\"归档文件位置\"></a>归档文件位置</h4><p>show parameter recovery</p>\n<p><img src=\"/images/shouhuo/13.png\" alt=\"归档文件\"></p>\n<h4 id=\"告警日志文件（位于bdump目录下，以alert打头的文件）\"><a href=\"#告警日志文件（位于bdump目录下，以alert打头的文件）\" class=\"headerlink\" title=\"告警日志文件（位于bdump目录下，以alert打头的文件）\"></a>告警日志文件（位于bdump目录下，以alert打头的文件）</h4><p>show parameter dump</p>\n<p><img src=\"/images/shouhuo/14.png\" alt=\"告警日志\"></p>"},{"title":"收获不止Oracle-提交和回滚","date":"2018-03-13T10:56:18.000Z","_content":"\n##### 提交\n\ncommit提交时并不一定会将缓存区的数据写入磁盘，从效率考虑肯定是积累到一定数量后批量保存。但就带来了安全问题，数据缓存区是内存空间，断电怎么办？其实commit时，日志会记录下当前操作。LGWR将操作写入redo日志，断电后只要再次执行，就不会丢失数据。\n\n<!--more-->\n\n\n运行过程中，批量刷出的数据占数据缓存区的比例越大，效率一般也越高，但断电后数据库重启恢复数据的时间也就更长，所以需要一个平衡。\n\n真正控制数据缓存区数据什么时候写入磁盘的是CKPT进程。CKPT进程触发DBWR写数据。而凡事要有记录，DBWR要等待LGWR将日志记录完后才工作，如果LGWR挂掉，DBWR还是不会听从CKPT命令而罢工。长时间不COMMIT提交，CKPT自动触发DBWR将数据写入磁盘。\n\nCKPT的触发时间可以用FAST START MTTR TARGET 参数调整。\n\n##### 回滚\n\n举个栗子。这样一条更新语句：update t set object_id=92 where object_id=29; \n\t\n1. 首先要查询object_id=29的记录，检查object_id=29的记录是否在缓存区中，不存在则从磁盘中读取到数据缓冲区中。\n2. 在回滚表空间的响应回滚段事务表上分配事务槽，从而在回滚表空间分配到空间。该动作需要记录日志写进日志缓存区。\n3. 在数据缓存区中创建object_id=29的前镜像，前镜像数据也会写进磁盘的数据文件里（回滚表空间的数据文件），当然也会记录日志并由LGWR写入磁盘形成redo文件。\n4. 准备工作做好，允许数据修改，先记录进日志缓存区。\n5. 如果用户提交，日志缓存区记录这个提交信息，然后把回滚段事务标记为非激活的INACTIVE状态，表示允许重写。\n6. 如果执行回滚，就从回滚段中将前镜像object_id=29的数据读出来，修改数据缓存区，完成回滚。\n\n\n![image](/images/2.png)\nUNDO_MANAGEMENT为AUTO表示是自动回滚段管理，回滚段空间不够时可以自动扩展；UNDO_RETENTION为900表示DML语句需要记录前镜像，当COMMIT后，表示回滚段保留的前镜像被打上了可以覆盖重新使用的标记，但要在900秒后方可允许；UNDO_TABLESPACE为UNDOTBS1一眼就明白了。","source":"_posts/收获不止Oracle-提交和回滚.md","raw":"---\ntitle: 收获不止Oracle-提交和回滚\ndate: 2018-03-13 18:56:18\ntags: 提交 回滚 Oracle\ncategories: 收获不止Oracle\n---\n\n##### 提交\n\ncommit提交时并不一定会将缓存区的数据写入磁盘，从效率考虑肯定是积累到一定数量后批量保存。但就带来了安全问题，数据缓存区是内存空间，断电怎么办？其实commit时，日志会记录下当前操作。LGWR将操作写入redo日志，断电后只要再次执行，就不会丢失数据。\n\n<!--more-->\n\n\n运行过程中，批量刷出的数据占数据缓存区的比例越大，效率一般也越高，但断电后数据库重启恢复数据的时间也就更长，所以需要一个平衡。\n\n真正控制数据缓存区数据什么时候写入磁盘的是CKPT进程。CKPT进程触发DBWR写数据。而凡事要有记录，DBWR要等待LGWR将日志记录完后才工作，如果LGWR挂掉，DBWR还是不会听从CKPT命令而罢工。长时间不COMMIT提交，CKPT自动触发DBWR将数据写入磁盘。\n\nCKPT的触发时间可以用FAST START MTTR TARGET 参数调整。\n\n##### 回滚\n\n举个栗子。这样一条更新语句：update t set object_id=92 where object_id=29; \n\t\n1. 首先要查询object_id=29的记录，检查object_id=29的记录是否在缓存区中，不存在则从磁盘中读取到数据缓冲区中。\n2. 在回滚表空间的响应回滚段事务表上分配事务槽，从而在回滚表空间分配到空间。该动作需要记录日志写进日志缓存区。\n3. 在数据缓存区中创建object_id=29的前镜像，前镜像数据也会写进磁盘的数据文件里（回滚表空间的数据文件），当然也会记录日志并由LGWR写入磁盘形成redo文件。\n4. 准备工作做好，允许数据修改，先记录进日志缓存区。\n5. 如果用户提交，日志缓存区记录这个提交信息，然后把回滚段事务标记为非激活的INACTIVE状态，表示允许重写。\n6. 如果执行回滚，就从回滚段中将前镜像object_id=29的数据读出来，修改数据缓存区，完成回滚。\n\n\n![image](/images/2.png)\nUNDO_MANAGEMENT为AUTO表示是自动回滚段管理，回滚段空间不够时可以自动扩展；UNDO_RETENTION为900表示DML语句需要记录前镜像，当COMMIT后，表示回滚段保留的前镜像被打上了可以覆盖重新使用的标记，但要在900秒后方可允许；UNDO_TABLESPACE为UNDOTBS1一眼就明白了。","slug":"收获不止Oracle-提交和回滚","published":1,"updated":"2018-03-29T00:38:53.175Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wyn001fb46w64rvar9m","content":"<h5 id=\"提交\"><a href=\"#提交\" class=\"headerlink\" title=\"提交\"></a>提交</h5><p>commit提交时并不一定会将缓存区的数据写入磁盘，从效率考虑肯定是积累到一定数量后批量保存。但就带来了安全问题，数据缓存区是内存空间，断电怎么办？其实commit时，日志会记录下当前操作。LGWR将操作写入redo日志，断电后只要再次执行，就不会丢失数据。</p>\n<a id=\"more\"></a>\n<p>运行过程中，批量刷出的数据占数据缓存区的比例越大，效率一般也越高，但断电后数据库重启恢复数据的时间也就更长，所以需要一个平衡。</p>\n<p>真正控制数据缓存区数据什么时候写入磁盘的是CKPT进程。CKPT进程触发DBWR写数据。而凡事要有记录，DBWR要等待LGWR将日志记录完后才工作，如果LGWR挂掉，DBWR还是不会听从CKPT命令而罢工。长时间不COMMIT提交，CKPT自动触发DBWR将数据写入磁盘。</p>\n<p>CKPT的触发时间可以用FAST START MTTR TARGET 参数调整。</p>\n<h5 id=\"回滚\"><a href=\"#回滚\" class=\"headerlink\" title=\"回滚\"></a>回滚</h5><p>举个栗子。这样一条更新语句：update t set object_id=92 where object_id=29; </p>\n<ol>\n<li>首先要查询object_id=29的记录，检查object_id=29的记录是否在缓存区中，不存在则从磁盘中读取到数据缓冲区中。</li>\n<li>在回滚表空间的响应回滚段事务表上分配事务槽，从而在回滚表空间分配到空间。该动作需要记录日志写进日志缓存区。</li>\n<li>在数据缓存区中创建object_id=29的前镜像，前镜像数据也会写进磁盘的数据文件里（回滚表空间的数据文件），当然也会记录日志并由LGWR写入磁盘形成redo文件。</li>\n<li>准备工作做好，允许数据修改，先记录进日志缓存区。</li>\n<li>如果用户提交，日志缓存区记录这个提交信息，然后把回滚段事务标记为非激活的INACTIVE状态，表示允许重写。</li>\n<li>如果执行回滚，就从回滚段中将前镜像object_id=29的数据读出来，修改数据缓存区，完成回滚。</li>\n</ol>\n<p><img src=\"/images/2.png\" alt=\"image\"><br>UNDO_MANAGEMENT为AUTO表示是自动回滚段管理，回滚段空间不够时可以自动扩展；UNDO_RETENTION为900表示DML语句需要记录前镜像，当COMMIT后，表示回滚段保留的前镜像被打上了可以覆盖重新使用的标记，但要在900秒后方可允许；UNDO_TABLESPACE为UNDOTBS1一眼就明白了。</p>\n","site":{"data":{}},"excerpt":"<h5 id=\"提交\"><a href=\"#提交\" class=\"headerlink\" title=\"提交\"></a>提交</h5><p>commit提交时并不一定会将缓存区的数据写入磁盘，从效率考虑肯定是积累到一定数量后批量保存。但就带来了安全问题，数据缓存区是内存空间，断电怎么办？其实commit时，日志会记录下当前操作。LGWR将操作写入redo日志，断电后只要再次执行，就不会丢失数据。</p>","more":"<p>运行过程中，批量刷出的数据占数据缓存区的比例越大，效率一般也越高，但断电后数据库重启恢复数据的时间也就更长，所以需要一个平衡。</p>\n<p>真正控制数据缓存区数据什么时候写入磁盘的是CKPT进程。CKPT进程触发DBWR写数据。而凡事要有记录，DBWR要等待LGWR将日志记录完后才工作，如果LGWR挂掉，DBWR还是不会听从CKPT命令而罢工。长时间不COMMIT提交，CKPT自动触发DBWR将数据写入磁盘。</p>\n<p>CKPT的触发时间可以用FAST START MTTR TARGET 参数调整。</p>\n<h5 id=\"回滚\"><a href=\"#回滚\" class=\"headerlink\" title=\"回滚\"></a>回滚</h5><p>举个栗子。这样一条更新语句：update t set object_id=92 where object_id=29; </p>\n<ol>\n<li>首先要查询object_id=29的记录，检查object_id=29的记录是否在缓存区中，不存在则从磁盘中读取到数据缓冲区中。</li>\n<li>在回滚表空间的响应回滚段事务表上分配事务槽，从而在回滚表空间分配到空间。该动作需要记录日志写进日志缓存区。</li>\n<li>在数据缓存区中创建object_id=29的前镜像，前镜像数据也会写进磁盘的数据文件里（回滚表空间的数据文件），当然也会记录日志并由LGWR写入磁盘形成redo文件。</li>\n<li>准备工作做好，允许数据修改，先记录进日志缓存区。</li>\n<li>如果用户提交，日志缓存区记录这个提交信息，然后把回滚段事务标记为非激活的INACTIVE状态，表示允许重写。</li>\n<li>如果执行回滚，就从回滚段中将前镜像object_id=29的数据读出来，修改数据缓存区，完成回滚。</li>\n</ol>\n<p><img src=\"/images/2.png\" alt=\"image\"><br>UNDO_MANAGEMENT为AUTO表示是自动回滚段管理，回滚段空间不够时可以自动扩展；UNDO_RETENTION为900表示DML语句需要记录前镜像，当COMMIT后，表示回滚段保留的前镜像被打上了可以覆盖重新使用的标记，但要在900秒后方可允许；UNDO_TABLESPACE为UNDOTBS1一眼就明白了。</p>"},{"title":"收获不止Oracle-数据一致读","date":"2018-03-14T10:18:30.000Z","_content":"\n### 一致读\n\n查询的记录由查询的那一时刻决定，后面即便变化了，也要根据回滚段保存的前镜像记录，取到当时时间点的数据。\n\n##### 原理\n\n首先需要了解两点\n\n1. SCN（System Change Number）。这是一个递增的数字，存在于Oracle的最小单位块里，当某块改变时SCN就会递增。\n\n2. 数据库的回滚事务槽（分配回滚空间），如果更新了某块，事务就被写入事务槽中。如果未提交或回滚，该块就存在活动事务，数据库读到该块时可以识别此种情况。\n\n<!--more-->\n\n![举个栗子](/images/common/jugelizi.jpg)\n\n1234四个块，读到第三个时，第四个在这期间已变化，块4的ITL槽中SCN会大于查询时的SCN，就会根据ITL中记录的undo块地址找到undo块，读取undo块中被修改前的旧的（正确的）数据，至于123块因为已经读过了，就不会再回头再读。\n\n不过并不是查询开始的SCN大于查询中的SCN就一定可以直接获取数据。如果有别的用户中途修改过数据未提交，也就是存在**活动事务**，依旧不会直接读取块中的数据。8点读，7点半更新了7点的数据但未提交，仍然会依据undo读取7点的数据。\n\nOracle在一致读的时候，首先看发起的SCN是否大于当前查询块的SCN，如果小于，毫无疑问从回滚段获取前镜像数据。如果SCN确实大于当前查询块的SCN，还要确保该块有没有活动事务，否则还是要去回滚段获取前镜像数据。","source":"_posts/收获不止Oracle-数据一致读.md","raw":"---\ntitle: 收获不止Oracle-数据一致读\ndate: 2018-03-14 18:18:30\ntags: Oracle 数据一致读\ncategories: 收获不止Oracle\n---\n\n### 一致读\n\n查询的记录由查询的那一时刻决定，后面即便变化了，也要根据回滚段保存的前镜像记录，取到当时时间点的数据。\n\n##### 原理\n\n首先需要了解两点\n\n1. SCN（System Change Number）。这是一个递增的数字，存在于Oracle的最小单位块里，当某块改变时SCN就会递增。\n\n2. 数据库的回滚事务槽（分配回滚空间），如果更新了某块，事务就被写入事务槽中。如果未提交或回滚，该块就存在活动事务，数据库读到该块时可以识别此种情况。\n\n<!--more-->\n\n![举个栗子](/images/common/jugelizi.jpg)\n\n1234四个块，读到第三个时，第四个在这期间已变化，块4的ITL槽中SCN会大于查询时的SCN，就会根据ITL中记录的undo块地址找到undo块，读取undo块中被修改前的旧的（正确的）数据，至于123块因为已经读过了，就不会再回头再读。\n\n不过并不是查询开始的SCN大于查询中的SCN就一定可以直接获取数据。如果有别的用户中途修改过数据未提交，也就是存在**活动事务**，依旧不会直接读取块中的数据。8点读，7点半更新了7点的数据但未提交，仍然会依据undo读取7点的数据。\n\nOracle在一致读的时候，首先看发起的SCN是否大于当前查询块的SCN，如果小于，毫无疑问从回滚段获取前镜像数据。如果SCN确实大于当前查询块的SCN，还要确保该块有没有活动事务，否则还是要去回滚段获取前镜像数据。","slug":"收获不止Oracle-数据一致读","published":1,"updated":"2018-03-29T00:38:53.176Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wyp001ib46w0w545dbq","content":"<h3 id=\"一致读\"><a href=\"#一致读\" class=\"headerlink\" title=\"一致读\"></a>一致读</h3><p>查询的记录由查询的那一时刻决定，后面即便变化了，也要根据回滚段保存的前镜像记录，取到当时时间点的数据。</p>\n<h5 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h5><p>首先需要了解两点</p>\n<ol>\n<li><p>SCN（System Change Number）。这是一个递增的数字，存在于Oracle的最小单位块里，当某块改变时SCN就会递增。</p>\n</li>\n<li><p>数据库的回滚事务槽（分配回滚空间），如果更新了某块，事务就被写入事务槽中。如果未提交或回滚，该块就存在活动事务，数据库读到该块时可以识别此种情况。</p>\n</li>\n</ol>\n<a id=\"more\"></a>\n<p><img src=\"/images/common/jugelizi.jpg\" alt=\"举个栗子\"></p>\n<p>1234四个块，读到第三个时，第四个在这期间已变化，块4的ITL槽中SCN会大于查询时的SCN，就会根据ITL中记录的undo块地址找到undo块，读取undo块中被修改前的旧的（正确的）数据，至于123块因为已经读过了，就不会再回头再读。</p>\n<p>不过并不是查询开始的SCN大于查询中的SCN就一定可以直接获取数据。如果有别的用户中途修改过数据未提交，也就是存在<strong>活动事务</strong>，依旧不会直接读取块中的数据。8点读，7点半更新了7点的数据但未提交，仍然会依据undo读取7点的数据。</p>\n<p>Oracle在一致读的时候，首先看发起的SCN是否大于当前查询块的SCN，如果小于，毫无疑问从回滚段获取前镜像数据。如果SCN确实大于当前查询块的SCN，还要确保该块有没有活动事务，否则还是要去回滚段获取前镜像数据。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"一致读\"><a href=\"#一致读\" class=\"headerlink\" title=\"一致读\"></a>一致读</h3><p>查询的记录由查询的那一时刻决定，后面即便变化了，也要根据回滚段保存的前镜像记录，取到当时时间点的数据。</p>\n<h5 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h5><p>首先需要了解两点</p>\n<ol>\n<li><p>SCN（System Change Number）。这是一个递增的数字，存在于Oracle的最小单位块里，当某块改变时SCN就会递增。</p>\n</li>\n<li><p>数据库的回滚事务槽（分配回滚空间），如果更新了某块，事务就被写入事务槽中。如果未提交或回滚，该块就存在活动事务，数据库读到该块时可以识别此种情况。</p>\n</li>\n</ol>","more":"<p><img src=\"/images/common/jugelizi.jpg\" alt=\"举个栗子\"></p>\n<p>1234四个块，读到第三个时，第四个在这期间已变化，块4的ITL槽中SCN会大于查询时的SCN，就会根据ITL中记录的undo块地址找到undo块，读取undo块中被修改前的旧的（正确的）数据，至于123块因为已经读过了，就不会再回头再读。</p>\n<p>不过并不是查询开始的SCN大于查询中的SCN就一定可以直接获取数据。如果有别的用户中途修改过数据未提交，也就是存在<strong>活动事务</strong>，依旧不会直接读取块中的数据。8点读，7点半更新了7点的数据但未提交，仍然会依据undo读取7点的数据。</p>\n<p>Oracle在一致读的时候，首先看发起的SCN是否大于当前查询块的SCN，如果小于，毫无疑问从回滚段获取前镜像数据。如果SCN确实大于当前查询块的SCN，还要确保该块有没有活动事务，否则还是要去回滚段获取前镜像数据。</p>"},{"title":"收获不止Oracle-进程查看及数据库启停","date":"2018-03-26T07:43:54.000Z","_content":"\n#### 进程的查看\n\nshow parameter instance_name查看实例名称\n\n![查看实例名称](/images/shouhuo/4.png)\n\n<!--more-->\n\n##### 修改归档模式\n\nARCH进程，有的数据库只是为了测试，不需要将日志归档，所以为了提高效率并未开启归档。\n\n![查看是否开启了归档](/images/shouhuo/5.png)\n\n更改归档模式需要重启数据库。首先将数据库置于mount状态，输入alter database archivelog，然后alter database open。如果是从归档修改为非归档，archivelog 变为 noarchivelog。\n\n![修改数据库归档模式](/images/shouhuo/6.png)\n\n---\n\n#### 数据库的启停\n##### 启动\n数据库启动分为三个阶段：**nomount**,**mount**和**open**。启动时可以输入startup启动，也可以使用startup nomount、startup mount、alter database open分别启动到三个阶段。\n\n1. **startup nomount**阶段。这个阶段主要是去读取参数文件（pfile和spfile），根据文件中的配置分配内存资源并启动相应后台进程，也就是创建实例。\n2. **startup mount**阶段。实例已经创建，根据参数文件指定的控制文件名称和地址去查找控制文件。找到就锁定该文件，控制文件里记录了数据库中数据文件、日志文件、检查点等非常重要的信息。锁定控制文件成功就表示数据库mount成功，为实例和数据库之间桥梁的搭建打下了基础。\n3. **alter database open**阶段。根据控制文件记录的信息，定位到数据库文件、日志文件等，从而正式开通了实例和数据库之间的桥梁。\n\n![三个启动阶段](/images/shouhuo/7.png)\n\n##### 关闭\n\n使用shutdown immediate命令。\n\n![关闭数据库](/images/shouhuo/8.png)","source":"_posts/收获不止Oracle-进程查看及数据库启停.md","raw":"---\ntitle: 收获不止Oracle-进程查看及数据库启停\ndate: 2018-03-26 15:43:54\ntags: Oracle 进程 启停\ncategories: 收获不止Oracle\n---\n\n#### 进程的查看\n\nshow parameter instance_name查看实例名称\n\n![查看实例名称](/images/shouhuo/4.png)\n\n<!--more-->\n\n##### 修改归档模式\n\nARCH进程，有的数据库只是为了测试，不需要将日志归档，所以为了提高效率并未开启归档。\n\n![查看是否开启了归档](/images/shouhuo/5.png)\n\n更改归档模式需要重启数据库。首先将数据库置于mount状态，输入alter database archivelog，然后alter database open。如果是从归档修改为非归档，archivelog 变为 noarchivelog。\n\n![修改数据库归档模式](/images/shouhuo/6.png)\n\n---\n\n#### 数据库的启停\n##### 启动\n数据库启动分为三个阶段：**nomount**,**mount**和**open**。启动时可以输入startup启动，也可以使用startup nomount、startup mount、alter database open分别启动到三个阶段。\n\n1. **startup nomount**阶段。这个阶段主要是去读取参数文件（pfile和spfile），根据文件中的配置分配内存资源并启动相应后台进程，也就是创建实例。\n2. **startup mount**阶段。实例已经创建，根据参数文件指定的控制文件名称和地址去查找控制文件。找到就锁定该文件，控制文件里记录了数据库中数据文件、日志文件、检查点等非常重要的信息。锁定控制文件成功就表示数据库mount成功，为实例和数据库之间桥梁的搭建打下了基础。\n3. **alter database open**阶段。根据控制文件记录的信息，定位到数据库文件、日志文件等，从而正式开通了实例和数据库之间的桥梁。\n\n![三个启动阶段](/images/shouhuo/7.png)\n\n##### 关闭\n\n使用shutdown immediate命令。\n\n![关闭数据库](/images/shouhuo/8.png)","slug":"收获不止Oracle-进程查看及数据库启停","published":1,"updated":"2018-03-29T00:38:53.178Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfqx7wys001mb46wxub6tgex","content":"<h4 id=\"进程的查看\"><a href=\"#进程的查看\" class=\"headerlink\" title=\"进程的查看\"></a>进程的查看</h4><p>show parameter instance_name查看实例名称</p>\n<p><img src=\"/images/shouhuo/4.png\" alt=\"查看实例名称\"></p>\n<a id=\"more\"></a>\n<h5 id=\"修改归档模式\"><a href=\"#修改归档模式\" class=\"headerlink\" title=\"修改归档模式\"></a>修改归档模式</h5><p>ARCH进程，有的数据库只是为了测试，不需要将日志归档，所以为了提高效率并未开启归档。</p>\n<p><img src=\"/images/shouhuo/5.png\" alt=\"查看是否开启了归档\"></p>\n<p>更改归档模式需要重启数据库。首先将数据库置于mount状态，输入alter database archivelog，然后alter database open。如果是从归档修改为非归档，archivelog 变为 noarchivelog。</p>\n<p><img src=\"/images/shouhuo/6.png\" alt=\"修改数据库归档模式\"></p>\n<hr>\n<h4 id=\"数据库的启停\"><a href=\"#数据库的启停\" class=\"headerlink\" title=\"数据库的启停\"></a>数据库的启停</h4><h5 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h5><p>数据库启动分为三个阶段：<strong>nomount</strong>,<strong>mount</strong>和<strong>open</strong>。启动时可以输入startup启动，也可以使用startup nomount、startup mount、alter database open分别启动到三个阶段。</p>\n<ol>\n<li><strong>startup nomount</strong>阶段。这个阶段主要是去读取参数文件（pfile和spfile），根据文件中的配置分配内存资源并启动相应后台进程，也就是创建实例。</li>\n<li><strong>startup mount</strong>阶段。实例已经创建，根据参数文件指定的控制文件名称和地址去查找控制文件。找到就锁定该文件，控制文件里记录了数据库中数据文件、日志文件、检查点等非常重要的信息。锁定控制文件成功就表示数据库mount成功，为实例和数据库之间桥梁的搭建打下了基础。</li>\n<li><strong>alter database open</strong>阶段。根据控制文件记录的信息，定位到数据库文件、日志文件等，从而正式开通了实例和数据库之间的桥梁。</li>\n</ol>\n<p><img src=\"/images/shouhuo/7.png\" alt=\"三个启动阶段\"></p>\n<h5 id=\"关闭\"><a href=\"#关闭\" class=\"headerlink\" title=\"关闭\"></a>关闭</h5><p>使用shutdown immediate命令。</p>\n<p><img src=\"/images/shouhuo/8.png\" alt=\"关闭数据库\"></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"进程的查看\"><a href=\"#进程的查看\" class=\"headerlink\" title=\"进程的查看\"></a>进程的查看</h4><p>show parameter instance_name查看实例名称</p>\n<p><img src=\"/images/shouhuo/4.png\" alt=\"查看实例名称\"></p>","more":"<h5 id=\"修改归档模式\"><a href=\"#修改归档模式\" class=\"headerlink\" title=\"修改归档模式\"></a>修改归档模式</h5><p>ARCH进程，有的数据库只是为了测试，不需要将日志归档，所以为了提高效率并未开启归档。</p>\n<p><img src=\"/images/shouhuo/5.png\" alt=\"查看是否开启了归档\"></p>\n<p>更改归档模式需要重启数据库。首先将数据库置于mount状态，输入alter database archivelog，然后alter database open。如果是从归档修改为非归档，archivelog 变为 noarchivelog。</p>\n<p><img src=\"/images/shouhuo/6.png\" alt=\"修改数据库归档模式\"></p>\n<hr>\n<h4 id=\"数据库的启停\"><a href=\"#数据库的启停\" class=\"headerlink\" title=\"数据库的启停\"></a>数据库的启停</h4><h5 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h5><p>数据库启动分为三个阶段：<strong>nomount</strong>,<strong>mount</strong>和<strong>open</strong>。启动时可以输入startup启动，也可以使用startup nomount、startup mount、alter database open分别启动到三个阶段。</p>\n<ol>\n<li><strong>startup nomount</strong>阶段。这个阶段主要是去读取参数文件（pfile和spfile），根据文件中的配置分配内存资源并启动相应后台进程，也就是创建实例。</li>\n<li><strong>startup mount</strong>阶段。实例已经创建，根据参数文件指定的控制文件名称和地址去查找控制文件。找到就锁定该文件，控制文件里记录了数据库中数据文件、日志文件、检查点等非常重要的信息。锁定控制文件成功就表示数据库mount成功，为实例和数据库之间桥梁的搭建打下了基础。</li>\n<li><strong>alter database open</strong>阶段。根据控制文件记录的信息，定位到数据库文件、日志文件等，从而正式开通了实例和数据库之间的桥梁。</li>\n</ol>\n<p><img src=\"/images/shouhuo/7.png\" alt=\"三个启动阶段\"></p>\n<h5 id=\"关闭\"><a href=\"#关闭\" class=\"headerlink\" title=\"关闭\"></a>关闭</h5><p>使用shutdown immediate命令。</p>\n<p><img src=\"/images/shouhuo/8.png\" alt=\"关闭数据库\"></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjfqx7wx70000b46wso2j43rt","category_id":"cjfqx7wxh0004b46w7sto1on0","_id":"cjfqx7wxx000fb46wxjlbpku8"},{"post_id":"cjfqx7wxc0002b46wbudz6sow","category_id":"cjfqx7wxh0004b46w7sto1on0","_id":"cjfqx7wy3000kb46w7bytzp96"},{"post_id":"cjfqx7wxu000db46w3r6en6v2","category_id":"cjfqx7wxh0004b46w7sto1on0","_id":"cjfqx7wy6000ob46w2chl0i16"},{"post_id":"cjfqx7wxk0006b46wxtqjxk6i","category_id":"cjfqx7wxx000eb46w6t460kav","_id":"cjfqx7wy8000rb46wfaiojnam"},{"post_id":"cjfqx7wy4000nb46woigu7gyu","category_id":"cjfqx7wxh0004b46w7sto1on0","_id":"cjfqx7wyd000xb46wajc3q2bj"},{"post_id":"cjfqx7wxm0007b46wh3i9fgxt","category_id":"cjfqx7wy3000lb46w6bnw78dr","_id":"cjfqx7wyf0010b46wwsu4bbv4"},{"post_id":"cjfqx7wxo0008b46wbaietwk8","category_id":"cjfqx7wy9000sb46wuqtl14r6","_id":"cjfqx7wyh0014b46wzgrduaym"},{"post_id":"cjfqx7wyc000wb46wj5dh5hkj","category_id":"cjfqx7wy9000sb46wuqtl14r6","_id":"cjfqx7wyj0018b46wtyksl1ex"},{"post_id":"cjfqx7wxs000cb46wxpyzkyqk","category_id":"cjfqx7wyd000yb46w1ik1wk1x","_id":"cjfqx7wyl001cb46wrrm2xgxm"},{"post_id":"cjfqx7wyi0015b46wrilnp4ny","category_id":"cjfqx7wy3000lb46w6bnw78dr","_id":"cjfqx7wyo001gb46w3gwwosi2"},{"post_id":"cjfqx7wyj0019b46wf97d8w68","category_id":"cjfqx7wy3000lb46w6bnw78dr","_id":"cjfqx7wyr001jb46wp93j7zv9"},{"post_id":"cjfqx7wxz000hb46wxuprpmsv","category_id":"cjfqx7wyi0016b46wn8mtvzsr","_id":"cjfqx7wyt001nb46wcqf2qjmf"},{"post_id":"cjfqx7wyl001bb46w8hb1wpcs","category_id":"cjfqx7wy3000lb46w6bnw78dr","_id":"cjfqx7wyt001pb46wefpb6o3r"},{"post_id":"cjfqx7wyn001fb46w64rvar9m","category_id":"cjfqx7wy3000lb46w6bnw78dr","_id":"cjfqx7wyu001rb46wfqgo05yc"},{"post_id":"cjfqx7wy1000jb46w1teckols","category_id":"cjfqx7wy9000sb46wuqtl14r6","_id":"cjfqx7wyv001ub46w49m0vyqo"},{"post_id":"cjfqx7wyp001ib46w0w545dbq","category_id":"cjfqx7wy3000lb46w6bnw78dr","_id":"cjfqx7wyw001wb46wyffroyiz"},{"post_id":"cjfqx7wys001mb46wxub6tgex","category_id":"cjfqx7wy3000lb46w6bnw78dr","_id":"cjfqx7wyw001yb46weztvokyx"},{"post_id":"cjfqx7wy7000qb46wpzj125ji","category_id":"cjfqx7wyr001kb46w2q8nqaap","_id":"cjfqx7wyx0021b46wpgm9emcd"},{"post_id":"cjfqx7wy9000ub46wxfzgdufy","category_id":"cjfqx7wyr001kb46w2q8nqaap","_id":"cjfqx7wyy0023b46wgrvozxmq"},{"post_id":"cjfqx7wye000zb46we7pe7y0r","category_id":"cjfqx7wyr001kb46w2q8nqaap","_id":"cjfqx7wyy0025b46wxo6bgyr6"},{"post_id":"cjfqx7wyg0013b46wd70fq45h","category_id":"cjfqx7wyr001kb46w2q8nqaap","_id":"cjfqx7wyz0027b46wkhdns82d"}],"PostTag":[{"post_id":"cjfqx7wx70000b46wso2j43rt","tag_id":"cjfqx7wxk0005b46w8nnqqszt","_id":"cjfqx7wxr000bb46wzuspsfsv"},{"post_id":"cjfqx7wxc0002b46wbudz6sow","tag_id":"cjfqx7wxp000ab46wvdvwnadu","_id":"cjfqx7wy1000ib46wp5al95pt"},{"post_id":"cjfqx7wxk0006b46wxtqjxk6i","tag_id":"cjfqx7wxy000gb46w9h4cpp27","_id":"cjfqx7wy7000pb46wxln40jin"},{"post_id":"cjfqx7wxm0007b46wh3i9fgxt","tag_id":"cjfqx7wy4000mb46wczcy6shp","_id":"cjfqx7wyb000vb46wdnog16rd"},{"post_id":"cjfqx7wxo0008b46wbaietwk8","tag_id":"cjfqx7wy9000tb46wkrla4ptq","_id":"cjfqx7wyg0012b46w6hb2sw8r"},{"post_id":"cjfqx7wxs000cb46wxpyzkyqk","tag_id":"cjfqx7wyf0011b46wjs9ji5d4","_id":"cjfqx7wyk001ab46wbdfod4eg"},{"post_id":"cjfqx7wxu000db46w3r6en6v2","tag_id":"cjfqx7wyj0017b46w8a6urjas","_id":"cjfqx7wyp001hb46ww16jyael"},{"post_id":"cjfqx7wxz000hb46wxuprpmsv","tag_id":"cjfqx7wym001eb46w0w34wboc","_id":"cjfqx7wyt001ob46wmfujjqrd"},{"post_id":"cjfqx7wy1000jb46w1teckols","tag_id":"cjfqx7wyr001lb46wv3k95vix","_id":"cjfqx7wyv001tb46wr7mol07n"},{"post_id":"cjfqx7wy4000nb46woigu7gyu","tag_id":"cjfqx7wyv001sb46wcn7cshux","_id":"cjfqx7wyw001zb46wyx3zijxi"},{"post_id":"cjfqx7wy7000qb46wpzj125ji","tag_id":"cjfqx7wyw001xb46w6gsfz6u5","_id":"cjfqx7wyy0024b46w3x19vrgf"},{"post_id":"cjfqx7wy9000ub46wxfzgdufy","tag_id":"cjfqx7wyx0022b46wcpqstfs9","_id":"cjfqx7wyz0028b46whurvj31c"},{"post_id":"cjfqx7wye000zb46we7pe7y0r","tag_id":"cjfqx7wyy0026b46w6ty9t00i","_id":"cjfqx7wz0002ab46wu2qg0791"},{"post_id":"cjfqx7wyg0013b46wd70fq45h","tag_id":"cjfqx7wyy0026b46w6ty9t00i","_id":"cjfqx7wz1002cb46w01yjlxnl"},{"post_id":"cjfqx7wyi0015b46wrilnp4ny","tag_id":"cjfqx7wz0002bb46wfrk2olqc","_id":"cjfqx7wz1002eb46wwqil57fz"},{"post_id":"cjfqx7wyj0019b46wf97d8w68","tag_id":"cjfqx7wz1002db46wwz8vtzr4","_id":"cjfqx7wz3002gb46wmjcuimce"},{"post_id":"cjfqx7wyl001bb46w8hb1wpcs","tag_id":"cjfqx7wz1002db46wwz8vtzr4","_id":"cjfqx7wz3002ib46whsot336c"},{"post_id":"cjfqx7wyn001fb46w64rvar9m","tag_id":"cjfqx7wz3002hb46wu3wdax3w","_id":"cjfqx7wz4002kb46wdmu2i1p1"},{"post_id":"cjfqx7wyp001ib46w0w545dbq","tag_id":"cjfqx7wz4002jb46wtr1zm648","_id":"cjfqx7wz4002mb46wzl94vzjb"},{"post_id":"cjfqx7wys001mb46wxub6tgex","tag_id":"cjfqx7wz4002lb46wctv00qh5","_id":"cjfqx7wz5002nb46wo8q6cc9c"}],"Tag":[{"name":"sublime","_id":"cjfqx7wxk0005b46w8nnqqszt"},{"name":"软件 sublime","_id":"cjfqx7wxp000ab46wvdvwnadu"},{"name":"R语言","_id":"cjfqx7wxy000gb46w9h4cpp27"},{"name":"oracle","_id":"cjfqx7wy4000mb46wczcy6shp"},{"name":"博客 hexo","_id":"cjfqx7wy9000tb46wkrla4ptq"},{"name":"python django","_id":"cjfqx7wyf0011b46wjs9ji5d4"},{"name":"sublime text","_id":"cjfqx7wyj0017b46w8a6urjas"},{"name":"软件 mysql","_id":"cjfqx7wym001eb46w0w34wboc"},{"name":"hexo 博客","_id":"cjfqx7wyr001lb46wv3k95vix"},{"name":"博客 Hexo","_id":"cjfqx7wyv001sb46wcn7cshux"},{"name":"Python R Excel 加权平均数","_id":"cjfqx7wyw001xb46w6gsfz6u5"},{"name":"数据分析 Python R Excel","_id":"cjfqx7wyx0022b46wcpqstfs9"},{"name":"数据分析","_id":"cjfqx7wyy0026b46w6ty9t00i"},{"name":"数据库 Oracle","_id":"cjfqx7wz0002bb46wfrk2olqc"},{"name":"Oracle","_id":"cjfqx7wz1002db46wwz8vtzr4"},{"name":"提交 回滚 Oracle","_id":"cjfqx7wz3002hb46wu3wdax3w"},{"name":"Oracle 数据一致读","_id":"cjfqx7wz4002jb46wtr1zm648"},{"name":"Oracle 进程 启停","_id":"cjfqx7wz4002lb46wctv00qh5"}]}}